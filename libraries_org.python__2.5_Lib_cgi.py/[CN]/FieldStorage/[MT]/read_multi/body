def read_multi(self, environ, keep_blank_values, strict_parsing):
    'Internal: read a part that is itself multipart.'
    ib = self.innerboundary
    if (not valid_boundary(ib)):
        raise ValueError, ('Invalid boundary in multipart form: %r' % (ib,))
    self.list = []
    klass = (self.FieldStorageClass or self.__class__)
    part = klass(self.fp, {}, ib, environ, keep_blank_values, strict_parsing)
    while (not part.done):
        headers = rfc822.Message(self.fp)
        part = klass(self.fp, headers, ib, environ, keep_blank_values, strict_parsing)
        self.list.append(part)
    self.skip_lines()
