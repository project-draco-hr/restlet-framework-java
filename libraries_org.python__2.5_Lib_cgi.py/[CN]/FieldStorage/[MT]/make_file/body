def make_file(self, binary=None):
    "Overridable: return a readable & writable file.\n\n        The file will be used as follows:\n        - data is written to it\n        - seek(0)\n        - data is read from it\n\n        The 'binary' argument is unused -- the file is always opened\n        in binary mode.\n\n        This version opens a temporary file for reading and writing,\n        and immediately deletes (unlinks) it.  The trick (on Unix!) is\n        that the file can still be used, but it can't be opened by\n        another process, and it will automatically be deleted when it\n        is closed or when the current process terminates.\n\n        If you want a more permanent file, you derive a class which\n        overrides this method.  If you want a visible temporary file\n        that is nevertheless automatically deleted when the script\n        terminates, try defining a __del__ method in a derived class\n        which unlinks the temporary files you have created.\n\n        "
    import tempfile
    return tempfile.TemporaryFile('w+b')
