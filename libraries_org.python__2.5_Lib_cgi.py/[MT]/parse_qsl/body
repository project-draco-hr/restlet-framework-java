def parse_qsl(qs, keep_blank_values=0, strict_parsing=0):
    'Parse a query given as a string argument.\n\n    Arguments:\n\n    qs: URL-encoded query string to be parsed\n\n    keep_blank_values: flag indicating whether blank values in\n        URL encoded queries should be treated as blank strings.  A\n        true value indicates that blanks should be retained as blank\n        strings.  The default false value indicates that blank values\n        are to be ignored and treated as if they were  not included.\n\n    strict_parsing: flag indicating what to do with parsing errors. If\n        false (the default), errors are silently ignored. If true,\n        errors raise a ValueError exception.\n\n    Returns a list, as G-d intended.\n    '
    pairs = [s2 for s1 in qs.split('&') for s2 in s1.split(';')]
    r = []
    for name_value in pairs:
        if ((not name_value) and (not strict_parsing)):
            continue
        nv = name_value.split('=', 1)
        if (len(nv) != 2):
            if strict_parsing:
                raise ValueError, ('bad query field: %r' % (name_value,))
            if keep_blank_values:
                nv.append('')
            else:
                continue
        if (len(nv[1]) or keep_blank_values):
            name = urllib.unquote(nv[0].replace('+', ' '))
            value = urllib.unquote(nv[1].replace('+', ' '))
            r.append((name, value))
    return r
