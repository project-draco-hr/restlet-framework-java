def parse(fp=None, environ=os.environ, keep_blank_values=0, strict_parsing=0):
    'Parse a query in the environment or from a file (default stdin)\n\n        Arguments, all optional:\n\n        fp              : file pointer; default: sys.stdin\n\n        environ         : environment dictionary; default: os.environ\n\n        keep_blank_values: flag indicating whether blank values in\n            URL encoded forms should be treated as blank strings.\n            A true value indicates that blanks should be retained as\n            blank strings.  The default false value indicates that\n            blank values are to be ignored and treated as if they were\n            not included.\n\n        strict_parsing: flag indicating what to do with parsing errors.\n            If false (the default), errors are silently ignored.\n            If true, errors raise a ValueError exception.\n    '
    if (fp is None):
        fp = sys.stdin
    if (not ('REQUEST_METHOD' in environ)):
        environ['REQUEST_METHOD'] = 'GET'
    if (environ['REQUEST_METHOD'] == 'POST'):
        (ctype, pdict) = parse_header(environ['CONTENT_TYPE'])
        if (ctype == 'multipart/form-data'):
            return parse_multipart(fp, pdict)
        elif (ctype == 'application/x-www-form-urlencoded'):
            clength = int(environ['CONTENT_LENGTH'])
            if (maxlen and (clength > maxlen)):
                raise ValueError, 'Maximum content length exceeded'
            qs = fp.read(clength)
        else:
            qs = ''
        if ('QUERY_STRING' in environ):
            if qs:
                qs = (qs + '&')
            qs = (qs + environ['QUERY_STRING'])
        elif sys.argv[1:]:
            if qs:
                qs = (qs + '&')
            qs = (qs + sys.argv[1])
        environ['QUERY_STRING'] = qs
    elif ('QUERY_STRING' in environ):
        qs = environ['QUERY_STRING']
    else:
        if sys.argv[1:]:
            qs = sys.argv[1]
        else:
            qs = ''
        environ['QUERY_STRING'] = qs
    return parse_qs(qs, keep_blank_values, strict_parsing)
