{
  this.handler=handler;
  this.call=call;
  this.relativePart=call.getRelativePart();
  if (this.relativePart.startsWith("/")) {
    this.relativePart=this.relativePart.substring(1);
  }
  this.targetUri=new Reference(handler.getRootUri() + this.relativePart).normalize().toString();
  if (!this.targetUri.startsWith(handler.getRootUri())) {
    this.targetUri=handler.getRootUri();
  }
  Call contextCall=getDirectory().getContext().get(this.targetUri);
  if ((contextCall.getOutput() != null) && contextCall.getOutput().getMediaType().equals(MediaType.TEXT_URI_LIST)) {
    this.targetDirectory=true;
    this.directoryContent=new ReferenceList(contextCall.getOutput());
    if (!this.targetUri.endsWith("/")) {
      this.targetUri+="/";
      this.relativePart+="/";
    }
    if (getDirectory().getIndexName() != null) {
      this.directoryUri=this.targetUri;
      this.baseName=getDirectory().getIndexName();
      this.targetUri=this.directoryUri + this.baseName;
    }
 else {
      this.directoryUri=this.targetUri;
      this.baseName=null;
    }
  }
 else {
    this.targetDirectory=false;
    int lastSlashIndex=targetUri.lastIndexOf('/');
    if (lastSlashIndex == -1) {
      this.directoryUri="";
      this.baseName=targetUri;
    }
 else {
      this.directoryUri=targetUri.substring(0,lastSlashIndex + 1);
      this.baseName=targetUri.substring(lastSlashIndex + 1);
    }
    contextCall=getDirectory().getContext().get(this.directoryUri);
    if ((contextCall.getOutput() != null) && contextCall.getOutput().getMediaType().equals(MediaType.TEXT_URI_LIST)) {
      this.directoryContent=new ReferenceList(contextCall.getOutput());
    }
  }
  if (this.handler.isNegotiationEnabled()) {
    int firstDotIndex=this.baseName.indexOf('.');
    if (firstDotIndex != -1) {
      this.baseExtensions=getExtensions(this.baseName);
      this.baseName=this.baseName.substring(0,firstDotIndex);
    }
  }
  logger.info("Converted base path: " + this.targetUri);
  logger.info("Converted base name: " + this.baseName);
}
