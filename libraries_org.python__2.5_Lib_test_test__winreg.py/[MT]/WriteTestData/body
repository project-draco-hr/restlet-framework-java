def WriteTestData(root_key):
    SetValue(root_key, test_key_name, REG_SZ, 'Default value')
    key = CreateKey(root_key, test_key_name)
    sub_key = CreateKey(key, 'sub_key')
    for (value_name, value_data, value_type) in test_data:
        SetValueEx(sub_key, value_name, 0, value_type, value_data)
    (nkeys, nvalues, since_mod) = QueryInfoKey(key)
    verify((nkeys == 1), 'Not the correct number of sub keys')
    verify((nvalues == 1), 'Not the correct number of values')
    (nkeys, nvalues, since_mod) = QueryInfoKey(sub_key)
    verify((nkeys == 0), 'Not the correct number of sub keys')
    verify((nvalues == len(test_data)), 'Not the correct number of values')
    int_sub_key = int(sub_key)
    CloseKey(sub_key)
    try:
        QueryInfoKey(int_sub_key)
        raise RuntimeError, 'It appears the CloseKey() function does not close the actual key!'
    except EnvironmentError:
        pass
    int_key = int(key)
    key.Close()
    try:
        QueryInfoKey(int_key)
        raise RuntimeError, 'It appears the key.Close() function does not close the actual key!'
    except EnvironmentError:
        pass
