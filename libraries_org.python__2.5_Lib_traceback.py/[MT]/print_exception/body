def print_exception(etype, value, tb, limit=None, file=None):
    'Print exception up to \'limit\' stack trace entries from \'tb\' to \'file\'.\n\n    This differs from print_tb() in the following ways: (1) if\n    traceback is not None, it prints a header "Traceback (most recent\n    call last):"; (2) it prints the exception type and value after the\n    stack trace; (3) if type is SyntaxError and value has the\n    appropriate format, it prints the line where the syntax error\n    occurred with a caret on the next line indicating the approximate\n    position of the error.\n    '
    if (file is None):
        file = sys.stderr
    if tb:
        _print(file, 'Traceback (most recent call last):')
        print_tb(tb, limit, file)
    lines = format_exception_only(etype, value)
    for line in lines[:(-1)]:
        _print(file, line, ' ')
    _print(file, lines[(-1)], '')
