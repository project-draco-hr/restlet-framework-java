def gen_lib_options(compiler, library_dirs, runtime_library_dirs, libraries):
    "Generate linker options for searching library directories and\n    linking with specific libraries.  'libraries' and 'library_dirs' are,\n    respectively, lists of library names (not filenames!) and search\n    directories.  Returns a list of command-line options suitable for use\n    with some compiler (depending on the two format strings passed in).\n    "
    lib_opts = []
    for dir in library_dirs:
        lib_opts.append(compiler.library_dir_option(dir))
    for dir in runtime_library_dirs:
        opt = compiler.runtime_library_dir_option(dir)
        if (type(opt) is ListType):
            lib_opts = (lib_opts + opt)
        else:
            lib_opts.append(opt)
    for lib in libraries:
        (lib_dir, lib_name) = os.path.split(lib)
        if lib_dir:
            lib_file = compiler.find_library_file([lib_dir], lib_name)
            if lib_file:
                lib_opts.append(lib_file)
            else:
                compiler.warn(("no library file corresponding to '%s' found (skipping)" % lib))
        else:
            lib_opts.append(compiler.library_option(lib))
    return lib_opts
