def gen_preprocess_options(macros, include_dirs):
    "Generate C pre-processor options (-D, -U, -I) as used by at least\n    two types of compilers: the typical Unix compiler and Visual C++.\n    'macros' is the usual thing, a list of 1- or 2-tuples, where (name,)\n    means undefine (-U) macro 'name', and (name,value) means define (-D)\n    macro 'name' to 'value'.  'include_dirs' is just a list of directory\n    names to be added to the header file search path (-I).  Returns a list\n    of command-line options suitable for either Unix compilers or Visual\n    C++.\n    "
    pp_opts = []
    for macro in macros:
        if (not ((type(macro) is TupleType) and (1 <= len(macro) <= 2))):
            raise TypeError, (("bad macro definition '%s': " + "each element of 'macros' list must be a 1- or 2-tuple") % macro)
        if (len(macro) == 1):
            pp_opts.append(('-U%s' % macro[0]))
        elif (len(macro) == 2):
            if (macro[1] is None):
                pp_opts.append(('-D%s' % macro[0]))
            else:
                pp_opts.append(('-D%s=%s' % macro))
    for dir in include_dirs:
        pp_opts.append(('-I%s' % dir))
    return pp_opts
