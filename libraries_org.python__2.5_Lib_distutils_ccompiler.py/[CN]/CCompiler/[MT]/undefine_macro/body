def undefine_macro(self, name):
    "Undefine a preprocessor macro for all compilations driven by\n        this compiler object.  If the same macro is defined by\n        'define_macro()' and undefined by 'undefine_macro()' the last call\n        takes precedence (including multiple redefinitions or\n        undefinitions).  If the macro is redefined/undefined on a\n        per-compilation basis (ie. in the call to 'compile()'), then that\n        takes precedence.\n        "
    i = self._find_macro(name)
    if (i is not None):
        del self.macros[i]
    undefn = (name,)
    self.macros.append(undefn)
