def _fix_lib_args(self, libraries, library_dirs, runtime_library_dirs):
    "Typecheck and fix up some of the arguments supplied to the\n        'link_*' methods.  Specifically: ensure that all arguments are\n        lists, and augment them with their permanent versions\n        (eg. 'self.libraries' augments 'libraries').  Return a tuple with\n        fixed versions of all arguments.\n        "
    if (libraries is None):
        libraries = self.libraries
    elif (type(libraries) in (ListType, TupleType)):
        libraries = (list(libraries) + (self.libraries or []))
    else:
        raise TypeError, "'libraries' (if supplied) must be a list of strings"
    if (library_dirs is None):
        library_dirs = self.library_dirs
    elif (type(library_dirs) in (ListType, TupleType)):
        library_dirs = (list(library_dirs) + (self.library_dirs or []))
    else:
        raise TypeError, "'library_dirs' (if supplied) must be a list of strings"
    if (runtime_library_dirs is None):
        runtime_library_dirs = self.runtime_library_dirs
    elif (type(runtime_library_dirs) in (ListType, TupleType)):
        runtime_library_dirs = (list(runtime_library_dirs) + (self.runtime_library_dirs or []))
    else:
        raise TypeError, ("'runtime_library_dirs' (if supplied) " + 'must be a list of strings')
    return (libraries, library_dirs, runtime_library_dirs)
