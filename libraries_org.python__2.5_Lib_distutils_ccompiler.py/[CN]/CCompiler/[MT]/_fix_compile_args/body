def _fix_compile_args(self, output_dir, macros, include_dirs):
    "Typecheck and fix-up some of the arguments to the 'compile()'\n        method, and return fixed-up values.  Specifically: if 'output_dir'\n        is None, replaces it with 'self.output_dir'; ensures that 'macros'\n        is a list, and augments it with 'self.macros'; ensures that\n        'include_dirs' is a list, and augments it with 'self.include_dirs'.\n        Guarantees that the returned values are of the correct type,\n        i.e. for 'output_dir' either string or None, and for 'macros' and\n        'include_dirs' either list or None.\n        "
    if (output_dir is None):
        output_dir = self.output_dir
    elif (type(output_dir) is not StringType):
        raise TypeError, "'output_dir' must be a string or None"
    if (macros is None):
        macros = self.macros
    elif (type(macros) is ListType):
        macros = (macros + (self.macros or []))
    else:
        raise TypeError, "'macros' (if supplied) must be a list of tuples"
    if (include_dirs is None):
        include_dirs = self.include_dirs
    elif (type(include_dirs) in (ListType, TupleType)):
        include_dirs = (list(include_dirs) + (self.include_dirs or []))
    else:
        raise TypeError, "'include_dirs' (if supplied) must be a list of strings"
    return (output_dir, macros, include_dirs)
