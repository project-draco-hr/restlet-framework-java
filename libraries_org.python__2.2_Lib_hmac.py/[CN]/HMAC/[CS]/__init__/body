def __init__(self, key, msg=None, digestmod=None):
    'Create a new HMAC object.\n\n        key:       key for the keyed hash object.\n        msg:       Initial input for the hash, if provided.\n        digestmod: A module supporting PEP 247. Defaults to the md5 module.\n        '
    if (digestmod == None):
        import md5
        digestmod = md5
    self.digestmod = digestmod
    self.outer = digestmod.new()
    self.inner = digestmod.new()
    self.digest_size = digestmod.digest_size
    blocksize = 64
    ipad = ('6' * blocksize)
    opad = ('\\' * blocksize)
    if (len(key) > blocksize):
        key = digestmod.new(key).digest()
    key = (key + (chr(0) * (blocksize - len(key))))
    self.outer.update(_strxor(key, opad))
    self.inner.update(_strxor(key, ipad))
    if msg:
        self.update(msg)
