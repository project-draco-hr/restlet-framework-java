{
  Status result=null;
  try {
    final Representation entity=request.getEntity();
    for (    Parameter header : getRequestHeaders()) {
      getHttpMethod().setRequestHeader(header.getName(),header.getValue());
    }
    if ((entity != null) && (getHttpMethod() instanceof EntityEnclosingMethod)) {
      EntityEnclosingMethod eem=(EntityEnclosingMethod)getHttpMethod();
      eem.setRequestEntity(new RequestEntity(){
        public long getContentLength(){
          return entity.getSize();
        }
        public String getContentType(){
          return (entity.getMediaType() != null) ? entity.getMediaType().toString() : null;
        }
        public boolean isRepeatable(){
          return !entity.isTransient();
        }
        public void writeRequest(        OutputStream os) throws IOException {
          entity.write(os);
        }
      }
);
    }
    this.clientHelper.getHttpClient().executeMethod(getHttpMethod());
    result=new Status(getStatusCode(),null,getReasonPhrase(),null);
    if (getHttpMethod().getResponseBodyAsStream() == null) {
      getHttpMethod().releaseConnection();
    }
  }
 catch (  IOException ioe) {
    this.clientHelper.getLogger().log(Level.WARNING,"An error occured during the communication with the remote HTTP server.",ioe);
    result=new Status(Status.CONNECTOR_ERROR_COMMUNICATION,"Unable to complete the HTTP call due to a communication error with the remote server. " + ioe.getMessage());
    getHttpMethod().releaseConnection();
  }
  return result;
}
