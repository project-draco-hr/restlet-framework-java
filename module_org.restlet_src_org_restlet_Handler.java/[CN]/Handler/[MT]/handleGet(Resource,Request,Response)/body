{
  Representation representation=null;
  if (isNegotiateContent()) {
    List<Representation> variants=target.getVariants();
    if ((variants == null) || (variants.isEmpty())) {
      response.setStatus(Status.CLIENT_ERROR_NOT_FOUND);
    }
 else {
      Representation preferredVariant=response.getRequest().getClientInfo().getPreferredVariant(variants);
      response.getDimensions().add(Dimension.CHARACTER_SET);
      response.getDimensions().add(Dimension.ENCODING);
      response.getDimensions().add(Dimension.LANGUAGE);
      response.getDimensions().add(Dimension.MEDIA_TYPE);
      if (preferredVariant == null) {
        response.setStatus(Status.CLIENT_ERROR_NOT_ACCEPTABLE);
        ReferenceList refs=new ReferenceList(variants.size());
        for (        Representation variant : variants) {
          if (variant.getIdentifier() != null) {
            refs.add(variant.getIdentifier());
          }
        }
        response.setEntity(refs.getTextRepresentation());
      }
 else {
        response.setEntity(preferredVariant);
        representation=preferredVariant;
      }
    }
    representation=response.getEntity();
  }
 else {
    List<Representation> variants=target.getVariants();
    if (variants.isEmpty()) {
      response.setStatus(Status.CLIENT_ERROR_NOT_FOUND);
    }
 else     if (variants.size() == 1) {
      response.setEntity(variants.get(0));
      representation=response.getEntity();
    }
 else {
      ReferenceList variantRefs=new ReferenceList();
      for (      Representation variant : variants) {
        if (variant.getIdentifier() != null) {
          variantRefs.add(variant.getIdentifier());
        }
 else {
          getLogger().warning("A resource with multiple variants should provide and identifier for each variants when content negotiation is turned off");
        }
      }
      if (variantRefs.size() > 0) {
        response.setStatus(Status.REDIRECTION_MULTIPLE_CHOICES);
        response.setEntity(variantRefs.getTextRepresentation());
      }
 else {
        response.setStatus(Status.CLIENT_ERROR_NOT_FOUND);
      }
    }
  }
  if (representation != null && hasPreconditions(request.getConditions())) {
    Status status=getConditionalStatus(request.getConditions(),request.getMethod(),representation);
    if (status != null) {
      response.setStatus(status);
      response.setEntity(null);
    }
  }
}
