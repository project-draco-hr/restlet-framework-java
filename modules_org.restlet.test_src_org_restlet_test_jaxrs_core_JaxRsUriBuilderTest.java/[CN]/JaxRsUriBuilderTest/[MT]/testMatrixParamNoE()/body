{
  this.uriBuilder1NoE.matrixParam("mp1","mv1");
  assertEqualsURI(URI_1 + ";mp1=mv1",this.uriBuilder1NoE);
  this.uriBuilder1NoE.matrixParam("mp1","mv2");
  assertEqualsURI(URI_1 + ";mp1=mv1;mp1=mv2",this.uriBuilder1NoE);
  this.uriBuilder1NoE.matrixParam("mp3","mv3");
  try {
    assertEqualsURI(URI_1 + ";mp1=mv1;mp1=mv2;mp3=mv3",this.uriBuilder1NoE);
  }
 catch (  final AssertionFailedError afe) {
    assertEqualsURI(URI_1 + ";mp3=mv3;mp1=mv1;mp1=mv2",this.uriBuilder1NoE);
  }
  this.uriBuilder1NoE.replaceMatrixParams("mp4=mv4");
  assertEqualsURI(URI_1 + ";mp4=mv4",this.uriBuilder1NoE);
  this.uriBuilder1NoE.replaceMatrixParams("");
  assertEquals(new URI(URI_1 + ";"),this.uriBuilder1NoE.build());
  this.uriBuilder1NoE.replaceMatrixParams(null);
  assertEquals(URI_1,this.uriBuilder1NoE.build());
  try {
    this.uriBuilder1NoE.matrixParam("jkj$sdf","ij a%20");
    fail();
  }
 catch (  final IllegalArgumentException iae) {
  }
  assertEquals(URI_1,this.uriBuilder1NoE.build());
}
