import os
from test_support import verify, TESTFN
from UserList import UserList
l = UserList(['1', '2'])
f = open(TESTFN, 'wb')
f.writelines(l)
f.close()
f = open(TESTFN, 'rb')
buf = f.read()
f.close()
verify((buf == '12'))
f = open(TESTFN, 'wb')
try:
    f.writelines([1, 2, 3])
except TypeError:
    pass
else:
    print 'writelines accepted sequence of integers'
f.close()
f = open(TESTFN, 'wb')
l = UserList([1, 2, 3])
try:
    f.writelines(l)
except TypeError:
    pass
else:
    print 'writelines accepted sequence of integers'
f.close()
f = open(TESTFN, 'wb')
try:
    f.writelines([NonString(), NonString()])
except TypeError:
    pass
else:
    print 'writelines accepted sequence of non-string objects'
f.close()
bad_mode = 'qwerty'
try:
    open(TESTFN, bad_mode)
except IOError as msg:
    if (msg[0] != 0):
        s = str(msg)
        if ((s.find(TESTFN) != (-1)) or (s.find(bad_mode) == (-1))):
            print ('bad error message for invalid mode: %s' % s)
else:
    print ('no error for invalid mode: %s' % bad_mode)
os.unlink(TESTFN)
