{
  Representation result=null;
  long contentLength=HeaderUtils.getContentLength(headers);
  boolean chunkedEncoding=HeaderUtils.isChunkedEncoding(headers);
  if ((contentLength != Representation.UNKNOWN_SIZE && contentLength != 0) || chunkedEncoding) {
    InputStream inboundEntityStream=getInboundEntityStream(contentLength,chunkedEncoding);
    ReadableByteChannel inboundEntityChannel=getInboundEntityChannel(contentLength,chunkedEncoding);
    if (inboundEntityStream != null) {
      result=new InputRepresentation(inboundEntityStream,null,contentLength){
        @Override public void release(){
          if (getHelper().isTracing()) {
synchronized (System.out) {
              System.out.println("\n");
            }
          }
          super.release();
          setInboundBusy(false);
        }
      }
;
    }
 else     if (inboundEntityChannel != null) {
      result=new ReadableRepresentation(inboundEntityChannel,null,contentLength){
        @Override public void release(){
          super.release();
          setInboundBusy(false);
        }
      }
;
    }
    result.setSize(contentLength);
  }
 else {
    result=new EmptyRepresentation();
    setInboundBusy(false);
  }
  if (headers != null) {
    result=HeaderUtils.copyResponseEntityHeaders(headers,result);
  }
  return result;
}
