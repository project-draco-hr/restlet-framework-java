def test_values(self):
    entries = pwd.getpwall()
    entriesbyname = {}
    entriesbyuid = {}
    for e in entries:
        self.assertEqual(len(e), 7)
        self.assertEqual(e[0], e.pw_name)
        self.assert_(isinstance(e.pw_name, basestring))
        self.assertEqual(e[1], e.pw_passwd)
        self.assert_(isinstance(e.pw_passwd, basestring))
        self.assertEqual(e[2], e.pw_uid)
        self.assert_(isinstance(e.pw_uid, int))
        self.assertEqual(e[3], e.pw_gid)
        self.assert_(isinstance(e.pw_gid, int))
        self.assertEqual(e[4], e.pw_gecos)
        self.assert_(isinstance(e.pw_gecos, basestring))
        self.assertEqual(e[5], e.pw_dir)
        self.assert_(isinstance(e.pw_dir, basestring))
        self.assertEqual(e[6], e.pw_shell)
        self.assert_(isinstance(e.pw_shell, basestring))
        entriesbyname.setdefault(e.pw_name, []).append(e)
        entriesbyuid.setdefault(e.pw_uid, []).append(e)
    if (len(entries) > 1000):
        return
    for e in entries:
        if ((not e[0]) or (e[0] == '+')):
            continue
        self.assert_((pwd.getpwnam(e.pw_name) in entriesbyname[e.pw_name]))
        self.assert_((pwd.getpwuid(e.pw_uid) in entriesbyuid[e.pw_uid]))
