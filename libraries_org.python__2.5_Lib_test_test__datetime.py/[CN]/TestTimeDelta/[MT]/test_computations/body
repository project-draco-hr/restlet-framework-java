def test_computations(self):
    eq = self.assertEqual
    td = timedelta
    a = td(7)
    b = td(0, 60)
    c = td(0, 0, 1000)
    eq(((a + b) + c), td(7, 60, 1000))
    eq((a - b), td(6, ((24 * 3600) - 60)))
    eq((- a), td((-7)))
    eq((+ a), td(7))
    eq((- b), td((-1), ((24 * 3600) - 60)))
    eq((- c), td((-1), ((24 * 3600) - 1), 999000))
    eq(abs(a), a)
    eq(abs((- a)), a)
    eq(td(6, (24 * 3600)), a)
    eq(td(0, 0, (60 * 1000000)), b)
    eq((a * 10), td(70))
    eq((a * 10), (10 * a))
    eq((a * 10L), (10 * a))
    eq((b * 10), td(0, 600))
    eq((10 * b), td(0, 600))
    eq((b * 10L), td(0, 600))
    eq((c * 10), td(0, 0, 10000))
    eq((10 * c), td(0, 0, 10000))
    eq((c * 10L), td(0, 0, 10000))
    eq((a * (-1)), (- a))
    eq((b * (-2)), ((- b) - b))
    eq((c * (-2)), ((- c) + (- c)))
    eq((b * (60 * 24)), ((b * 60) * 24))
    eq((b * (60 * 24)), ((60 * b) * 24))
    eq((c * 1000), td(0, 1))
    eq((1000 * c), td(0, 1))
    eq((a // 7), td(1))
    eq((b // 10), td(0, 6))
    eq((c // 1000), td(0, 0, 1))
    eq((a // 10), td(0, ((7 * 24) * 360)))
    eq((a // 3600000), td(0, 0, ((7 * 24) * 1000)))
