def test_bug_1028306(self):
    as_date = date.today()
    as_datetime = datetime.combine(as_date, time())
    self.assert_((as_date != as_datetime))
    self.assert_((as_datetime != as_date))
    self.assert_((not (as_date == as_datetime)))
    self.assert_((not (as_datetime == as_date)))
    self.assertRaises(TypeError, (lambda : (as_date < as_datetime)))
    self.assertRaises(TypeError, (lambda : (as_datetime < as_date)))
    self.assertRaises(TypeError, (lambda : (as_date <= as_datetime)))
    self.assertRaises(TypeError, (lambda : (as_datetime <= as_date)))
    self.assertRaises(TypeError, (lambda : (as_date > as_datetime)))
    self.assertRaises(TypeError, (lambda : (as_datetime > as_date)))
    self.assertRaises(TypeError, (lambda : (as_date >= as_datetime)))
    self.assertRaises(TypeError, (lambda : (as_datetime >= as_date)))
    self.assert_(as_date.__eq__(as_datetime))
    different_day = (((as_date.day + 1) % 20) + 1)
    self.assert_((not as_date.__eq__(as_datetime.replace(day=different_day))))
    date_sc = SubclassDate(as_date.year, as_date.month, as_date.day)
    self.assertEqual(as_date, date_sc)
    self.assertEqual(date_sc, as_date)
    datetime_sc = SubclassDatetime(as_datetime.year, as_datetime.month, as_date.day, 0, 0, 0)
    self.assertEqual(as_datetime, datetime_sc)
    self.assertEqual(datetime_sc, as_datetime)
