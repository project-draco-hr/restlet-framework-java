def test_tzinfo_classes(self):
    cls = self.theclass


    class C1(tzinfo):

        def utcoffset(self, dt):
            return None

        def dst(self, dt):
            return None

        def tzname(self, dt):
            return None
    for t in (cls(1, 1, 1), cls(1, 1, 1, tzinfo=None), cls(1, 1, 1, tzinfo=C1())):
        self.failUnless((t.utcoffset() is None))
        self.failUnless((t.dst() is None))
        self.failUnless((t.tzname() is None))


    class C3(tzinfo):

        def utcoffset(self, dt):
            return timedelta(minutes=(-1439))

        def dst(self, dt):
            return timedelta(minutes=1439)

        def tzname(self, dt):
            return 'aname'
    t = cls(1, 1, 1, tzinfo=C3())
    self.assertEqual(t.utcoffset(), timedelta(minutes=(-1439)))
    self.assertEqual(t.dst(), timedelta(minutes=1439))
    self.assertEqual(t.tzname(), 'aname')


    class C4(tzinfo):

        def utcoffset(self, dt):
            return 'aname'

        def dst(self, dt):
            return 7

        def tzname(self, dt):
            return 0
    t = cls(1, 1, 1, tzinfo=C4())
    self.assertRaises(TypeError, t.utcoffset)
    self.assertRaises(TypeError, t.dst)
    self.assertRaises(TypeError, t.tzname)


    class C6(tzinfo):

        def utcoffset(self, dt):
            return timedelta(hours=(-24))

        def dst(self, dt):
            return timedelta(hours=24)
    t = cls(1, 1, 1, tzinfo=C6())
    self.assertRaises(ValueError, t.utcoffset)
    self.assertRaises(ValueError, t.dst)


    class C7(tzinfo):

        def utcoffset(self, dt):
            return timedelta(seconds=61)

        def dst(self, dt):
            return timedelta(microseconds=(-81))
    t = cls(1, 1, 1, tzinfo=C7())
    self.assertRaises(ValueError, t.utcoffset)
    self.assertRaises(ValueError, t.dst)
