def __init__(self, name, level, pathname, lineno, msg, args, exc_info, func=None):
    '\n        Initialize a logging record with interesting information.\n        '
    ct = time.time()
    self.name = name
    self.msg = msg
    if (args and (len(args) == 1) and args[0] and (type(args[0]) == types.DictType)):
        args = args[0]
    self.args = args
    self.levelname = getLevelName(level)
    self.levelno = level
    self.pathname = pathname
    try:
        self.filename = os.path.basename(pathname)
        self.module = os.path.splitext(self.filename)[0]
    except:
        self.filename = pathname
        self.module = 'Unknown module'
    self.exc_info = exc_info
    self.exc_text = None
    self.lineno = lineno
    self.funcName = func
    self.created = ct
    self.msecs = ((ct - long(ct)) * 1000)
    self.relativeCreated = ((self.created - _startTime) * 1000)
    if (logThreads and thread):
        self.thread = thread.get_ident()
        self.threadName = threading.currentThread().getName()
    else:
        self.thread = None
        self.threadName = None
    if (logProcesses and hasattr(os, 'getpid')):
        self.process = os.getpid()
    else:
        self.process = None
