from test_support import TestFailed
import marshal
import sys
n = sys.maxint
while n:
    for expected in ((- n), n):
        s = marshal.dumps(expected)
        got = marshal.loads(s)
        if (expected != got):
            raise TestFailed(('for int %d, marshal string is %r, loaded back as %d' % (expected, s, got)))
    n = (n >> 1)
maxint64 = ((1L << 63) - 1)
minint64 = ((- maxint64) - 1)
for base in (maxint64, minint64, (- maxint64), (- (minint64 >> 1))):
    while base:
        s = ('I' + to_little_endian_string(base, 8))
        got = marshal.loads(s)
        if (base != got):
            raise TestFailed(('for int %d, simulated marshal string is %r, loaded back as %d' % (base, s, got)))
        if (base == (-1)):
            base = 0
        else:
            base >>= 1
marshal.dumps(([128] * 1000))
