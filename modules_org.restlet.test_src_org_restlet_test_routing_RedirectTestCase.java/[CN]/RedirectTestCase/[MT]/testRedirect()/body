{
  final Component clientComponent=new Component();
  final Component proxyComponent=new Component();
  final Component originComponent=new Component();
  clientComponent.getClients().add(Protocol.HTTP);
  proxyComponent.getClients().add(Protocol.HTTP);
  final String target="http://localhost:" + (TEST_PORT + 1) + "{rr}";
  final Redirector proxy=new Redirector(proxyComponent.getContext().createChildContext(),target,Redirector.MODE_CLIENT_DISPATCHER);
  final Restlet trace=new Restlet(originComponent.getContext().createChildContext()){
    @Override public void handle(    Request request,    Response response){
      final String message="Resource URI:  " + request.getResourceRef() + '\n'+ "Base URI:      "+ request.getResourceRef().getBaseRef()+ '\n'+ "Remaining part: "+ request.getResourceRef().getRemainingPart()+ '\n'+ "Method name:   "+ request.getMethod()+ '\n';
      response.setEntity(new StringRepresentation(message,MediaType.TEXT_PLAIN));
    }
  }
;
  proxyComponent.getDefaultHost().attach("",proxy);
  originComponent.getDefaultHost().attach("",trace);
  proxyComponent.getServers().add(Protocol.HTTP,TEST_PORT);
  originComponent.getServers().add(Protocol.HTTP,TEST_PORT + 1);
  originComponent.start();
  proxyComponent.start();
  clientComponent.start();
  final Context context=clientComponent.getContext();
  String uri="http://localhost:" + TEST_PORT + "/?foo=bar";
  testCall(context,Method.GET,uri);
  testCall(context,Method.DELETE,uri);
  uri="http://localhost:" + TEST_PORT + "/abcd/efgh/ijkl?foo=bar&foo=beer";
  testCall(context,Method.GET,uri);
  testCall(context,Method.DELETE,uri);
  uri="http://localhost:" + TEST_PORT + "/v1/client/kwse/CnJlNUQV9%252BNNqbUf7Lhs2BYEK2Y%253D"+ "/user/johnm/uVGYTDK4kK4zsu96VHGeTCzfwso%253D/";
  testCall(context,Method.GET,uri);
  clientComponent.stop();
  originComponent.stop();
  proxyComponent.stop();
}
