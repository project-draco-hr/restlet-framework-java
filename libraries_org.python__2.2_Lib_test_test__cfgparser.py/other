import ConfigParser
import StringIO
from test_support import TestFailed, verify
basic('\n[Foo Bar]\nfoo=bar\n[Spacey Bar]\nfoo = bar\n[Commented Bar]\nfoo: bar ; comment\n[Long Line]\nfoo: this line is much, much longer than my editor\n   likes it.\n[Section\\with$weird%characters[\t]\n[Internationalized Stuff]\nfoo[bg]: Bulgarian\nfoo=Default\nfoo[en]=English\nfoo[de]=Deutsch\n[Spaces]\nkey with spaces : value\nanother with spaces = splat!\n')
write('[Long Line]\nfoo: this line is much, much longer than my editor\n   likes it.\n[DEFAULT]\nfoo: another very\n long line')
case_sensitivity()
boolean('\n[BOOLTEST]\nT1=1\nT2=TRUE\nT3=True\nT4=oN\nT5=yes\nF1=0\nF2=FALSE\nF3=False\nF4=oFF\nF5=nO\nE1=2\nE2=foo\nE3=-1\nE4=0.1\nE5=FALSE AND MORE\n')
interpolation('\n[Foo]\nbar=something %(with1)s interpolation (1 step)\nbar9=something %(with9)s lots of interpolation (9 steps)\nbar10=something %(with10)s lots of interpolation (10 steps)\nbar11=something %(with11)s lots of interpolation (11 steps)\nwith11=%(with10)s\nwith10=%(with9)s\nwith9=%(with8)s\nwith8=%(with7)s\nwith7=%(with6)s\nwith6=%(with5)s\nwith5=%(with4)s\nwith4=%(with3)s\nwith3=%(with2)s\nwith2=%(with1)s\nwith1=with\n\n[Mutual Recursion]\nfoo=%(bar)s\nbar=%(foo)s\n')
parse_errors()
query_errors()
weird_errors()
