{
  step();
  discard();
  String currentKeyword=parseToken();
  if ("base".equalsIgnoreCase(currentKeyword)) {
    consumeWhiteSpaces();
    String base=parseUri();
    Reference ref=new Reference(base);
    if (ref.isRelative()) {
      context.getBase().addSegment(base);
    }
 else {
      context.setBase(ref);
    }
    consumeStatement();
  }
 else   if ("prefix".equalsIgnoreCase(currentKeyword)) {
    consumeWhiteSpaces();
    String prefix=parseToken();
    consumeWhiteSpaces();
    String uri=parseUri();
    context.getPrefixes().put(prefix,uri);
    consumeStatement();
  }
 else   if ("keywords".equalsIgnoreCase(currentKeyword)) {
    consumeWhiteSpaces();
    int c;
    do {
      c=step();
    }
 while (!isEndOfFile(c) && c != '.');
    String strKeywords=getCurrentToken();
    String[] keywords=strKeywords.split(",");
    context.getKeywords().clear();
    for (    String keyword : keywords) {
      context.getKeywords().add(keyword.trim());
    }
    consumeStatement();
  }
 else {
    org.restlet.Context.getCurrentLogger().warning("@" + currentKeyword + " directive is not supported.");
    consumeStatement();
  }
}
