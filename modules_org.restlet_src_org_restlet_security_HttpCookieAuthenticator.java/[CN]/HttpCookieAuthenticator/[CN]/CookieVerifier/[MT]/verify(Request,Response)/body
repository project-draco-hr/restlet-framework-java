{
  ChallengeResponse cr=request.getChallengeResponse();
  try {
    if (cr != null && cr.getCredentials() != null) {
      final byte[] credentialsEncoded=Base64.decode(cr.getCredentials());
      if (credentialsEncoded == null) {
        getLogger().warning("Cannot decode credentials : " + cr.getCredentials());
      }
      String decoded;
      if (getServerCipher() == null) {
        decoded=new String(credentialsEncoded);
      }
 else {
        decoded=CryptoUtils.decrypt(getCryptAlgorithm(),getServerCipher(),credentialsEncoded);
      }
      int si=decoded.lastIndexOf('/');
      long timeElapsed=(System.currentTimeMillis() - Long.parseLong(decoded.substring(si + 1))) / 60000;
      int timeout=getTimeout();
      if (timeout == -1 || timeElapsed < timeout) {
        cr.setIdentifier(decoded.substring(0,si));
        return RESULT_VALID;
      }
 else {
        return RESULT_STALE;
      }
    }
 else {
      return wrappedVerifier.verify(request,response);
    }
  }
 catch (  Exception e) {
    getLogger().log(Level.WARNING,"Unable to decode credentials",e);
  }
  return RESULT_INVALID;
}
