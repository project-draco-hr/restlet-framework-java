def open_data(self, url, data=None):
    'Use "data" URL.'
    if (not isinstance(url, str)):
        raise IOError, ('data error', 'proxy support for data protocol currently not implemented')
    import mimetools
    try:
        from cStringIO import StringIO
    except ImportError:
        from StringIO import StringIO
    try:
        [type, data] = url.split(',', 1)
    except ValueError:
        raise IOError, ('data error', 'bad data URL')
    if (not type):
        type = 'text/plain;charset=US-ASCII'
    semi = type.rfind(';')
    if ((semi >= 0) and ('=' not in type[semi:])):
        encoding = type[(semi + 1):]
        type = type[:semi]
    else:
        encoding = ''
    msg = []
    msg.append(('Date: %s' % time.strftime('%a, %d %b %Y %T GMT', time.gmtime(time.time()))))
    msg.append(('Content-type: %s' % type))
    if (encoding == 'base64'):
        import base64
        data = base64.decodestring(data)
    else:
        data = unquote(data)
    msg.append(('Content-Length: %d' % len(data)))
    msg.append('')
    msg.append(data)
    msg = '\n'.join(msg)
    f = StringIO(msg)
    headers = mimetools.Message(f, 0)
    return addinfourl(f, headers, url)
