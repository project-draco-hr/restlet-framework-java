{
  Definition savedDefinition=new JacksonRepresentation<Definition>(new FileRepresentation(new File("src/org/restlet/test/ext/raml/Petstore.rwadef"),MediaType.APPLICATION_JSON),Definition.class).getObject();
  Definition translatedDefinition=SwaggerUtils.getDefinition("http://petstore.swagger.wordnik.com/api/api-docs","","");
  assertEquals(savedDefinition.getContact(),translatedDefinition.getContact());
  assertEquals(savedDefinition.getEndpoint(),translatedDefinition.getEndpoint());
  assertEquals(savedDefinition.getLicense(),translatedDefinition.getLicense());
  assertEquals(savedDefinition.getVersion(),translatedDefinition.getVersion());
  assertEquals(savedDefinition.getContract().getDescription(),translatedDefinition.getContract().getDescription());
  assertEquals(savedDefinition.getContract().getName(),translatedDefinition.getContract().getName());
  Representation savedRepresentation;
  for (  Representation translatedRepresentation : translatedDefinition.getContract().getRepresentations()) {
    savedRepresentation=savedDefinition.getContract().getRepresentation(translatedRepresentation.getName());
    assertEquals(true,savedRepresentation != null);
    if (savedRepresentation != null) {
      assertEquals(savedRepresentation.getDescription(),translatedRepresentation.getDescription());
      assertEquals(savedRepresentation.getName(),translatedRepresentation.getName());
      assertEquals(savedRepresentation.getParentType(),translatedRepresentation.getParentType());
      assertEquals(savedRepresentation.isRaw(),translatedRepresentation.isRaw());
      Property savedProperty;
      for (      Property translatedProperty : translatedRepresentation.getProperties()) {
        savedProperty=savedRepresentation.getProperty(translatedProperty.getName());
        assertEquals(true,savedProperty != null);
        if (savedProperty != null) {
          assertEquals(savedProperty.getDefaultValue(),translatedProperty.getDefaultValue());
          assertEquals(savedProperty.getDescription(),translatedProperty.getDescription());
          assertEquals(savedProperty.getMax(),translatedProperty.getMax());
          assertEquals(savedProperty.getMaxOccurs(),translatedProperty.getMaxOccurs());
          assertEquals(savedProperty.getMin(),translatedProperty.getMin());
          assertEquals(savedProperty.getMinOccurs(),translatedProperty.getMinOccurs());
          assertEquals(savedProperty.getName(),translatedProperty.getName());
          assertEquals(savedProperty.getPossibleValues(),translatedProperty.getPossibleValues());
          assertEquals(savedProperty.isUniqueItems(),translatedProperty.isUniqueItems());
          assertEquals(savedProperty.getType(),translatedProperty.getType());
        }
      }
    }
  }
  Resource savedResource;
  for (  Resource translatedResource : translatedDefinition.getContract().getResources()) {
    savedResource=savedDefinition.getContract().getResource(translatedResource.getResourcePath());
    assertEquals(true,savedResource != null);
    if (savedResource != null) {
      assertEquals(translatedResource.getDescription(),savedResource.getDescription());
      assertEquals(translatedResource.getName(),savedResource.getName());
      assertEquals(translatedResource.getResourcePath(),savedResource.getResourcePath());
      PathVariable savedPathVariable;
      for (      PathVariable translatedPathVariable : translatedResource.getPathVariables()) {
        savedPathVariable=savedResource.getPathVariable(translatedPathVariable.getName());
        assertEquals(true,savedPathVariable != null);
        if (savedPathVariable != null) {
          assertEquals(savedPathVariable.getName(),translatedPathVariable.getName());
          assertEquals(savedPathVariable.getDescription(),translatedPathVariable.getDescription());
          assertEquals(savedPathVariable.isArray(),translatedPathVariable.isArray());
        }
      }
      Operation savedOperation;
      for (      Operation translatedOperation : translatedResource.getOperations()) {
        savedOperation=savedResource.getOperation(translatedOperation.getName());
        assertEquals(true,savedOperation != null);
        if (savedOperation != null) {
          assertEquals(savedOperation.getDescription(),translatedOperation.getDescription());
          assertEquals(savedOperation.getMethod(),translatedOperation.getMethod());
          assertEquals(savedOperation.getName(),translatedOperation.getName());
          assertEquals(savedOperation.getConsumes(),translatedOperation.getConsumes());
          assertEquals(savedOperation.getProduces(),translatedOperation.getProduces());
          Body savedInRepresentation=savedOperation.getInRepresentation();
          Body translatedInRepresentation=translatedOperation.getInRepresentation();
          assertEquals(true,(savedInRepresentation == null) == (translatedInRepresentation == null));
          if (translatedInRepresentation != null) {
            assertEquals(savedInRepresentation.isArray(),translatedInRepresentation.isArray());
            assertEquals(savedInRepresentation.getRepresentation(),translatedInRepresentation.getRepresentation());
          }
          Body savedOutRepresentation=savedOperation.getOutRepresentation();
          Body translatedOutRepresentation=translatedOperation.getOutRepresentation();
          assertEquals(true,(savedOutRepresentation == null) == (translatedOutRepresentation == null));
          if (translatedOutRepresentation != null) {
            assertEquals(savedOutRepresentation.isArray(),translatedOutRepresentation.isArray());
            assertEquals(savedOutRepresentation.getRepresentation(),translatedOutRepresentation.getRepresentation());
          }
          Response savedResponse;
          for (          Response translatedResponse : translatedOperation.getResponses()) {
            savedResponse=savedOperation.getResponse(translatedResponse.getCode());
            assertEquals(true,savedResponse != null);
            if (savedResponse != null) {
              assertEquals(savedResponse.getCode(),translatedResponse.getCode());
              assertEquals(savedResponse.getDescription(),translatedResponse.getDescription());
              assertEquals(savedResponse.getMessage(),translatedResponse.getMessage());
              assertEquals(savedResponse.getName(),translatedResponse.getName());
              Body savedResponseBody=savedResponse.getBody();
              Body translatedResponseBody=translatedResponse.getBody();
              assertEquals(true,(savedResponseBody == null) == (translatedResponseBody == null));
              if (translatedResponseBody != null) {
                assertEquals(savedResponseBody.isArray(),translatedResponseBody.isArray());
                assertEquals(savedResponseBody.getRepresentation(),translatedResponseBody.getRepresentation());
              }
            }
          }
          QueryParameter savedQueryParameter;
          for (          QueryParameter translatedQueryParameter : translatedOperation.getQueryParameters()) {
            savedQueryParameter=savedOperation.getQueryParameter(translatedQueryParameter.getName());
            assertEquals(true,savedQueryParameter != null);
            if (savedQueryParameter != null) {
              assertEquals(savedQueryParameter.isAllowMultiple(),translatedQueryParameter.isAllowMultiple());
              assertEquals(savedQueryParameter.getDefaultValue(),translatedQueryParameter.getDefaultValue());
              assertEquals(savedQueryParameter.getDescription(),translatedQueryParameter.getDescription());
              assertEquals(savedQueryParameter.getName(),translatedQueryParameter.getName());
              assertEquals(savedQueryParameter.getPossibleValues(),translatedQueryParameter.getPossibleValues());
              assertEquals(savedQueryParameter.isRequired(),translatedQueryParameter.isRequired());
            }
          }
        }
      }
    }
  }
}
