{
  if (this.agentAttributes == null) {
    this.agentAttributes=new HashMap<String,String>();
    final Map<String,Object> map=new HashMap<String,Object>();
    org.restlet.util.Template template=null;
    final org.restlet.util.Variable agentName=new org.restlet.util.Variable(org.restlet.util.Variable.TYPE_TOKEN);
    final org.restlet.util.Variable agentVersion=new org.restlet.util.Variable(org.restlet.util.Variable.TYPE_TOKEN);
    final org.restlet.util.Variable agentComment=new org.restlet.util.Variable(org.restlet.util.Variable.TYPE_COMMENT);
    final org.restlet.util.Variable agentCommentAttribute=new org.restlet.util.Variable(org.restlet.util.Variable.TYPE_COMMENT_ATTRIBUTE);
    final org.restlet.util.Variable facultativeData=new org.restlet.util.Variable(org.restlet.util.Variable.TYPE_ALL,null,false,false);
    for (    String string : ClientInfo.getUserAgentTemplates()) {
      template=new org.restlet.util.Template(string,org.restlet.util.Template.MODE_EQUALS);
      template.getVariables().put("agentName",agentName);
      template.getVariables().put("agentVersion",agentVersion);
      template.getVariables().put("agentComment",agentComment);
      template.getVariables().put("agentOs",agentCommentAttribute);
      template.getVariables().put("commentAttribute",agentCommentAttribute);
      template.getVariables().put("facultativeData",facultativeData);
      if (template.parse(getAgent(),map) > -1) {
        for (        final String key : map.keySet()) {
          this.agentAttributes.put(key,(String)map.get(key));
        }
        break;
      }
    }
  }
  return this.agentAttributes;
}
