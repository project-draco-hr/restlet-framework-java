{
  ReadableByteChannel result=null;
  if (Edition.CURRENT != Edition.GAE) {
    final java.nio.channels.Pipe pipe=java.nio.channels.Pipe.open();
    Runnable task=new Runnable(){
      public void run(){
        try {
          WritableByteChannel wbc=pipe.sink();
          representation.write(wbc);
          wbc.close();
        }
 catch (        IOException ioe) {
          Context.getCurrentLogger().log(Level.FINE,"Error while writing to the piped channel.",ioe);
        }
      }
    }
;
    org.restlet.Application application=org.restlet.Application.getCurrent();
    if (application != null && application.getTaskService() != null) {
      application.getTaskService().execute(task);
    }
 else {
      new Thread(task,"Restlet-PipedWritableChannel").start();
    }
    result=pipe.source();
  }
 else {
    Context.getCurrentLogger().log(Level.WARNING,"The GAE edition is unable to return a channel for a representation given its write(WritableByteChannel) method.");
  }
  return result;
}
