def __init__(self, year, month, day, hour=0, minute=0, second=0, microsecond=0):
    if (not (0 <= microsecond <= 999999)):
        (carry, microsecond) = divmod(microsecond, 1000000)
        second += carry
    if (not (0 <= second <= 59)):
        (carry, second) = divmod(second, 60)
        minute += carry
    if (not (0 <= minute <= 59)):
        (carry, minute) = divmod(minute, 60)
        hour += carry
    if (not (0 <= hour <= 23)):
        (carry, hour) = divmod(hour, 24)
        day += carry
    if (not (1 <= month <= 12)):
        (carry, month) = divmod((month - 1), 12)
        year += carry
        month += 1
        assert (1 <= month <= 12)
    dim = _days_in_month(year, month)
    if (not (1 <= day <= dim)):
        if (day == 0):
            month -= 1
            if (month > 0):
                day = _days_in_month(year, month)
            else:
                (year, month, day) = ((year - 1), 12, 31)
        elif (day == (dim + 1)):
            month += 1
            day = 1
            if (month > 12):
                month = 1
                year += 1
        else:
            self.ordinal = (_ymd2ord(year, month, 1) + (day - 1))
            (year, month, day) = _ord2ymd(self.ordinal)
    (self.year, self.month, self.day) = (year, month, day)
    (self.hour, self.minute, self.second) = (hour, minute, second)
    self.microsecond = microsecond
