{
  if (readMessageLine()) {
    String requestMethod=null;
    String requestUri=null;
    String version=null;
    int i=0;
    int start=0;
    int size=getBuilder().length();
    char next;
    if (size == 0) {
    }
 else {
      for (i=start; (requestMethod == null) && (i < size); i++) {
        next=getBuilder().charAt(i);
        if (HeaderUtils.isSpace(next)) {
          requestMethod=getBuilder().substring(start,i);
          start=i + 1;
        }
      }
      if ((requestMethod == null) || (i == size)) {
        throw new IOException("Unable to parse the request method. End of line reached too early.");
      }
      for (i=start; (requestUri == null) && (i < size); i++) {
        next=getBuilder().charAt(i);
        if (HeaderUtils.isSpace(next)) {
          requestUri=getBuilder().substring(start,i);
          start=i + 1;
        }
      }
      if (i == size) {
        throw new IOException("Unable to parse the request URI. End of line reached too early.");
      }
      if ((requestUri == null) || (requestUri.equals(""))) {
        requestUri="/";
      }
      for (i=start; (version == null) && (i < size); i++) {
        next=getBuilder().charAt(i);
      }
      if (i == size) {
        version=getBuilder().substring(start,i);
        start=i + 1;
      }
      if (version == null) {
        throw new IOException("Unable to parse the protocol version. End of line reached too early.");
      }
      ConnectedRequest request=createRequest(getHelper().getContext(),this,requestMethod,requestUri,version);
      Response response=getHelper().createResponse(request);
      setMessage(response);
      setMessageState(WayMessageState.HEADERS);
      getBuilder().delete(0,getBuilder().length());
    }
  }
 else {
  }
}
