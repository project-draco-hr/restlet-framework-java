{
  super(MediaType.APPLICATION_XML);
  final Document dom=getDocument();
  final Element email=dom.createElement("email");
  dom.appendChild(email);
  final Element head=dom.createElement("head");
  email.appendChild(head);
  if (message.getSubject() != null) {
    final Element subject=dom.createElement("subject");
    subject.setTextContent(message.getSubject());
    head.appendChild(subject);
  }
  final Address[] froms=message.getFrom();
  if (froms != null) {
    for (    final Address fromAddress : froms) {
      final Element from=dom.createElement("from");
      from.setTextContent(fromAddress.toString());
      head.appendChild(from);
    }
  }
  final Address[] tos=message.getRecipients(Message.RecipientType.TO);
  if (tos != null) {
    for (    final Address toAddress : tos) {
      final Element to=dom.createElement("to");
      to.setTextContent(toAddress.toString());
      head.appendChild(to);
    }
  }
  final Address[] ccs=message.getRecipients(Message.RecipientType.CC);
  if (ccs != null) {
    for (    final Address ccAddress : ccs) {
      final Element cc=dom.createElement("cc");
      cc.setTextContent(ccAddress.toString());
      head.appendChild(cc);
    }
  }
  final Address[] bccs=message.getRecipients(Message.RecipientType.BCC);
  if (bccs != null) {
    for (    final Address bccAddress : bccs) {
      final Element bcc=dom.createElement("bcc");
      bcc.setTextContent(bccAddress.toString());
      head.appendChild(bcc);
    }
  }
  if (message.getReceivedDate() != null) {
    final Element received=dom.createElement("received");
    received.setTextContent(DateUtils.format(message.getReceivedDate(),DateUtils.FORMAT_RFC_1123.get(0)));
    head.appendChild(received);
  }
  if (message.getSentDate() != null) {
    final Element sent=dom.createElement("sent");
    sent.setTextContent(DateUtils.format(message.getSentDate(),DateUtils.FORMAT_RFC_1123.get(0)));
    head.appendChild(sent);
  }
  email.appendChild(head);
  Representation content=null;
  if (message.getContent() instanceof Multipart) {
    final Multipart multipart=(Multipart)message.getContent();
    for (int i=0, n=multipart.getCount(); i < n; i++) {
      final Part part=multipart.getBodyPart(i);
      final String disposition=part.getDisposition();
      if (disposition != null) {
        if (disposition.equals(Part.ATTACHMENT) || disposition.equals(Part.INLINE)) {
        }
      }
 else {
        final MimeBodyPart mimeBodyPart=(MimeBodyPart)part;
        final ContentType contentType=new ContentType(mimeBodyPart.getContentType());
        if (MediaType.TEXT_PLAIN.equals(contentType.getMediaType(),true)) {
          content=new InputRepresentation(mimeBodyPart.getInputStream(),MediaType.TEXT_PLAIN);
          break;
        }
      }
    }
  }
 else {
    if (message.getContentType() != null) {
      final ContentType contentType=new ContentType(message.getContentType());
      if (MediaType.TEXT_PLAIN.equals(contentType.getMediaType(),true)) {
        content=new InputRepresentation(message.getInputStream(),MediaType.TEXT_PLAIN);
      }
    }
  }
  if (content != null) {
    final Element body=dom.createElement("body");
    final CDATASection bodyContent=dom.createCDATASection(content.getText());
    body.appendChild(bodyContent);
    email.appendChild(body);
  }
}
