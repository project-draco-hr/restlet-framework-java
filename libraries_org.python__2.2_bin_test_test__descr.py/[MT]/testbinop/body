def testbinop(a, b, res, expr='a+b', meth='__add__'):
    if verbose:
        print 'checking', expr
    dict = {'a': a, 'b': b, }
    if ((meth == '__div__') and ((1 / 2) == 0.5)):
        meth = '__truediv__'
    vereq(eval(expr, dict), res)
    t = type(a)
    m = getattr(t, meth)
    while (meth not in t.__dict__):
        t = t.__bases__[0]
    vereq(m, t.__dict__[meth])
    vereq(m(a, b), res)
    bm = getattr(a, meth)
    vereq(bm(b), res)
