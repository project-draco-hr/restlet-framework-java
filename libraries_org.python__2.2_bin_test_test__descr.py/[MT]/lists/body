def lists():
    if verbose:
        print 'Testing list operations...'
    testbinop([1], [2], [1, 2], 'a+b', '__add__')
    testbinop([1, 2, 3], 2, 1, 'b in a', '__contains__')
    testbinop([1, 2, 3], 4, 0, 'b in a', '__contains__')
    testbinop([1, 2, 3], 1, 2, 'a[b]', '__getitem__')
    testternop([1, 2, 3], 0, 2, [1, 2], 'a[b:c]', '__getslice__')
    testsetop([1], [2], [1, 2], 'a+=b', '__iadd__')
    testsetop([1, 2], 3, [1, 2, 1, 2, 1, 2], 'a*=b', '__imul__')
    testunop([1, 2, 3], 3, 'len(a)', '__len__')
    testbinop([1, 2], 3, [1, 2, 1, 2, 1, 2], 'a*b', '__mul__')
    testbinop([1, 2], 3, [1, 2, 1, 2, 1, 2], 'b*a', '__rmul__')
    testset2op([1, 2], 1, 3, [1, 3], 'a[b]=c', '__setitem__')
    testset3op([1, 2, 3, 4], 1, 3, [5, 6], [1, 5, 6, 4], 'a[b:c]=d', '__setslice__')
