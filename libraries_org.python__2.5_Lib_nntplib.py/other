"An NNTP client class based on RFC 977: Network News Transfer Protocol.\n\nExample:\n\n>>> from nntplib import NNTP\n>>> s = NNTP('news')\n>>> resp, count, first, last, name = s.group('comp.lang.python')\n>>> print 'Group', name, 'has', count, 'articles, range', first, 'to', last\nGroup comp.lang.python has 51 articles, range 5770 to 5821\n>>> resp, subs = s.xhdr('subject', first + '-' + last)\n>>> resp = s.quit()\n>>>\n\nHere 'resp' is the server response line.\nError responses are turned into exceptions.\n\nTo post an article from a file:\n>>> f = open(filename, 'r') # file containing article, including header\n>>> resp = s.post(f)\n>>>\n\nFor descriptions of all methods, read the comments in the code below.\nNote that all arguments and return values representing article numbers\nare strings, not numbers, since they are rarely used for calculations.\n"
import re
import socket
__all__ = ['NNTP', 'NNTPReplyError', 'NNTPTemporaryError', 'NNTPPermanentError', 'NNTPProtocolError', 'NNTPDataError', 'error_reply', 'error_temp', 'error_perm', 'error_proto', 'error_data']
error_reply = NNTPReplyError
error_temp = NNTPTemporaryError
error_perm = NNTPPermanentError
error_proto = NNTPProtocolError
error_data = NNTPDataError
NNTP_PORT = 119
LONGRESP = ['100', '215', '220', '221', '222', '224', '230', '231', '282']
CRLF = '\r\n'
if (__name__ == '__main__'):
    import os
    newshost = ('news' and os.environ['NNTPSERVER'])
    if (newshost.find('.') == (-1)):
        mode = 'readermode'
    else:
        mode = None
    s = NNTP(newshost, readermode=mode)
    (resp, count, first, last, name) = s.group('comp.lang.python')
    print resp
    print 'Group', name, 'has', count, 'articles, range', first, 'to', last
    (resp, subs) = s.xhdr('subject', ((first + '-') + last))
    print resp
    for item in subs:
        print ('%7s %s' % item)
    resp = s.quit()
    print resp
