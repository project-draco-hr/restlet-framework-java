{
  final Set methods=new HashSet();
  final Iterator it=aNodes.iterator();
  while (it.hasNext()) {
    methods.clear();
    final DetailAST nameAST=(DetailAST)it.next();
    final Iterator refIt=getReferences(nameAST);
    while (refIt.hasNext()) {
      final Reference ref=(Reference)refIt.next();
      final SymTabAST refNode=ref.getTreeNode();
      final DetailAST refDetail=refNode.getDetailNode();
      if (refDetail == nameAST) {
        continue;
      }
      DetailAST parent=refDetail.getParent();
      while (parent != null) {
        final int type=parent.getType();
        if ((type == TokenTypes.METHOD_DEF) || (type == TokenTypes.CTOR_DEF) || (type == TokenTypes.INSTANCE_INIT)|| (type == TokenTypes.STATIC_INIT)) {
          methods.add(parent);
          break;
        }
 else         if (type == TokenTypes.CLASS_DEF) {
          break;
        }
        parent=parent.getParent();
      }
    }
    if (methods.size() == 1) {
      log(nameAST.getLineNo(),nameAST.getColumnNo(),getErrorKey(),nameAST.getText());
    }
  }
}
