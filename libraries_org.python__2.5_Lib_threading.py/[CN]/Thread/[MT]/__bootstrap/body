def __bootstrap(self):
    try:
        if _trace_hook:
            _sys.settrace(_trace_hook)
        if _profile_hook:
            _sys.setprofile(_profile_hook)
        try:
            self.run()
        except SystemExit:
            pass
        except InterruptedException:
            if (not jython.shouldRestart):
                raise
        except:
            if _sys:
                _sys.stderr.write(('Exception in thread %s:' % self.getName()))
                _print_exc(file=_sys.stderr)
            else:
                (exc_type, exc_value, exc_tb) = self.__exc_info()
                try:
                    print  >> self.__stderr, (('Exception in thread ' + self.getName()) + ' (most likely raised during interpreter shutdown):')
                    print  >> self.__stderr, 'Traceback (most recent call last):'
                    while exc_tb:
                        print  >> self.__stderr, ('  File "%s", line %s, in %s' % (exc_tb.tb_frame.f_code.co_filename, exc_tb.tb_lineno, exc_tb.tb_frame.f_code.co_name))
                        exc_tb = exc_tb.tb_next
                    print  >> self.__stderr, ('%s: %s' % (exc_type, exc_value))
                finally:
                    del exc_type, exc_value, exc_tb
    finally:
        self.__stop()
        try:
            self.__delete()
        except:
            pass
