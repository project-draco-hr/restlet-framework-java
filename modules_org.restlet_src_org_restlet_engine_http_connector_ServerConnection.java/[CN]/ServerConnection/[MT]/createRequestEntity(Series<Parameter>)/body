{
  Representation result=null;
  long contentLength=HeaderUtils.getContentLength(headers);
  boolean chunkedEncoding=HeaderUtils.isChunkedEncoding(headers);
  if ((contentLength != Representation.UNKNOWN_SIZE) || chunkedEncoding) {
    InputStream requestStream=getRequestEntityStream(contentLength,chunkedEncoding);
    ReadableByteChannel requestChannel=getRequestEntityChannel(contentLength,chunkedEncoding);
    if (requestStream != null) {
      result=new InputRepresentation(requestStream,null,contentLength);
    }
 else     if (requestChannel != null) {
      result=new ReadableRepresentation(requestChannel,null,contentLength);
    }
    result.setSize(contentLength);
  }
 else {
    result=new EmptyRepresentation();
  }
  for (  Parameter header : headers) {
    if (header.getName().equalsIgnoreCase(HeaderConstants.HEADER_CONTENT_ENCODING)) {
      HeaderReader hr=new HeaderReader(header.getValue());
      String value=hr.readValue();
      while (value != null) {
        Encoding encoding=Encoding.valueOf(value);
        if (!encoding.equals(Encoding.IDENTITY)) {
          result.getEncodings().add(encoding);
        }
        value=hr.readValue();
      }
    }
 else     if (header.getName().equalsIgnoreCase(HeaderConstants.HEADER_CONTENT_LANGUAGE)) {
      HeaderReader hr=new HeaderReader(header.getValue());
      String value=hr.readValue();
      while (value != null) {
        result.getLanguages().add(Language.valueOf(value));
        value=hr.readValue();
      }
    }
 else     if (header.getName().equalsIgnoreCase(HeaderConstants.HEADER_CONTENT_TYPE)) {
      ContentType contentType=new ContentType(header.getValue());
      result.setMediaType(contentType.getMediaType());
      result.setCharacterSet(contentType.getCharacterSet());
    }
 else     if (header.getName().equalsIgnoreCase(HeaderConstants.HEADER_CONTENT_RANGE)) {
      RangeUtils.parseContentRange(header.getValue(),result);
    }
 else     if (header.getName().equalsIgnoreCase(HeaderConstants.HEADER_CONTENT_MD5)) {
      result.setDigest(new Digest(Digest.ALGORITHM_MD5,Base64.decode(header.getValue())));
    }
  }
  return result;
}
