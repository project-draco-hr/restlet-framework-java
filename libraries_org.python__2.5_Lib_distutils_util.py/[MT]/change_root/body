def change_root(new_root, pathname):
    'Return \'pathname\' with \'new_root\' prepended.  If \'pathname\' is\n    relative, this is equivalent to "os.path.join(new_root,pathname)".\n    Otherwise, it requires making \'pathname\' relative and then joining the\n    two, which is tricky on DOS/Windows and Mac OS.\n    '
    os_name = (os._name if sys.platform.startswith('java') else os.name)
    if (os_name == 'posix'):
        if (not os.path.isabs(pathname)):
            return os.path.join(new_root, pathname)
        else:
            return os.path.join(new_root, pathname[1:])
    elif (os_name == 'nt'):
        (drive, path) = os.path.splitdrive(pathname)
        if (path[0] == '\\'):
            path = path[1:]
        return os.path.join(new_root, path)
    elif (os_name == 'os2'):
        (drive, path) = os.path.splitdrive(pathname)
        if (path[0] == os.sep):
            path = path[1:]
        return os.path.join(new_root, path)
    elif (os_name == 'mac'):
        if (not os.path.isabs(pathname)):
            return os.path.join(new_root, pathname)
        else:
            elements = string.split(pathname, ':', 1)
            pathname = (':' + elements[1])
            return os.path.join(new_root, pathname)
    else:
        raise DistutilsPlatformError, ("nothing known about platform '%s'" % os_name)
