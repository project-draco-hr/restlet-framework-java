{
  this.latch.countDown();
  while (true) {
    try {
      SocketChannel client=this.serverSocket.accept();
      int connectionsCount=getHelper().getConnections().size();
      if ((getHelper().getMaxConnections() == -1) || (connectionsCount <= getHelper().getMaxConnections())) {
        final BaseServerConnection connection=getHelper().createServerConnection(getHelper(),client.socket());
        connection.open();
        getHelper().getConnections().add(connection);
      }
 else {
        client.close();
        getHelper().getLogger().info("Maximum number of concurrent connections reached. New connection rejected.");
      }
    }
 catch (    ClosedByInterruptException ex) {
      this.helper.getLogger().log(Level.FINE,"ServerSocket channel was closed by interrupt",ex);
      break;
    }
catch (    IOException ex) {
      this.helper.getLogger().log(Level.WARNING,"Unexpected error while accepting new connection",ex);
    }
  }
}
