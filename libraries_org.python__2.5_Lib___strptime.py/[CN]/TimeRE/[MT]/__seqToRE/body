def __seqToRE(self, to_convert, directive):
    "Convert a list to a regex string for matching a directive.\n\n        Want possible matching values to be from longest to shortest.  This\n        prevents the possibility of a match occuring for a value that also\n        a substring of a larger value that should have matched (e.g., 'abc'\n        matching when 'abcdef' should have been the match).\n\n        "
    to_convert = sorted(to_convert, key=len, reverse=True)
    for value in to_convert:
        if (value != ''):
            break
    else:
        return ''
    regex = '|'.join((re_escape(stuff) for stuff in to_convert))
    regex = ('(?P<%s>%s' % (directive, regex))
    return ('%s)' % regex)
