def test_base64invalid(self):
    MAX_BASE64 = 57
    lines = []
    for i in range(0, len(self.data), MAX_BASE64):
        b = self.data[i:(i + MAX_BASE64)]
        a = binascii.b2a_base64(b)
        lines.append(a)
    fillers = ''
    valid = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/'
    for i in xrange(256):
        c = chr(i)
        if (c not in valid):
            fillers += c

    def addnoise(line):
        noise = fillers
        ratio = (len(line) // len(noise))
        res = ''
        while (line and noise):
            if ((len(line) // len(noise)) > ratio):
                (c, line) = (line[0], line[1:])
            else:
                (c, noise) = (noise[0], noise[1:])
            res += c
        return ((res + noise) + line)
    res = ''
    for line in map(addnoise, lines):
        b = binascii.a2b_base64(line)
        res += b
    self.assertEqual(res, self.data)
    self.assertEqual(binascii.a2b_base64(fillers), '')
