def requires(resource, msg=None):
    "Raise ResourceDenied if the specified resource is not available.\n\n    If the caller's module is __main__ then automatically return True.  The\n    possibility of False being returned occurs when regrtest.py is executing."
    if (sys._getframe().f_back.f_globals.get('__name__') == '__main__'):
        return
    if (not is_resource_enabled(resource)):
        if (msg is None):
            msg = ("Use of the `%s' resource not enabled" % resource)
        raise ResourceDenied(msg)
