{
  List<AnnotationInfo> result=descriptors;
  if (clazz != null && !ServerResource.class.equals(clazz)) {
    if (result == null) {
      result=new CopyOnWriteArrayList<AnnotationInfo>();
    }
    if (clazz.isInterface()) {
      for (      java.lang.reflect.Method javaMethod : clazz.getMethods()) {
        addAnnotationDescriptors(result,clazz,javaMethod);
      }
    }
 else {
      for (      java.lang.reflect.Method javaMethod : clazz.getDeclaredMethods()) {
        addAnnotationDescriptors(result,clazz,javaMethod);
      }
    }
    Class<?>[] interfaces=clazz.getInterfaces();
    if (interfaces != null) {
      for (      Class<?> interfaceClass : interfaces) {
        result=addAnnotations(result,interfaceClass);
      }
    }
    addAnnotations(result,clazz.getSuperclass());
  }
  return result;
}
