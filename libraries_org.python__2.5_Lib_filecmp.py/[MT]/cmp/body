def cmp(f1, f2, shallow=1):
    'Compare two files.\n\n    Arguments:\n\n    f1 -- First file name\n\n    f2 -- Second file name\n\n    shallow -- Just check stat signature (do not read the files).\n               defaults to 1.\n\n    Return value:\n\n    True if the files are the same, False otherwise.\n\n    This function uses a cache for past comparisons and the results,\n    with a cache invalidation mechanism relying on stale signatures.\n\n    '
    s1 = _sig(os.stat(f1))
    s2 = _sig(os.stat(f2))
    if ((s1[0] != stat.S_IFREG) or (s2[0] != stat.S_IFREG)):
        return False
    if (shallow and (s1 == s2)):
        return True
    if (s1[1] != s2[1]):
        return False
    result = _cache.get((f1, f2))
    if (result and ((s1, s2) == result[:2])):
        return result[2]
    outcome = _do_cmp(f1, f2)
    _cache[(f1, f2)] = (s1, s2, outcome)
    return outcome
