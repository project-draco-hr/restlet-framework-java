import zlib
import zipfile, os, StringIO, tempfile
from test_support import TestFailed
srcname = (('junk9630' + os.extsep) + 'tmp')
zipname = (('junk9708' + os.extsep) + 'tmp')
try:
    fp = open(srcname, 'wb')
    for i in range(0, 1000):
        fp.write(('Test of zipfile line %d.\n' % i))
    fp.close()
    fp = open(srcname, 'rb')
    writtenData = fp.read()
    fp.close()
    for file in (zipname, tempfile.TemporaryFile(), StringIO.StringIO()):
        zipTest(file, zipfile.ZIP_STORED, writtenData)
    for file in (zipname, tempfile.TemporaryFile(), StringIO.StringIO()):
        zipTest(file, zipfile.ZIP_DEFLATED, writtenData)
finally:
    if os.path.isfile(srcname):
        os.unlink(srcname)
    if os.path.isfile(zipname):
        os.unlink(zipname)
fp = open(srcname, 'w')
fp.write('this is not a legal zip file\n')
fp.close()
try:
    zf = zipfile.ZipFile(srcname)
except zipfile.BadZipfile:
    os.unlink(srcname)
try:
    zipfile.ZipFile(srcname)
except IOError:
    pass
else:
    raise TestFailed('expected creation of readable ZipFile without\n  a file to raise an IOError.')
