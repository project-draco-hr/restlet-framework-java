{
  ResourceListing result=new ResourceListing();
  result.setApiVersion(def.getVersion() == null ? "1.0" : def.getVersion());
  result.setBasePath(def.getEndpoint() == null ? "http://localhost:9000/v1" : def.getEndpoint());
  result.setInfo(new ApiInfo());
  result.setSwaggerVersion(SWAGGER_VERSION);
  if (def.getContact() != null) {
    result.getInfo().setContact(def.getContact());
  }
  if (def.getLicense() != null) {
    result.getInfo().setLicenseUrl(def.getLicense());
  }
  if (def.getContract() != null) {
    result.getInfo().setTitle(def.getContract().getName());
    result.getInfo().setDescription(def.getContract().getDescription());
  }
  List<String> addedApis=new ArrayList<String>();
  if (def.getContract() != null && def.getContract().getResources() != null) {
    result.setApis(new ArrayList<ResourceDeclaration>());
    for (    Resource resource : def.getContract().getResources()) {
      ResourceDeclaration rd=new ResourceDeclaration();
      rd.setDescription(resource.getDescription());
      rd.setPath(getFirstSegment(resource.getResourcePath()));
      if (!addedApis.contains(rd.getPath())) {
        addedApis.add(rd.getPath());
        result.getApis().add(rd);
      }
    }
  }
  Collections.sort(result.getApis(),new Comparator<ResourceDeclaration>(){
    @Override public int compare(    ResourceDeclaration o1,    ResourceDeclaration o2){
      return o1.getPath().compareTo(o2.getPath());
    }
  }
);
  return result;
}
