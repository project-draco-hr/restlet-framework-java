def handle(self, req, resp, environ, exc, exc_info):
    (typ, value, tb) = exc_info
    err_msg = StringIO.StringIO()
    err_msg.write(('%s: %s\n' % (typ, value)))
    err_msg.write('>Environment\n')
    for k in environ.keys():
        err_msg.write(('%s=%s\n' % (k, repr(environ[k]))))
    err_msg.write('<Environment\n')
    err_msg.write('>TraceBack\n')
    for line in traceback.format_exception(typ, value, tb):
        err_msg.write(line)
    err_msg.write('<TraceBack\n')
    try:
        (status, message) = self.get_status_and_message(req, resp, exc)
        resp.setStatus(status)
        resp.setContentLength(len(err_msg.getvalue()))
        resp.getOutputStream().write(err_msg.getvalue())
    except IllegalStateException as ise:
        raise exc
