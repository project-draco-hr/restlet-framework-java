def test_update(self):
    BasicTestMappingProtocol.test_update(self)
    d = self._empty_mapping()
    d.update({1: 100, })
    d.update({2: 20, })
    d.update({1: 1, 2: 2, 3: 3, })
    self.assertEqual(d, {1: 1, 2: 2, 3: 3, })
    d.update()
    self.assertEqual(d, {1: 1, 2: 2, 3: 3, })
    d = self._empty_mapping()
    d.update(x=100)
    d.update(y=20)
    d.update(x=1, y=2, z=3)
    self.assertEqual(d, {'x': 1, 'y': 2, 'z': 3, })
    d = self._empty_mapping()
    d.update([('x', 100), ('y', 20)])
    self.assertEqual(d, {'x': 100, 'y': 20, })
    d = self._empty_mapping()
    d.update([('x', 100), ('y', 20)], x=1, y=2)
    self.assertEqual(d, {'x': 1, 'y': 2, })
    d = self._full_mapping({1: 3, 2: 4, })
    d.update(self._full_mapping({1: 2, 3: 4, 5: 6, }).iteritems())
    self.assertEqual(d, {1: 2, 2: 4, 3: 4, 5: 6, })


    class SimpleUserDict:

        def __init__(self):
            self.d = {1: 1, 2: 2, 3: 3, }

        def keys(self):
            return self.d.keys()

        def __getitem__(self, i):
            return self.d[i]
    d.clear()
    d.update(SimpleUserDict())
    self.assertEqual(d, {1: 1, 2: 2, 3: 3, })
