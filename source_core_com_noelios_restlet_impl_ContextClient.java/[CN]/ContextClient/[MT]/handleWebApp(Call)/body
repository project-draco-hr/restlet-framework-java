{
  if (this.webAppArchive) {
    try {
      String path=call.getResourceRef().getPath();
      JarFile war=new JarFile(getWebAppPath());
      JarEntry entry=war.getJarEntry(path);
      if (entry.isDirectory()) {
        if (warEntries == null) {
          warEntries=new ArrayList<String>();
          for (Enumeration<JarEntry> entries=war.entries(); entries.hasMoreElements(); ) {
            warEntries.add(entries.nextElement().getName());
          }
        }
        ReferenceList rl=new ReferenceList();
        rl.setListRef(call.getResourceRef());
        for (        String warEntry : warEntries) {
          if (warEntry.startsWith(path)) {
            rl.add(new Reference(warEntry));
          }
        }
        call.setOutput(rl.getRepresentation());
        call.setStatus(Statuses.SUCCESS_OK);
      }
 else {
        Representation output=new InputRepresentation(war.getInputStream(entry),null);
        updateMetadata(path,output);
        call.setOutput(output);
        call.setStatus(Statuses.SUCCESS_OK);
      }
    }
 catch (    IOException e) {
      logger.log(Level.WARNING,"Unable to access to the WAR file",e);
      call.setStatus(Statuses.SERVER_ERROR_INTERNAL);
    }
  }
 else {
    String path=call.getResourceRef().getPath();
    if (path.toUpperCase().startsWith("/WEB-INF/")) {
      logger.warning("Forbidden access to the WEB-INF directory detected. Path requested: " + path);
      call.setStatus(Statuses.CLIENT_ERROR_NOT_FOUND);
    }
 else     if (path.toUpperCase().startsWith("/META-INF/")) {
      logger.warning("Forbidden access to the META-INF directory detected. Path requested: " + path);
      call.setStatus(Statuses.CLIENT_ERROR_NOT_FOUND);
    }
 else {
      path=getWebAppPath() + path;
      handleFile(call,path);
    }
  }
}
