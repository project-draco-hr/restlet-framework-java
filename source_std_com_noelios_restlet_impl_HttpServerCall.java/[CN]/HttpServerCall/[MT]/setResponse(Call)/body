{
  try {
    List<CookieSetting> cookies=call.getCookieSettings();
    for (int i=0; i < cookies.size(); i++) {
      getResponseHeaders().add(ConnectorCall.HEADER_SET_COOKIE,CookieUtils.format(cookies.get(i)));
    }
    if (call.getOutputRef() != null) {
      getResponseHeaders().add(HEADER_LOCATION,call.getOutputRef().toString());
    }
    if (call.getSecurity().getChallengeRequest() != null) {
      getResponseHeaders().add(HEADER_WWW_AUTHENTICATE,SecurityUtils.format(call.getSecurity().getChallengeRequest()));
    }
    getResponseHeaders().add(HEADER_SERVER,call.getServerName());
    if (call.getStatus() != null) {
      setResponseStatus(call.getStatus().getCode(),call.getStatus().getDescription());
    }
    if (call.getOutput() != null) {
      Representation output=call.getOutput();
      if (output.getExpirationDate() != null) {
        getResponseHeaders().add(HEADER_EXPIRES,formatDate(output.getExpirationDate(),false));
      }
      if ((output.getEncoding() != null) && (!output.getEncoding().equals(Encodings.IDENTITY))) {
        getResponseHeaders().add(HEADER_CONTENT_ENCODING,output.getEncoding().getName());
      }
      if (output.getLanguage() != null) {
        getResponseHeaders().add(HEADER_CONTENT_LANGUAGE,output.getLanguage().getName());
      }
      if (output.getMediaType() != null) {
        StringBuilder contentType=new StringBuilder(output.getMediaType().getName());
        if (output.getCharacterSet() != null) {
          contentType.append("; charset=").append(output.getCharacterSet().getName());
        }
        getResponseHeaders().add(HEADER_CONTENT_TYPE,contentType.toString());
      }
      if (output.getModificationDate() != null) {
        getResponseHeaders().add(HEADER_LAST_MODIFIED,formatDate(output.getModificationDate(),false));
      }
      if (output.getTag() != null) {
        getResponseHeaders().add(HEADER_ETAG,output.getTag().getName());
      }
      if (call.getOutput().getSize() != Representation.UNKNOWN_SIZE) {
        getResponseHeaders().add(HEADER_CONTENT_LENGTH,Long.toString(call.getOutput().getSize()));
      }
    }
  }
 catch (  Exception e) {
    logger.log(Level.INFO,"Exception intercepted",e);
    setResponseStatus(500,"An unexpected exception occured");
  }
}
