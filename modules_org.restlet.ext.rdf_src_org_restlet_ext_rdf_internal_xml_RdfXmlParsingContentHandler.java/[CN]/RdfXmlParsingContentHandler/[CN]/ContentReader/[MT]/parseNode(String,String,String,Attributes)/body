{
  Reference result=null;
  List<String[]> arcs=new ArrayList<String[]>();
  boolean found=false;
  for (int i=0; i < attributes.getLength(); i++) {
    String qName=attributes.getQName(i);
    if ("rdf:about".equals(qName)) {
      found=true;
      result=getReference(null,attributes.getValue(i),null);
    }
 else     if ("rdf:nodeID".equals(qName)) {
      found=true;
      result=LinkReference.createBlank(attributes.getValue(i));
    }
 else     if ("rdf:ID".equals(qName)) {
      found=true;
      result=getReference(null,"#" + attributes.getValue(i),null);
    }
 else {
      String[] arc={qName,attributes.getValue(i)};
      arcs.add(arc);
    }
  }
  if (!found) {
    result=LinkReference.createBlank(ContentReader.newBlankNodeId());
  }
  if (!"rdf:Description".equals(name)) {
    this.graphHandler.link(result,RdfXmlRepresentation.PREDICATE_TYPE,getReference(uri,localName,name));
  }
  for (  String[] arc : arcs) {
    this.graphHandler.link(result,getReference(null,null,arc[0]),new Literal(arc[1]));
  }
  return result;
}
