{
  Reference result=null;
  List<String[]> arcs=new ArrayList<String[]>();
  boolean found=false;
  for (int i=0; i < attributes.getLength(); i++) {
    String qName=attributes.getQName(i);
    if (checkRdfQName("about",qName)) {
      found=true;
      result=getReference(attributes.getValue(i),null,null);
    }
 else     if (checkRdfQName("nodeID",qName)) {
      found=true;
      result=LinkReference.createBlank(attributes.getValue(i));
    }
 else     if (checkRdfQName("ID",qName)) {
      found=true;
      result=getReference(null,"#" + attributes.getValue(i),null);
    }
 else     if ("xml:lang".equals(qName)) {
      this.currentLanguage=attributes.getValue(i);
    }
 else {
      if (!qName.startsWith("xmlns")) {
        String[] arc={qName,attributes.getValue(i)};
        arcs.add(arc);
      }
    }
  }
  if (!found) {
    result=LinkReference.createBlank(ContentReader.newBlankNodeId());
  }
  if (!checkRdfQName("Description",name)) {
    this.graphHandler.link(result,RdfConstants.PREDICATE_TYPE,getReference(uri,localName,name));
  }
  for (  String[] arc : arcs) {
    this.graphHandler.link(result,getReference(null,null,arc[0]),getLiteral(arc[1],null,this.currentLanguage));
  }
  return result;
}
