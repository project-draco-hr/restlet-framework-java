{
  this.context=context;
  this.clientAdded=false;
  this.conditionAdded=false;
  this.cookiesAdded=false;
  this.inputAdded=false;
  this.referrerAdded=false;
  this.securityAdded=false;
  this.httpCall=httpCall;
  setMethod(Method.valueOf(httpCall.getMethod()));
  setProtocol(httpCall.isConfidential() ? Protocol.HTTPS : Protocol.HTTP);
  if (getHttpCall().isConfidential()) {
    setConfidential(true);
  }
 else {
  }
  Reference resource=new Reference(httpCall.getRequestUri());
  if (resource.isRelative()) {
    StringBuilder sb=new StringBuilder();
    sb.append(getProtocol().getSchemeName()).append("://");
    sb.append(httpCall.getServerName());
    if (httpCall.getServerPort() != getProtocol().getDefaultPort()) {
      sb.append(':').append(httpCall.getServerPort());
    }
    resource.setBaseRef(new Reference(sb.toString()));
    resource=resource.getTargetRef();
  }
  setResourceRef(resource);
}
