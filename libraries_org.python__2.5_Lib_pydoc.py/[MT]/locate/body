def locate(path, forceload=0):
    'Locate an object by name or dotted path, importing as necessary.'
    parts = [part for part in split(path, '.') if part]
    (module, n) = (None, 0)
    while (n < len(parts)):
        nextmodule = safeimport(join(parts[:(n + 1)], '.'), forceload)
        if nextmodule:
            (module, n) = (nextmodule, (n + 1))
        else:
            break
    if module:
        object = module
        for part in parts[n:]:
            try:
                object = getattr(object, part)
            except AttributeError:
                return None
        return object
    elif hasattr(__builtin__, path):
        return getattr(__builtin__, path)
