def getpager():
    'Decide what method to use for paging through text.'
    if sys.platform.startswith('java'):
        return plainpager
    if (type(sys.stdout) is not types.FileType):
        return plainpager
    if ((not sys.stdin.isatty()) or (not sys.stdout.isatty())):
        return plainpager
    if ('PAGER' in os.environ):
        if (sys.platform == 'win32'):
            return (lambda text: tempfilepager(plain(text), os.environ['PAGER']))
        elif (os.environ.get('TERM') in ('dumb', 'emacs')):
            return (lambda text: pipepager(plain(text), os.environ['PAGER']))
        else:
            return (lambda text: pipepager(text, os.environ['PAGER']))
    if (os.environ.get('TERM') in ('dumb', 'emacs')):
        return plainpager
    if ((sys.platform == 'win32') or sys.platform.startswith('os2')):
        return (lambda text: tempfilepager(plain(text), 'more <'))
    if (hasattr(os, 'system') and (os.system('(less) 2>/dev/null') == 0)):
        return (lambda text: pipepager(text, 'less'))
    import tempfile
    (fd, filename) = tempfile.mkstemp()
    os.close(fd)
    try:
        if (hasattr(os, 'system') and (os.system(('more %s' % filename)) == 0)):
            return (lambda text: pipepager(text, 'more'))
        else:
            return ttypager
    finally:
        os.unlink(filename)
