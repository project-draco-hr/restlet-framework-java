{
  Status result=null;
  try {
    if (request.isEntityAvailable()) {
      Representation entity=request.getEntity();
      int majorVersionNumber=SystemUtils.getJavaMajorVersion();
      int minorVersionNumber=SystemUtils.getJavaMinorVersion();
      if ((majorVersionNumber > 1) || ((majorVersionNumber == 1) && (minorVersionNumber >= 5))) {
        if (entity.getSize() != -1) {
          getConnection().setFixedLengthStreamingMode(entity.getSize());
        }
 else {
          if (getHelper().getChunkLength() >= 0) {
            getConnection().setChunkedStreamingMode(getHelper().getChunkLength());
          }
 else {
          }
        }
      }
    }
    getConnection().setRequestMethod(getMethod());
    for (    Header header : getRequestHeaders()) {
      if (header.getValue() != null) {
        getConnection().addRequestProperty(header.getName(),header.getValue());
      }
 else {
        getHelper().getLogger().info("The following header has a null value and has been discarded: " + header.getName());
      }
    }
    if ((Edition.CURRENT == Edition.GAE) && (request.getProtocol() == Protocol.SDC)) {
      getConnection().getRequestProperties().remove(HeaderConstants.HEADER_PROXY_AUTHORIZATION);
      getConnection().setRequestProperty("use_intranet","true");
    }
    getConnection().connect();
    result=super.sendRequest(request);
  }
 catch (  ConnectException ce) {
    getHelper().getLogger().log(Level.FINE,"An error occurred during the connection to the remote HTTP server.",ce);
    result=new Status(Status.CONNECTOR_ERROR_CONNECTION,ce);
  }
catch (  SocketTimeoutException ste) {
    getHelper().getLogger().log(Level.FINE,"An timeout error occurred during the communication with the remote HTTP server.",ste);
    result=new Status(Status.CONNECTOR_ERROR_COMMUNICATION,ste);
  }
catch (  FileNotFoundException fnfe) {
    getHelper().getLogger().log(Level.FINE,"An unexpected error occurred during the sending of the HTTP request.",fnfe);
    result=new Status(Status.CONNECTOR_ERROR_INTERNAL,fnfe);
  }
catch (  IOException ioe) {
    getHelper().getLogger().log(Level.FINE,"An error occurred during the communication with the remote HTTP server.",ioe);
    result=new Status(Status.CONNECTOR_ERROR_COMMUNICATION,ioe);
  }
catch (  Exception e) {
    getHelper().getLogger().log(Level.FINE,"An unexpected error occurred during the sending of the HTTP request.",e);
    result=new Status(Status.CONNECTOR_ERROR_INTERNAL,e);
  }
  return result;
}
