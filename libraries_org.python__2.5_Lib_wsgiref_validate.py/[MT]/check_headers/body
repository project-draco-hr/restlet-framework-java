def check_headers(headers):
    assert_((type(headers) is ListType), ('Headers (%r) must be of type list: %r' % (headers, type(headers))))
    header_names = {}
    for item in headers:
        assert_((type(item) is TupleType), ('Individual headers (%r) must be of type tuple: %r' % (item, type(item))))
        assert_((len(item) == 2))
        (name, value) = item
        assert_((name.lower() != 'status'), ('The Status header cannot be used; it conflicts with CGI script, and HTTP status is not given through headers (value: %r).' % value))
        header_names[name.lower()] = None
        assert_((('\n' not in name) and (':' not in name)), ("Header names may not contain ':' or '\\n': %r" % name))
        assert_(header_re.search(name), ('Bad header name: %r' % name))
        assert_(((not name.endswith('-')) and (not name.endswith('_'))), ("Names may not end in '-' or '_': %r" % name))
        if bad_header_value_re.search(value):
            assert_(0, ('Bad header value: %r (bad char: %r)' % (value, bad_header_value_re.search(value).group(0))))
