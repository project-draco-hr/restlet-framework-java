def _create_gnulong(self, name, type):
    'Create a GNU longname/longlink header from name.\n           It consists of an extended tar header, with the length\n           of the longname as size, followed by data blocks,\n           which contain the longname as a null terminated string.\n        '
    name += NUL
    tarinfo = self.__class__()
    tarinfo.name = '././@LongLink'
    tarinfo.type = type
    tarinfo.mode = 0
    tarinfo.size = len(name)
    buf = tarinfo.tobuf()
    buf += name
    (blocks, remainder) = divmod(len(name), BLOCKSIZE)
    if (remainder > 0):
        buf += ((BLOCKSIZE - remainder) * NUL)
    return buf
