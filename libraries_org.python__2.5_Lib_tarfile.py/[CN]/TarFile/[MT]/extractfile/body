def extractfile(self, member):
    "Extract a member from the archive as a file object. `member' may be\n           a filename or a TarInfo object. If `member' is a regular file, a\n           file-like object is returned. If `member' is a link, a file-like\n           object is constructed from the link's target. If `member' is none of\n           the above, None is returned.\n           The file-like object is read-only and provides the following\n           methods: read(), readline(), readlines(), seek() and tell()\n        "
    self._check('r')
    if isinstance(member, TarInfo):
        tarinfo = member
    else:
        tarinfo = self.getmember(member)
    if tarinfo.isreg():
        return self.fileobject(self, tarinfo)
    elif (tarinfo.type not in SUPPORTED_TYPES):
        return self.fileobject(self, tarinfo)
    elif (tarinfo.islnk() or tarinfo.issym()):
        if isinstance(self.fileobj, _Stream):
            raise StreamError('cannot extract (sym)link as file object')
        else:
            return self.extractfile(self._getmember(tarinfo.linkname, tarinfo))
    else:
        return None
