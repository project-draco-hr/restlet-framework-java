def normpath(path):
    'Normalize a path, e.g. A//B, A/./B and A/foo/../B all become A/B.\n    Also, components of the path are silently truncated to 8+3 notation.'
    path = path.replace('/', '\\')
    (prefix, path) = splitdrive(path)
    while (path[:1] == '\\'):
        prefix = (prefix + '\\')
        path = path[1:]
    comps = path.split('\\')
    i = 0
    while (i < len(comps)):
        if (comps[i] == '.'):
            del comps[i]
        elif ((comps[i] == '..') and (i > 0) and (comps[(i - 1)] not in ('', '..'))):
            del comps[(i - 1):(i + 1)]
            i = (i - 1)
        elif ((comps[i] == '') and (i > 0) and (comps[(i - 1)] != '')):
            del comps[i]
        elif ('.' in comps[i]):
            comp = comps[i].split('.')
            comps[i] = ((comp[0][:8] + '.') + comp[1][:3])
            i = (i + 1)
        elif (len(comps[i]) > 8):
            comps[i] = comps[i][:8]
            i = (i + 1)
        else:
            i = (i + 1)
    if ((not prefix) and (not comps)):
        comps.append('.')
    return (prefix + '\\'.join(comps))
