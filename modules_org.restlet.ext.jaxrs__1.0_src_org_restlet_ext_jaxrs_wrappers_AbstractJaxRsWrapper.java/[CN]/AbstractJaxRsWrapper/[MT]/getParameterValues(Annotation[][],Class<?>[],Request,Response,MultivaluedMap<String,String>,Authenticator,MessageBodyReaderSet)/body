{
  int paramNo=parameterTypes.length;
  if (paramNo == 0)   return new Object[0];
  Object[] args=new Object[paramNo];
  boolean annotRequired=false;
  HttpContextImpl httpContext=null;
  for (int i=0; i < args.length; i++) {
    Class<?> paramType=parameterTypes[i];
    Object arg;
    try {
      arg=getParameterValue(parameterAnnotationss[i],paramType,restletRequest,restletResponse,httpContext,allTemplParamsEnc,i,authenticator);
      if (httpContext == null && arg instanceof HttpContextImpl)       httpContext=(HttpContextImpl)arg;
    }
 catch (    IllegalOrNoAnnotationException e) {
      if (annotRequired)       throw e;
      annotRequired=true;
      if (mbrs == null) {
        throw new NoMessageBodyReadersException();
      }
      Representation entity=restletRequest.getEntity();
      if (entity == null) {
        arg=null;
      }
 else {
        MediaType mediaType=entity.getMediaType();
        MessageBodyReader mbr=mbrs.getBest(mediaType,paramType);
        if (mbr == null) {
          restletResponse.setStatus(Status.CLIENT_ERROR_NOT_ACCEPTABLE);
          throw new RequestHandledException();
        }
        MultivaluedMap<String,String> httpHeaders=Util.getJaxRsHttpHeaders(restletRequest);
        try {
          javax.ws.rs.core.MediaType jaxRsMediaType=Converter.toJaxRsMediaType(mediaType,entity.getCharacterSet());
          arg=mbr.readFrom(paramType,jaxRsMediaType,httpHeaders,entity.getStream());
        }
 catch (        IOException e1) {
          throw new CanNotIntatiateParameterException("Can not instatiate parameter of type " + paramType.getName());
        }
      }
    }
    args[i]=arg;
  }
  return args;
}
