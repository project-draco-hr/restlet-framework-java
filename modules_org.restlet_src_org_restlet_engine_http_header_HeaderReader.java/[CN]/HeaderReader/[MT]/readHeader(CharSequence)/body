{
  Parameter result=null;
  int start=0;
  int index=0;
  int next=header.charAt(index++);
  if (isCarriageReturn(next)) {
    next=header.charAt(index++);
    if (!isLineFeed(next)) {
      throw new IOException("Invalid end of headers. Line feed missing after the carriage return.");
    }
  }
 else {
    result=new Parameter();
    while ((next != -1) && (next != ':')) {
      next=header.charAt(index++);
    }
    if (next == -1) {
      throw new IOException("Unable to parse the header name. End of line reached too early.");
    }
    result.setName(header.subSequence(start,index).toString());
    next=header.charAt(index++);
    while (isSpace(next)) {
      next=header.charAt(index++);
    }
    start=index;
    while ((next != -1) && (!isCarriageReturn(next))) {
      next=header.charAt(index++);
    }
    if (next == -1) {
      throw new IOException("Unable to parse the header value. End of stream reached too early.");
    }
    next=header.charAt(index++);
    if (isLineFeed(next)) {
      result.setValue(header.subSequence(start,index).toString());
    }
 else {
      throw new IOException("Unable to parse the HTTP header value. The carriage return must be followed by a line feed.");
    }
  }
  return result;
}
