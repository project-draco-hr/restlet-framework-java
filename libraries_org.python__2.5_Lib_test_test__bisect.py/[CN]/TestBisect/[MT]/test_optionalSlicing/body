def test_optionalSlicing(self):
    for (func, data, elem, expected) in self.precomputedCases:
        for lo in xrange(4):
            lo = min(len(data), lo)
            for hi in xrange(3, 8):
                hi = min(len(data), hi)
                ip = func(data, elem, lo, hi)
                self.failUnless((lo <= ip <= hi))
                if ((func is bisect_left) and (ip < hi)):
                    self.failUnless((elem <= data[ip]))
                if ((func is bisect_left) and (ip > lo)):
                    self.failUnless((data[(ip - 1)] < elem))
                if ((func is bisect_right) and (ip < hi)):
                    self.failUnless((elem < data[ip]))
                if ((func is bisect_right) and (ip > lo)):
                    self.failUnless((data[(ip - 1)] <= elem))
                self.assertEqual(ip, max(lo, min(hi, expected)))
