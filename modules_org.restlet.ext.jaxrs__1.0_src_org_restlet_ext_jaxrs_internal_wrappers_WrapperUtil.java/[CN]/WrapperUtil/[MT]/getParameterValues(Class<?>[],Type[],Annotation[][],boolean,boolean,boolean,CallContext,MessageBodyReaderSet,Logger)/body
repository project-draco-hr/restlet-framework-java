{
  int paramNo=paramTypes.length;
  if (paramNo == 0)   return new Object[0];
  Object[] args=new Object[paramNo];
  if (logger == null)   logger=Logger.getAnonymousLogger();
  for (int i=0; i < args.length; i++) {
    Class<?> paramType=paramTypes[i];
    Type paramGenericType=paramGenericTypes[i];
    Object arg;
    Annotation[] paramAnnotations=paramAnnotationss[i];
    try {
      arg=getParameterValue(paramAnnotations,paramType,paramGenericType,onlyContextAnnot,callContext,logger,leaveEncoded,i);
    }
 catch (    MissingAnnotationException ionae) {
      if (!allowEntity)       throw ionae;
      allowEntity=false;
      arg=convertRepresentation(callContext,paramType,paramGenericType,paramAnnotations,mbrs,logger);
    }
    args[i]=arg;
  }
  return args;
}
