def warn_explicit(message, category, filename, lineno, module=None, registry=None, module_globals=None):
    if (module is None):
        module = (filename or '<unknown>')
        if (module[(-3):].lower() == '.py'):
            module = module[:(-3)]
    if (registry is None):
        registry = {}
    if isinstance(message, Warning):
        text = str(message)
        category = message.__class__
    else:
        text = message
        message = category(message)
    key = (text, category, lineno)
    if registry.get(key):
        return
    for item in filters:
        (action, msg, cat, mod, ln) = item
        if (((msg is None) or msg.match(text)) and issubclass(category, cat) and ((mod is None) or mod.match(module)) and ((ln == 0) or (lineno == ln))):
            break
    else:
        action = defaultaction
    if (action == 'ignore'):
        registry[key] = 1
        return
    linecache.getlines(filename, module_globals)
    if (action == 'error'):
        raise message
    if (action == 'once'):
        registry[key] = 1
        oncekey = (text, category)
        if onceregistry.get(oncekey):
            return
        onceregistry[oncekey] = 1
    elif (action == 'always'):
        pass
    elif (action == 'module'):
        registry[key] = 1
        altkey = (text, category, 0)
        if registry.get(altkey):
            return
        registry[altkey] = 1
    elif (action == 'default'):
        registry[key] = 1
    else:
        raise RuntimeError(('Unrecognized action (%r) in warnings.filters:\n %s' % (action, item)))
    showwarning(message, category, filename, lineno)
