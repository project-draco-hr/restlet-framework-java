def test_misc(maxdigits=MAXDIGITS):
    if verbose:
        print 'long miscellaneous operations'
    import sys
    hugepos = sys.maxint
    hugeneg = ((- hugepos) - 1)
    hugepos_aslong = long(hugepos)
    hugeneg_aslong = long(hugeneg)
    check((hugepos == hugepos_aslong), 'long(sys.maxint) != sys.maxint')
    check((hugeneg == hugeneg_aslong), 'long(-sys.maxint-1) != -sys.maxint-1')
    try:
        check((int(hugepos_aslong) == hugepos), 'converting sys.maxint to long and back to int fails')
    except OverflowError:
        raise TestFailed, 'int(long(sys.maxint)) overflowed!'
    try:
        check((int(hugeneg_aslong) == hugeneg), 'converting -sys.maxint-1 to long and back to int fails')
    except OverflowError:
        raise TestFailed, 'int(long(-sys.maxint-1)) overflowed!'
    x = (hugepos_aslong + 1)
    try:
        y = int(x)
    except OverflowError:
        raise TestFailed, "int(long(sys.maxint) + 1) mustn't overflow"
    if (not isinstance(y, long)):
        raise TestFailed('int(long(sys.maxint) + 1) should have returned long')
    x = (hugeneg_aslong - 1)
    try:
        y = int(x)
    except OverflowError:
        raise TestFailed, "int(long(-sys.maxint-1) - 1) mustn't overflow"
    if (not isinstance(y, long)):
        raise TestFailed('int(long(-sys.maxint-1) - 1) should have returned long')
