def test_excluding_predicates(self):
    if (not test_support.is_jython):
        self.istest(inspect.isbuiltin, 'sys.exit')
    self.istest(inspect.isbuiltin, '[].append')
    self.istest(inspect.isclass, 'mod.StupidGit')
    self.istest(inspect.iscode, 'mod.spam.func_code')
    self.istest(inspect.isframe, 'tb.tb_frame')
    self.istest(inspect.isfunction, 'mod.spam')
    self.istest(inspect.ismethod, 'mod.StupidGit.abuse')
    self.istest(inspect.ismethod, 'git.argue')
    self.istest(inspect.ismodule, 'mod')
    self.istest(inspect.istraceback, 'tb')
    self.istest(inspect.isdatadescriptor, '__builtin__.file.closed')
    self.istest(inspect.isdatadescriptor, '__builtin__.file.softspace')
    if hasattr(types, 'GetSetDescriptorType'):
        self.istest(inspect.isgetsetdescriptor, 'type(tb.tb_frame).f_locals')
    elif (not test_support.is_jython):
        self.failIf(inspect.isgetsetdescriptor(type(tb.tb_frame).f_locals))
    if hasattr(types, 'MemberDescriptorType'):
        self.istest(inspect.ismemberdescriptor, 'datetime.timedelta.days')
    else:
        self.failIf(inspect.ismemberdescriptor(datetime.timedelta.days))
