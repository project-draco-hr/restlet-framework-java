{
  DiscoverableResource scoped=null;
  Set<Method> methods=new HashSet<Method>();
  log.info("Looking for a scoped resource");
  for (Restlet next=getNext(); next != null; ) {
    if (next instanceof Finder) {
      Finder f=(Finder)next;
      ServerResource sr=f.find(request,response);
      if (sr instanceof DiscoverableResource) {
        scoped=(DiscoverableResource)sr;
        List<AnnotationInfo> ai=AnnotationUtils.getInstance().getAnnotations(sr.getClass());
        for (        AnnotationInfo i : ai) {
          methods.add(i.getRestletMethod());
        }
        Set<Method> am=sr.getAllowedMethods();
        log.info("AllowedMethods size = " + am);
      }
      break;
    }
 else     if (next instanceof Filter) {
      next=((Filter)next).getNext();
    }
 else {
      getLogger().warning("Unsupported class found in loop : " + next.getClass().getCanonicalName());
      break;
    }
  }
  log.info("After scoped resource - " + scoped);
  if (scoped == null)   return null;
  DiscoverableEndpointInfo result=new DiscoverableEndpointInfo(methods);
  List<Role> roles=scoped.getRoles(request.getResourceRef(),request.getMethod());
  if (roles != null)   result.setScopes(roles);
  String owner=scoped.getOwner(request.getResourceRef());
  if (owner != null)   result.setOwner(owner);
  return result;
}
