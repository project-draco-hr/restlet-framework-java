{
  int i;
  int n=length();
  if (n == 0) {
    return "{}";
  }
  Iterator keys=keys();
  StringBuffer sb=new StringBuffer("{");
  int newindent=indent + indentFactor;
  Object o;
  if (n == 1) {
    o=keys.next();
    sb.append(quote(o.toString()));
    sb.append(": ");
    sb.append(valueToString(this.myHashMap.get(o),indentFactor,indent));
  }
 else {
    while (keys.hasNext()) {
      o=keys.next();
      if (sb.length() > 1) {
        sb.append(",\n");
      }
 else {
        sb.append('\n');
      }
      for (i=0; i < newindent; i+=1) {
        sb.append(' ');
      }
      sb.append(quote(o.toString()));
      sb.append(": ");
      sb.append(valueToString(this.myHashMap.get(o),indentFactor,newindent));
    }
    if (sb.length() > 1) {
      sb.append('\n');
      for (i=0; i < indent; i+=1) {
        sb.append(' ');
      }
    }
  }
  sb.append('}');
  return sb.toString();
}
