def test_slotted(self):


    class Foo(object):
        __slots__ = 'bar'
    self.assert_(('__dict__' not in Foo.__dict__))
    foo = Foo()
    self.assert_((not hasattr(foo, '__dict__')))
    foo.bar = 'hello bar'
    self.assertEqual(foo.bar, 'hello bar')
    self.assertRaises(AttributeError, setattr, foo, 'foo', 'hello foo')


    class Baz(object):
        __slots__ = ['python', 'jython']
    self.assert_(('__dict__' not in Baz.__dict__))
    baz = Baz()
    self.assert_((not hasattr(baz, '__dict__')))
    baz.python = 'hello python'
    baz.jython = 'hello jython'
    self.assertEqual(baz.python, 'hello python')
    self.assertEqual(baz.jython, 'hello jython')
    self.assertRaises(AttributeError, setattr, baz, 'foo', 'hello')
