{
  try {
    List<CookieSetting> cookies=call.getCookieSettings();
    for (int i=0; i < cookies.size(); i++) {
      addResponseHeader(ConnectorCall.HEADER_SET_COOKIE,CookieUtils.format(cookies.get(i)));
    }
    if (call.getRedirectionRef() != null) {
      addResponseHeader(HEADER_LOCATION,call.getRedirectionRef().toString());
    }
    if (call.getSecurity().getChallengeRequest() != null) {
      addResponseHeader(HEADER_WWW_AUTHENTICATE,SecurityUtils.format(call.getSecurity().getChallengeRequest()));
    }
    addResponseHeader(HEADER_SERVER,call.getServerName());
    if (call.getStatus() != null) {
      setResponseStatus(call.getStatus().getHttpCode(),call.getStatus().getDescription());
    }
    if (call.getOutput() != null) {
      RepresentationMetadata meta=call.getOutput().getMetadata();
      if (meta.getExpirationDate() != null) {
        addResponseHeader(HEADER_EXPIRES,formatDate(meta.getExpirationDate(),false));
      }
      if ((meta.getEncoding() != null) && (!meta.getEncoding().equals(Encodings.IDENTITY))) {
        addResponseHeader(HEADER_CONTENT_ENCODING,meta.getEncoding().getName());
      }
      if (meta.getLanguage() != null) {
        addResponseHeader(HEADER_CONTENT_LANGUAGE,meta.getLanguage().getName());
      }
      if (meta.getMediaType() != null) {
        StringBuilder contentType=new StringBuilder(meta.getMediaType().getName());
        if (meta.getCharacterSet() != null) {
          contentType.append("; charset=").append(meta.getCharacterSet().getName());
        }
        addResponseHeader(HEADER_CONTENT_TYPE,contentType.toString());
      }
      if (meta.getModificationDate() != null) {
        addResponseHeader(HEADER_LAST_MODIFIED,formatDate(meta.getModificationDate(),false));
      }
      if (meta.getTag() != null) {
        addResponseHeader(HEADER_ETAG,meta.getTag().getName());
      }
      if (call.getOutput().getSize() != -1) {
        addResponseHeader(HEADER_CONTENT_LENGTH,Long.toString(call.getOutput().getSize()));
      }
    }
  }
 catch (  Exception e) {
    logger.log(Level.INFO,"Exception intercepted",e);
    setResponseStatus(500,"An unexpected exception occured");
  }
}
