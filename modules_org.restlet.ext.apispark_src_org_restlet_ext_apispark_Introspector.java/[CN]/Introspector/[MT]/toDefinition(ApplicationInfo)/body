{
  Definition result=null;
  if (application != null) {
    result=new Definition();
    result.setVersion(application.getVersion());
    if (application.getResources().getBaseRef() != null) {
      result.setEndpoint(application.getResources().getBaseRef().toString());
    }
    Contract contract=new Contract();
    result.setContract(contract);
    contract.setDescription(toString(application.getDocumentations()));
    contract.setName(application.getName());
    if (contract.getName() == null || contract.getName().isEmpty()) {
      contract.setName(application.getClass().getName());
      Context.getCurrentLogger().log(Level.WARNING,"Please provide a name to your application, used " + contract.getName() + " by default.");
    }
    contract.setResources(new ArrayList<Resource>());
    Map<String,RepresentationInfo> mapReps=new HashMap<String,RepresentationInfo>();
    addResources(application,contract,application.getResources().getResources(),result.getEndpoint(),mapReps);
    java.util.List<String> protocols=new ArrayList<String>();
    for (    ConnectorHelper<Server> helper : Engine.getInstance().getRegisteredServers()) {
      for (      Protocol protocol : helper.getProtocols()) {
        if (!protocols.contains(protocol.getName())) {
          protocols.add(protocol.getName());
        }
      }
    }
    contract.setRepresentations(new ArrayList<Representation>());
    for (    RepresentationInfo ri : application.getRepresentations()) {
      if (!mapReps.containsKey(ri.getIdentifier())) {
        mapReps.put(ri.getIdentifier(),ri);
      }
    }
    for (    RepresentationInfo ri : mapReps.values()) {
      Representation rep=new Representation();
      rep.setDescription(toString(ri.getDocumentations()));
      rep.setName(ri.getName());
      Variant variant=new Variant();
      variant.setDataType(ri.getMediaType().getName());
      rep.setVariants(new ArrayList<Variant>());
      rep.getVariants().add(variant);
      rep.setProperties(ri.getProperties());
      rep.setRaw(ri.isRaw());
      contract.getRepresentations().add(rep);
    }
  }
  return result;
}
