{
  try {
    ClientResource cr=new ClientResource(serviceUrl + "definitions");
    cr.setChallengeResponse(ChallengeScheme.HTTP_BASIC,ulogin,upwd);
    LOGGER.fine("Generate documentation");
    if (definitionId == null) {
      LOGGER.fine("Create a new documentation");
      cr.post(definition,MediaType.APPLICATION_JSON);
    }
 else {
      cr.addSegment(definitionId);
      LOGGER.fine("Update the documentation of " + cr.getReference().toString());
      cr.put(definition,MediaType.APPLICATION_JSON);
    }
    LOGGER.fine("Display result");
    System.out.println("Process successfully achieved.");
    if (cr.getResponseEntity() != null && cr.getResponseEntity().isAvailable()) {
      try {
        cr.getResponseEntity().write(System.out);
        System.out.println();
      }
 catch (      IOException e) {
        LOGGER.warning("Request successfully achieved by the server, but it's response cannot be printed");
      }
    }
    if (cr.getLocationRef() != null) {
      System.out.println("Your Web API documentation is accessible at this URL: " + cr.getLocationRef());
    }
  }
 catch (  ResourceException e) {
    if (e.getStatus().isConnectorError()) {
      LOGGER.severe("Cannot reach the remote service, could you check your network connection?");
      LOGGER.severe("Could you check that the following service is up? " + serviceUrl);
    }
 else     if (e.getStatus().isClientError()) {
      LOGGER.severe("Check that you provide valid credentials, or valid service url.");
    }
 else     if (e.getStatus().isServerError()) {
      LOGGER.severe("The server side encounters some issues, please try later.");
    }
  }
}
