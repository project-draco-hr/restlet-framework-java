def test_contains(self):
    self.assert_(('a' in u'abdb'))
    self.assert_(('a' in u'bdab'))
    self.assert_(('a' in u'bdaba'))
    self.assert_(('a' in u'bdba'))
    self.assert_(('a' in u'bdba'))
    self.assert_((u'a' in u'bdba'))
    self.assert_((u'a' not in u'bdb'))
    self.assert_((u'a' not in 'bdb'))
    self.assert_((u'a' in 'bdba'))
    self.assert_((u'a' in ('a', 1, None)))
    self.assert_((u'a' in (1, None, 'a')))
    self.assert_((u'a' in (1, None, u'a')))
    self.assert_(('a' in ('a', 1, None)))
    self.assert_(('a' in (1, None, 'a')))
    self.assert_(('a' in (1, None, u'a')))
    self.assert_(('a' not in ('x', 1, u'y')))
    self.assert_(('a' not in ('x', 1, None)))
    self.assert_((u'abcd' not in u'abcxxxx'))
    self.assert_((u'ab' in u'abcd'))
    self.assert_(('ab' in u'abc'))
    self.assert_((u'ab' in 'abc'))
    self.assert_((u'ab' in (1, None, u'ab')))
    self.assert_((u'' in u'abc'))
    self.assert_(('' in u'abc'))
    self.assert_((u'' in ''))
    self.assert_(('' in u''))
    self.assert_((u'' in u''))
    self.assert_((u'' in 'abc'))
    self.assert_(('' in u'abc'))
    self.assert_((u'' in u'abc'))
    self.assert_((u'\x00' not in 'abc'))
    self.assert_(('\x00' not in u'abc'))
    self.assert_((u'\x00' not in u'abc'))
    self.assert_((u'\x00' in '\x00abc'))
    self.assert_(('\x00' in u'\x00abc'))
    self.assert_((u'\x00' in u'\x00abc'))
    self.assert_((u'\x00' in 'abc\x00'))
    self.assert_(('\x00' in u'abc\x00'))
    self.assert_((u'\x00' in u'abc\x00'))
    self.assert_((u'a' in '\x00abc'))
    self.assert_(('a' in u'\x00abc'))
    self.assert_((u'a' in u'\x00abc'))
    self.assert_((u'asdf' in 'asdf'))
    self.assert_(('asdf' in u'asdf'))
    self.assert_((u'asdf' in u'asdf'))
    self.assert_((u'asdf' not in 'asd'))
    self.assert_(('asdf' not in u'asd'))
    self.assert_((u'asdf' not in u'asd'))
    self.assert_((u'asdf' not in ''))
    self.assert_(('asdf' not in u''))
    self.assert_((u'asdf' not in u''))
    self.assertRaises(TypeError, u'abc'.__contains__)
