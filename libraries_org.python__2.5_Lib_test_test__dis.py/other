from test.test_support import verify, verbose, TestFailed, run_unittest
import sys
import dis
import StringIO
import unittest
dis_f = (' %-4d         0 LOAD_FAST                0 (a)\n              3 PRINT_ITEM\n              4 PRINT_NEWLINE\n\n %-4d         5 LOAD_CONST               1 (1)\n              8 RETURN_VALUE\n' % ((_f.func_code.co_firstlineno + 1), (_f.func_code.co_firstlineno + 2)))
dis_bug708901 = (' %-4d         0 SETUP_LOOP              23 (to 26)\n              3 LOAD_GLOBAL              0 (range)\n              6 LOAD_CONST               1 (1)\n\n %-4d         9 LOAD_CONST               2 (10)\n             12 CALL_FUNCTION            2\n             15 GET_ITER\n        >>   16 FOR_ITER                 6 (to 25)\n             19 STORE_FAST               0 (res)\n\n %-4d        22 JUMP_ABSOLUTE           16\n        >>   25 POP_BLOCK\n        >>   26 LOAD_CONST               0 (None)\n             29 RETURN_VALUE\n' % ((bug708901.func_code.co_firstlineno + 1), (bug708901.func_code.co_firstlineno + 2), (bug708901.func_code.co_firstlineno + 3)))
dis_bug1333982 = (' %-4d         0 LOAD_CONST               1 (0)\n              3 JUMP_IF_TRUE            41 (to 47)\n              6 POP_TOP\n              7 LOAD_GLOBAL              0 (AssertionError)\n             10 BUILD_LIST               0\n             13 DUP_TOP\n             14 STORE_FAST               1 (_[1])\n             17 LOAD_FAST                0 (x)\n             20 GET_ITER\n        >>   21 FOR_ITER                13 (to 37)\n             24 STORE_FAST               2 (s)\n             27 LOAD_FAST                1 (_[1])\n             30 LOAD_FAST                2 (s)\n             33 LIST_APPEND\n             34 JUMP_ABSOLUTE           21\n        >>   37 DELETE_FAST              1 (_[1])\n\n %-4d        40 LOAD_CONST               2 (1)\n             43 BINARY_ADD\n             44 RAISE_VARARGS            2\n        >>   47 POP_TOP\n\n %-4d        48 LOAD_CONST               0 (None)\n             51 RETURN_VALUE\n' % ((bug1333982.func_code.co_firstlineno + 1), (bug1333982.func_code.co_firstlineno + 2), (bug1333982.func_code.co_firstlineno + 3)))
_BIG_LINENO_FORMAT = '%3d           0 LOAD_GLOBAL              0 (spam)\n              3 POP_TOP\n              4 LOAD_CONST               0 (None)\n              7 RETURN_VALUE\n'
if (__name__ == '__main__'):
    test_main()
