{
  try {
    final Component component=new Component();
    component.getServers().add(Protocol.HTTP,9876);
    final Restlet handler=new Restlet(component.getContext()){
      @Override public void handle(      Request request,      Response response){
        if (request.getMethod().equals(Method.PUT)) {
          System.out.println("Handling the call...");
          System.out.println("Trying to get the entity as a form...");
          final Form form=request.getEntityAsForm();
          System.out.println("Trying to getParameters...");
          final StringBuffer sb=new StringBuffer("foo");
          for (          final Parameter p : form) {
            System.out.println(p);
            sb.append("field name = ");
            sb.append(p.getName());
            sb.append("value = ");
            sb.append(p.getValue());
            sb.append("\n");
            System.out.println(sb.toString());
          }
          response.setEntity(sb.toString(),MediaType.TEXT_PLAIN);
          System.out.println("Done!");
        }
 else {
          response.setStatus(Status.SERVER_ERROR_NOT_IMPLEMENTED);
        }
      }
    }
;
    component.getDefaultHost().attach("/test",handler);
    component.start();
  }
 catch (  final Exception e) {
    e.printStackTrace();
  }
}
