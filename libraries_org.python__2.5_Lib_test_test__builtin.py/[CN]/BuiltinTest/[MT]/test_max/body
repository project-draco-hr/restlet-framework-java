def test_max(self):
    self.assertEqual(max('123123'), '3')
    self.assertEqual(max(1, 2, 3), 3)
    self.assertEqual(max((1, 2, 3, 1, 2, 3)), 3)
    self.assertEqual(max([1, 2, 3, 1, 2, 3]), 3)
    self.assertEqual(max(1, 2L, 3.0), 3.0)
    self.assertEqual(max(1L, 2.0, 3), 3)
    self.assertEqual(max(1.0, 2, 3L), 3L)
    for stmt in ('max(key=int)', 'max(1, key=int)', 'max(1, 2, keystone=int)', 'max(1, 2, key=int, abc=int)', 'max(1, 2, key=1)'):
        try:
            exec stmt in globals()
        except TypeError:
            pass
        else:
            self.fail(stmt)
    self.assertEqual(max((1,), key=neg), 1)
    self.assertEqual(max((1, 2), key=neg), 1)
    self.assertEqual(max(1, 2, key=neg), 1)
    data = [random.randrange(200) for i in range(100)]
    keys = dict(((elem, random.randrange(50)) for elem in data))
    f = keys.__getitem__
    self.assertEqual(max(data, key=f), sorted(reversed(data), key=f)[(-1)])
