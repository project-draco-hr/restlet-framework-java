def test_float(self):
    self.assertEqual(float(3.14), 3.14)
    self.assertEqual(float(314), 314.0)
    self.assertEqual(float(314L), 314.0)
    self.assertEqual(float('  3.14  '), 3.14)
    self.assertRaises(ValueError, float, '  0x3.1  ')
    if (not is_jython):
        self.assertRaises(ValueError, float, '  -0x3.p-1  ')
    if have_unicode:
        self.assertEqual(float(unicode('  3.14  ')), 3.14)
        self.assertEqual(float(unicode('  \\u0663.\\u0661\\u0664  ', 'raw-unicode-escape')), 3.14)
        if is_jython:
            self.assertEquals(float(unicode(('1' * 10000))), float(unicode(('1' * 10000))))
        else:
            self.assertRaises(ValueError, float, unicode(('1' * 10000)))
