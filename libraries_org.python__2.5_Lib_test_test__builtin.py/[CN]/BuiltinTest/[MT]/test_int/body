def test_int(self):
    self.assertEqual(int(314), 314)
    self.assertEqual(int(3.14), 3)
    self.assertEqual(int(314L), 314)
    self.assertEqual(int((-3.14)), (-3))
    self.assertEqual(int(3.9), 3)
    self.assertEqual(int((-3.9)), (-3))
    self.assertEqual(int(3.5), 3)
    self.assertEqual(int((-3.5)), (-3))
    self.assertEqual(int('10', 16), 16L)
    if have_unicode:
        self.assertEqual(int(unicode('10'), 16), 16L)
    for (s, v) in L:
        for sign in ('', '+', '-'):
            for prefix in ('', ' ', '\t', '  \t\t  '):
                ss = ((prefix + sign) + s)
                vv = v
                if ((sign == '-') and (v is not ValueError)):
                    vv = (- v)
                try:
                    self.assertEqual(int(ss), vv)
                except v:
                    pass
    s = repr(((-1) - sys.maxint))
    self.assertEqual((int(s) + 1), (- sys.maxint))
    int(s[1:])
    x = int(1e+100)
    self.assert_(isinstance(x, long))
    x = int((-1e+100))
    self.assert_(isinstance(x, long))
    x = ((-1) - sys.maxint)
    self.assertEqual((x >> 1), (x // 2))
    self.assertRaises(ValueError, int, '123\x00')
    self.assertRaises(ValueError, int, '53', 40)
    x = int(('1' * 600))
    self.assert_(isinstance(x, long))
    if have_unicode:
        x = int((unichr(1633) * 600))
        self.assert_(isinstance(x, long))
    self.assertRaises(TypeError, int, 1, 12)
    self.assertEqual(int('0123', 0), 83)
    self.assertEqual(int('0x123', 16), 291)
    self.assertEqual(int('100000000000000000000000000000000', 2), 4294967296L)
    self.assertEqual(int('102002022201221111211', 3), 4294967296L)
    self.assertEqual(int('10000000000000000', 4), 4294967296L)
    self.assertEqual(int('32244002423141', 5), 4294967296L)
    self.assertEqual(int('1550104015504', 6), 4294967296L)
    self.assertEqual(int('211301422354', 7), 4294967296L)
    self.assertEqual(int('40000000000', 8), 4294967296L)
    self.assertEqual(int('12068657454', 9), 4294967296L)
    self.assertEqual(int('4294967296', 10), 4294967296L)
    self.assertEqual(int('1904440554', 11), 4294967296L)
    self.assertEqual(int('9ba461594', 12), 4294967296L)
    self.assertEqual(int('535a79889', 13), 4294967296L)
    self.assertEqual(int('2ca5b7464', 14), 4294967296L)
    self.assertEqual(int('1a20dcd81', 15), 4294967296L)
    self.assertEqual(int('100000000', 16), 4294967296L)
    self.assertEqual(int('a7ffda91', 17), 4294967296L)
    self.assertEqual(int('704he7g4', 18), 4294967296L)
    self.assertEqual(int('4f5aff66', 19), 4294967296L)
    self.assertEqual(int('3723ai4g', 20), 4294967296L)
    self.assertEqual(int('281d55i4', 21), 4294967296L)
    self.assertEqual(int('1fj8b184', 22), 4294967296L)
    self.assertEqual(int('1606k7ic', 23), 4294967296L)
    self.assertEqual(int('mb994ag', 24), 4294967296L)
    self.assertEqual(int('hek2mgl', 25), 4294967296L)
    self.assertEqual(int('dnchbnm', 26), 4294967296L)
    self.assertEqual(int('b28jpdm', 27), 4294967296L)
    self.assertEqual(int('8pfgih4', 28), 4294967296L)
    self.assertEqual(int('76beigg', 29), 4294967296L)
    self.assertEqual(int('5qmcpqg', 30), 4294967296L)
    self.assertEqual(int('4q0jto4', 31), 4294967296L)
    self.assertEqual(int('4000000', 32), 4294967296L)
    self.assertEqual(int('3aokq94', 33), 4294967296L)
    self.assertEqual(int('2qhxjli', 34), 4294967296L)
    self.assertEqual(int('2br45qb', 35), 4294967296L)
    self.assertEqual(int('1z141z4', 36), 4294967296L)
    self.assertEqual(int('100000000000000000000000000000001', 2), 4294967297L)
    self.assertEqual(int('102002022201221111212', 3), 4294967297L)
    self.assertEqual(int('10000000000000001', 4), 4294967297L)
    self.assertEqual(int('32244002423142', 5), 4294967297L)
    self.assertEqual(int('1550104015505', 6), 4294967297L)
    self.assertEqual(int('211301422355', 7), 4294967297L)
    self.assertEqual(int('40000000001', 8), 4294967297L)
    self.assertEqual(int('12068657455', 9), 4294967297L)
    self.assertEqual(int('4294967297', 10), 4294967297L)
    self.assertEqual(int('1904440555', 11), 4294967297L)
    self.assertEqual(int('9ba461595', 12), 4294967297L)
    self.assertEqual(int('535a7988a', 13), 4294967297L)
    self.assertEqual(int('2ca5b7465', 14), 4294967297L)
    self.assertEqual(int('1a20dcd82', 15), 4294967297L)
    self.assertEqual(int('100000001', 16), 4294967297L)
    self.assertEqual(int('a7ffda92', 17), 4294967297L)
    self.assertEqual(int('704he7g5', 18), 4294967297L)
    self.assertEqual(int('4f5aff67', 19), 4294967297L)
    self.assertEqual(int('3723ai4h', 20), 4294967297L)
    self.assertEqual(int('281d55i5', 21), 4294967297L)
    self.assertEqual(int('1fj8b185', 22), 4294967297L)
    self.assertEqual(int('1606k7id', 23), 4294967297L)
    self.assertEqual(int('mb994ah', 24), 4294967297L)
    self.assertEqual(int('hek2mgm', 25), 4294967297L)
    self.assertEqual(int('dnchbnn', 26), 4294967297L)
    self.assertEqual(int('b28jpdn', 27), 4294967297L)
    self.assertEqual(int('8pfgih5', 28), 4294967297L)
    self.assertEqual(int('76beigh', 29), 4294967297L)
    self.assertEqual(int('5qmcpqh', 30), 4294967297L)
    self.assertEqual(int('4q0jto5', 31), 4294967297L)
    self.assertEqual(int('4000001', 32), 4294967297L)
    self.assertEqual(int('3aokq95', 33), 4294967297L)
    self.assertEqual(int('2qhxjlj', 34), 4294967297L)
    self.assertEqual(int('2br45qc', 35), 4294967297L)
    self.assertEqual(int('1z141z5', 36), 4294967297L)
