def default(self, arg):
    try:
        token = arg.strip()
        if (not token):
            return False
        comment = [token.startswith(x) for x in self.comment]
        if reduce((lambda x, y: (x or y)), comment):
            return False
        if (token[0] == '\\'):
            token = token[1:]
        if (len(token) >= len(self.delimiter)):
            if (token[((-1) * len(self.delimiter)):] == self.delimiter):
                self.sqlbuffer.append(token[:((-1) * len(self.delimiter))])
                if self.sqlbuffer:
                    q = ' '.join(self.sqlbuffer)
                    print q
                    self.db.isql(q, **self.kw)
                    self.sqlbuffer = []
                    if self.db.updatecount:
                        print 
                        if (self.db.updatecount == 1):
                            print '1 row affected'
                        else:
                            print ('%d rows affected' % self.db.updatecount)
                        print 
                    return False
        if token:
            self.sqlbuffer.append(token)
    except:
        self.sqlbuffer = []
        print 
        print sys.exc_info()[1]
        print 
    return False
