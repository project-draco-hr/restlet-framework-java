{
  Representation result=null;
  ConverterService cs=getConverterService();
  Class<?>[] parameterTypes=annotationInfo.getJavaInputTypes();
  List<Object> parameters=null;
  Object resultObject=null;
  try {
    if (parameterTypes.length > 0) {
      parameters=new ArrayList<Object>();
      for (      Class<?> parameterType : parameterTypes) {
        if (getRequestEntity() != null) {
          try {
            parameters.add(cs.toObject(getRequestEntity(),parameterType,this));
          }
 catch (          IOException e) {
            e.printStackTrace();
            parameters.add(null);
          }
        }
 else {
          parameters.add(null);
        }
      }
      resultObject=annotationInfo.getJavaMethod().invoke(this,parameters.toArray());
    }
 else {
      resultObject=annotationInfo.getJavaMethod().invoke(this);
    }
  }
 catch (  IllegalArgumentException e) {
    throw new ResourceException(e);
  }
catch (  IllegalAccessException e) {
    throw new ResourceException(e);
  }
catch (  InvocationTargetException e) {
    if (e.getTargetException() instanceof ResourceException) {
      throw (ResourceException)e.getTargetException();
    }
 else {
      throw new ResourceException(e.getTargetException());
    }
  }
  if (resultObject != null) {
    result=cs.toRepresentation(resultObject);
  }
  return result;
}
