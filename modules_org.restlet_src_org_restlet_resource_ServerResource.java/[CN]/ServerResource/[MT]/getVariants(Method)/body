{
  List<Variant> result=this.variants;
  if (result == null) {
    result=new ArrayList<Variant>();
    if (isAnnotated() && hasAnnotations()) {
      List<Variant> annoVariants=null;
      method=(Method.HEAD.equals(method)) ? Method.GET : method;
      for (      MethodAnnotationInfo annotationInfo : getAnnotations()) {
        try {
          if (annotationInfo.isCompatible(method,getQuery(),getRequestEntity(),getMetadataService(),getConverterService())) {
            annoVariants=annotationInfo.getResponseVariants(getMetadataService(),getConverterService());
            if (annoVariants != null) {
              float score=0.5f;
              if ((getRequest().getEntity() != null) && getRequest().getEntity().isAvailable()) {
                MediaType emt=getRequest().getEntity().getMediaType();
                List<MediaType> amts=getMetadataService().getAllMediaTypes(annotationInfo.getInput());
                if (amts != null) {
                  for (                  MediaType amt : amts) {
                    if (amt.equals(emt)) {
                      score=1.0f;
                    }
 else                     if (amt.includes(emt)) {
                      score=Math.max(0.8f,score);
                    }
 else                     if (amt.isCompatible(emt)) {
                      score=Math.max(0.6f,score);
                    }
                  }
                }
              }
              for (              Variant v : annoVariants) {
                VariantInfo vi=new VariantInfo(v,annotationInfo);
                vi.setInputScore(score);
                result.add(vi);
              }
            }
          }
        }
 catch (        IOException e) {
          getLogger().log(Level.FINE,"Unable to get variants from annotation",e);
        }
      }
    }
    this.variants=result;
  }
  return result;
}
