{
  Representation result=null;
  Representation selectedRepresentation=null;
  final List<Variant> variants=getVariants();
  if ((variants == null) || (variants.isEmpty())) {
    setStatus(Status.CLIENT_ERROR_NOT_FOUND);
    getLogger().warning("A resource should normally have at least one variant added by calling getVariants().add() in the constructor. Check your resource \"" + getRequest().getResourceRef() + "\".");
  }
 else   if (isNegotiateContent()) {
    final Variant preferredVariant=getPreferredVariant();
    if (preferredVariant == null) {
      setStatus(Status.CLIENT_ERROR_NOT_ACCEPTABLE);
      final ReferenceList refs=new ReferenceList(variants.size());
      for (      final Variant variant : variants) {
        if (variant.getIdentifier() != null) {
          refs.add(variant.getIdentifier());
        }
      }
      result=refs.getTextRepresentation();
    }
 else {
      getDimensions().clear();
      getDimensions().add(Dimension.CHARACTER_SET);
      getDimensions().add(Dimension.ENCODING);
      getDimensions().add(Dimension.LANGUAGE);
      getDimensions().add(Dimension.MEDIA_TYPE);
      negotiate(method,preferredVariant);
    }
    selectedRepresentation=result;
  }
 else {
    if (variants.size() == 1) {
      negotiate(method,variants.get(0));
      selectedRepresentation=result;
    }
 else {
      final ReferenceList variantRefs=new ReferenceList();
      for (      final Variant variant : variants) {
        if (variant.getIdentifier() != null) {
          variantRefs.add(variant.getIdentifier());
        }
 else {
          getLogger().warning("A resource with multiple variants should provide an identifier for each variant when content negotiation is turned off");
        }
      }
      if (variantRefs.size() > 0) {
        setStatus(Status.REDIRECTION_MULTIPLE_CHOICES);
        result=variantRefs.getTextRepresentation();
      }
 else {
        setStatus(Status.CLIENT_ERROR_NOT_FOUND);
      }
    }
  }
  if (selectedRepresentation == null) {
    if ((getStatus() == null) || (getStatus().isSuccess() && !Status.SUCCESS_NO_CONTENT.equals(getStatus()))) {
      setStatus(Status.CLIENT_ERROR_NOT_FOUND);
    }
 else {
    }
  }
 else {
    if (getRequest().getConditions().hasSome()) {
      final Status status=getRequest().getConditions().getStatus(getRequest().getMethod(),selectedRepresentation);
      if (status != null) {
        setStatus(status);
        result=null;
      }
    }
  }
  return result;
}
