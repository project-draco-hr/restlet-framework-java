{
  Representation result=null;
  ConverterService cs=getConverterService();
  Object resultObject=null;
  try {
    if ((annotationInfo.getJavaParameterTypes() != null) && (annotationInfo.getJavaParameterTypes().length > 0)) {
      List<Object> parameters=new ArrayList<Object>();
      Object parameter=null;
      for (      Class<?> param : annotationInfo.getJavaParameterTypes()) {
        if (Variant.class.equals(param)) {
          parameters.add(variant);
        }
 else {
          if (getRequestEntity().isAvailable()) {
            try {
              parameter=cs.toObject(getRequestEntity(),param,this);
            }
 catch (            IOException e) {
              parameter=null;
            }
            if (parameter == null) {
              throw new ResourceException(Status.CLIENT_ERROR_UNSUPPORTED_MEDIA_TYPE);
            }
          }
 else {
            parameter=null;
          }
          parameters.add(parameter);
        }
      }
      resultObject=annotationInfo.getJavaMethod().invoke(this,parameters.toArray());
    }
 else {
      resultObject=annotationInfo.getJavaMethod().invoke(this);
    }
    if (resultObject != null) {
      if (resultObject instanceof Representation) {
        result=(Representation)resultObject;
        if (variant.getCharacterSet() != null) {
          result.setCharacterSet(variant.getCharacterSet());
        }
 else         if (variant.getMediaType() != null) {
          result.setMediaType(variant.getMediaType());
        }
 else         if ((variant.getLanguages() != null) && !variant.getLanguages().isEmpty()) {
          result.setLanguages(variant.getLanguages());
        }
 else         if ((variant.getEncodings() != null) && !variant.getEncodings().isEmpty()) {
          result.setEncodings(variant.getEncodings());
        }
      }
 else {
        result=cs.toRepresentation(resultObject,variant,this);
      }
    }
  }
 catch (  IllegalArgumentException e) {
    throw new ResourceException(e);
  }
catch (  IllegalAccessException e) {
    throw new ResourceException(e);
  }
catch (  InvocationTargetException e) {
    if (e.getTargetException() instanceof ResourceException) {
      throw (ResourceException)e.getTargetException();
    }
 else {
      throw new ResourceException(e.getTargetException());
    }
  }
  return result;
}
