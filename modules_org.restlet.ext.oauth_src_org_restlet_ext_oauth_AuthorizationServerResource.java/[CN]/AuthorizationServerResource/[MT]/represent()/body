{
  final Form params=getQuery();
  final Client client;
  final String redirectURI;
  try {
    client=getClient(params);
    redirectURI=getRedirectURI(params,client);
  }
 catch (  OAuthException ex) {
    return getErrorPage(HttpOAuthHelper.getErrorPageTemplate(getContext()),ex);
  }
catch (  Exception ex) {
    OAuthException oex=new OAuthException(OAuthError.server_error,ex.getMessage(),null);
    return getErrorPage(HttpOAuthHelper.getErrorPageTemplate(getContext()),oex);
  }
  final AuthSession session;
  try {
    ResponseType responseType=getResponseType(params);
    session=getAuthSession(client,responseType,redirectURI);
    String[] scope=getScope(params);
    session.setRequestedScope(scope);
  }
 catch (  OAuthException ex) {
    ungetAuthSession();
    throw ex;
  }
  if (session.getScopeOwner() == null) {
    Reference ref=new Reference("." + HttpOAuthHelper.getLoginPage(getContext()));
    ref.addQueryParameter("continue",getRequest().getOriginalRef().toString(true,false));
    redirectTemporary(ref.toString());
    return new EmptyRepresentation();
  }
  return doPostAuthorization(session);
}
