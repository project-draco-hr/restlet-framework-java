def test(method, input, output, *args):
    if verbose:
        print ('%s.%s%s =? %s... ' % (repr(input), method, args, repr(output))),
    try:
        f = getattr(input, method)
        value = apply(f, args)
    except:
        value = sys.exc_type
        exc = sys.exc_info()[:2]
    else:
        exc = None
    if ((value == output) and (type(value) is type(output))):
        if (value is input):


            class usub(unicode):

                def __repr__(self):
                    return ('usub(%r)' % unicode.__repr__(self))
            input = usub(input)
            try:
                f = getattr(input, method)
                value = apply(f, args)
            except:
                value = sys.exc_type
                exc = sys.exc_info()[:2]
            if (value is input):
                if verbose:
                    print 'no'
                print '*', f, `input`, `output`, `value`
                return
    if ((value != output) or (type(value) is not type(output))):
        if verbose:
            print 'no'
        print '*', f, `input`, `output`, `value`
        if exc:
            print ('  value == %s: %s' % exc)
    elif verbose:
        print 'yes'
