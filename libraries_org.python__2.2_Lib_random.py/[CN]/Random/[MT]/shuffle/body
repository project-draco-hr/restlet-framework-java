def shuffle(self, x, random=None, int=int):
    'x, random=random.random -> shuffle list x in place; return None.\n\n        Optional arg random is a 0-argument function returning a random\n        float in [0.0, 1.0); by default, the standard random.random.\n\n        Note that for even rather small len(x), the total number of\n        permutations of x is larger than the period of most random number\n        generators; this implies that "most" permutations of a long\n        sequence can never be generated.\n        '
    if (random is None):
        random = self.random
    for i in xrange((len(x) - 1), 0, (-1)):
        j = int((random() * (i + 1)))
        (x[i], x[j]) = (x[j], x[i])
