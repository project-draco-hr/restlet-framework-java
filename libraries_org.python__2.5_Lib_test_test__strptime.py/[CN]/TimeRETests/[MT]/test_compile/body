def test_compile(self):
    found = self.time_re.compile('%A').match(self.locale_time.f_weekday[6])
    self.failUnless((found and (found.group('A') == self.locale_time.f_weekday[6])), "re object for '%A' failed")
    compiled = self.time_re.compile('%a %b')
    found = compiled.match(('%s %s' % (self.locale_time.a_weekday[4], self.locale_time.a_month[4])))
    self.failUnless(found, ("Match failed with '%s' regex and '%s' string" % (compiled.pattern, ('%s %s' % (self.locale_time.a_weekday[4], self.locale_time.a_month[4])))))
    self.failUnless(((found.group('a') == self.locale_time.a_weekday[4]) and (found.group('b') == self.locale_time.a_month[4])), ("re object couldn't find the abbreviated weekday month in '%s' using '%s'; group 'a' = '%s', group 'b' = %s'" % (found.string, found.re.pattern, found.group('a'), found.group('b'))))
    for directive in ('a', 'A', 'b', 'B', 'c', 'd', 'H', 'I', 'j', 'm', 'M', 'p', 'S', 'U', 'w', 'W', 'x', 'X', 'y', 'Y', 'Z', '%'):
        compiled = self.time_re.compile(('%' + directive))
        found = compiled.match(time.strftime(('%' + directive)))
        self.failUnless(found, ("Matching failed on '%s' using '%s' regex" % (time.strftime(('%' + directive)), compiled.pattern)))
