def safe_substitute(self, *args, **kws):
    if (len(args) > 1):
        raise TypeError('Too many positional arguments')
    if (not args):
        mapping = kws
    elif kws:
        mapping = _multimap(kws, args[0])
    else:
        mapping = args[0]

    def convert(mo):
        named = mo.group('named')
        if (named is not None):
            try:
                return ('%s' % (mapping[named],))
            except KeyError:
                return (self.delimiter + named)
        braced = mo.group('braced')
        if (braced is not None):
            try:
                return ('%s' % (mapping[braced],))
            except KeyError:
                return (((self.delimiter + '{') + braced) + '}')
        if (mo.group('escaped') is not None):
            return self.delimiter
        if (mo.group('invalid') is not None):
            return self.delimiter
        raise ValueError('Unrecognized named group in pattern', self.pattern)
    return self.pattern.sub(convert, self.template)
