{
  ChallengeResponse result=null;
  if (header != null) {
    int space=header.indexOf(' ');
    if (space != -1) {
      String scheme=header.substring(0,space);
      String credentials=header.substring(space + 1);
      result=new ChallengeResponse(new ChallengeScheme("HTTP_" + scheme,scheme),credentials);
      if (result.getScheme().equals(ChallengeScheme.HTTP_BASIC)) {
        try {
          byte[] credentialsEncoded=Base64.decode(result.getCredentials());
          if (credentialsEncoded == null) {
            logger.warning("Cannot decode credentials: " + result.getCredentials());
            return null;
          }
          credentials=new String(credentialsEncoded,"US-ASCII");
          int separator=credentials.indexOf(':');
          if (separator == -1) {
            logger.warning("Invalid credentials given by client with IP: " + ((request != null) ? request.getClientInfo().getAddress() : "?"));
          }
 else {
            result.setIdentifier(credentials.substring(0,separator));
            result.setSecret(credentials.substring(separator + 1));
            if (logger != null) {
              logger.info("Basic HTTP authentication succeeded: identifier=" + result.getIdentifier() + ".");
            }
          }
        }
 catch (        UnsupportedEncodingException e) {
          logger.log(Level.WARNING,"Unsupported encoding error",e);
        }
      }
 else {
        logger.log(Level.FINE,"Authentication impossible: scheme not supported: " + result.getScheme().getName() + ". Please override the Guard.authenticate method.");
      }
    }
  }
  return result;
}
