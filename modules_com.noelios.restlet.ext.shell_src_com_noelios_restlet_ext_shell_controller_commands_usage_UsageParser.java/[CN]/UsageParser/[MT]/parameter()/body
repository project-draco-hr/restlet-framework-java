{
  parameter_return retval=new parameter_return();
  retval.start=input.LT(1);
  Object root_0=null;
  simpleParameter_return simpleParameter14=null;
  multiParameter_return multiParameter15=null;
  try {
    int alt6=2;
    int LA6_0=input.LA(1);
    if ((LA6_0 == ID)) {
      int LA6_1=input.LA(2);
      if ((LA6_1 == EOF || LA6_1 == ID || (LA6_1 >= 10 && LA6_1 <= 11))) {
        alt6=1;
      }
 else       if ((LA6_1 == 12)) {
        alt6=2;
      }
 else {
        NoViableAltException nvae=new NoViableAltException("42:1: parameter : ( simpleParameter | multiParameter );",6,1,input);
        throw nvae;
      }
    }
 else {
      NoViableAltException nvae=new NoViableAltException("42:1: parameter : ( simpleParameter | multiParameter );",6,0,input);
      throw nvae;
    }
switch (alt6) {
case 1:
{
        root_0=(Object)adaptor.nil();
        pushFollow(FOLLOW_simpleParameter_in_parameter205);
        simpleParameter14=simpleParameter();
        _fsp--;
        adaptor.addChild(root_0,simpleParameter14.getTree());
      }
    break;
case 2:
{
    root_0=(Object)adaptor.nil();
    pushFollow(FOLLOW_multiParameter_in_parameter214);
    multiParameter15=multiParameter();
    _fsp--;
    adaptor.addChild(root_0,multiParameter15.getTree());
  }
break;
}
retval.stop=input.LT(-1);
retval.tree=(Object)adaptor.rulePostProcessing(root_0);
adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
}
 catch (RecognitionException re) {
reportError(re);
recover(input,re);
}
 finally {
}
return retval;
}
