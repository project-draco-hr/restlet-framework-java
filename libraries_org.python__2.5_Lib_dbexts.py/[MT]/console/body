def console(rows, headers=()):
    'Format the results into a list       of strings (one for each row):\n\n    <header>\n    <headersep>\n    <row1>\n    <row2>\n    ...\n\n    headers may be given as list of strings.\n\n    Columns are separated by colsep; the header is separated from\n    the result set by a line of headersep characters.\n\n    The function calls stringify to format the value data into a string.\n    It defaults to calling str() and striping leading and trailing whitespace.\n\n    - copied and modified from mxODBC\n    '
    output = []
    headers = map((lambda header: header.upper()), list(map((lambda x: (x or '')), headers)))
    collen = map(len, headers)
    output.append(headers)
    if (rows and (len(rows) > 0)):
        for row in rows:
            row = map((lambda x: str(x)), row)
            for i in range(len(row)):
                entry = row[i]
                if (collen[i] < len(entry)):
                    collen[i] = len(entry)
            output.append(row)
    if (len(output) == 1):
        affected = '0 rows affected'
    elif (len(output) == 2):
        affected = '1 row affected'
    else:
        affected = ('%d rows affected' % (len(output) - 1))
    for i in range(len(output)):
        row = output[i]
        l = []
        for j in range(len(row)):
            l.append(('%-*s' % (collen[j], row[j])))
        output[i] = ' | '.join(l)
    totallen = len(output[0])
    output[1:1] = [('-' * (totallen / len('-')))]
    output.append(('\n' + affected))
    return output
