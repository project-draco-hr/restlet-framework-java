{
  MediaType mt1=MediaType.APPLICATION_ALL;
  MediaType mt2=MediaType.APPLICATION_XML;
  assertTrue(mt1.includes(mt1));
  assertTrue(mt2.includes(mt2));
  assertTrue(mt1.includes(mt2));
  assertFalse(mt2.includes(mt1));
  mt1=MediaType.APPLICATION_ALL_XML;
  mt2=MediaType.APPLICATION_XML;
  assertTrue(mt1.includes(mt1));
  assertTrue(mt2.includes(mt2));
  assertTrue(mt1.includes(mt2));
  assertFalse(mt2.includes(mt1));
  mt1=MediaType.APPLICATION_ALL_XML;
  mt2=MediaType.APPLICATION_ATOMPUB_SERVICE;
  assertTrue(mt1.includes(mt1));
  assertTrue(mt2.includes(mt2));
  assertTrue(mt1.includes(mt2));
  assertFalse(mt2.includes(mt1));
  mt1=MediaType.IMAGE_ALL;
  mt2=MediaType.APPLICATION_OCTET_STREAM;
  assertFalse(mt1.includes(mt2));
  assertFalse(mt2.includes(mt1));
  assertFalse(mt1.includes(null));
  MediaType typeWithNoParams=new MediaType("application/sometype");
  Series<Parameter> singleParam=new Series<Parameter>(Parameter.class);
  singleParam.add(new Parameter("name1","value1"));
  MediaType typeWithSingleParam=new MediaType("application/sometype",singleParam);
  Series<Parameter> singleMatchingParam=new Series<Parameter>(Parameter.class);
  singleMatchingParam.add(new Parameter("name1","value1"));
  MediaType typeWithSingleMatchingParam=new MediaType("application/sometype",singleMatchingParam);
  Series<Parameter> singleNonMatchingParamValue=new Series<Parameter>(Parameter.class);
  singleNonMatchingParamValue.add(new Parameter("name1","value2"));
  MediaType typeWithSingleNonMatchingParamValue=new MediaType("application/sometype",singleNonMatchingParamValue);
  Series<Parameter> singleNonMatchingParamName=new Series<Parameter>(Parameter.class);
  singleNonMatchingParamName.add(new Parameter("name2","value2"));
  MediaType typeWithSingleNonMatchingParamName=new MediaType("application/sometype",singleNonMatchingParamName);
  Series<Parameter> twoParamsOneMatches=new Series<Parameter>(Parameter.class);
  twoParamsOneMatches.add(new Parameter("name1","value1"));
  twoParamsOneMatches.add(new Parameter("name2","value2"));
  MediaType typeWithTwoParamsOneMatches=new MediaType("application/sometype",twoParamsOneMatches);
  assertTrue(typeWithNoParams.includes(typeWithSingleParam,true));
  assertTrue(typeWithNoParams.includes(typeWithSingleParam,false));
  assertTrue(typeWithSingleParam.includes(typeWithNoParams,true));
  assertFalse(typeWithSingleParam.includes(typeWithNoParams,false));
  assertTrue(typeWithSingleParam.includes(typeWithSingleMatchingParam,true));
  assertTrue(typeWithSingleParam.includes(typeWithSingleMatchingParam,false));
  assertTrue(typeWithSingleParam.includes(typeWithSingleNonMatchingParamName,true));
  assertFalse(typeWithSingleParam.includes(typeWithSingleNonMatchingParamName,false));
  assertTrue(typeWithSingleParam.includes(typeWithSingleNonMatchingParamValue,true));
  assertFalse(typeWithSingleParam.includes(typeWithSingleNonMatchingParamValue,false));
  assertTrue(typeWithSingleParam.includes(typeWithTwoParamsOneMatches,true));
  assertTrue(typeWithSingleParam.includes(typeWithTwoParamsOneMatches,false));
  assertTrue(typeWithTwoParamsOneMatches.includes(typeWithSingleParam,true));
  assertFalse(typeWithTwoParamsOneMatches.includes(typeWithSingleParam,false));
}
