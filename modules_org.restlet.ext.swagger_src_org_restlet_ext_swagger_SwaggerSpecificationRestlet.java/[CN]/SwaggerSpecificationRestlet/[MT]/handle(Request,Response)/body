{
  super.handle(request,response);
  Series<Header> headers=new Series<Header>(Header.class);
  headers.set("Access-Control-Expose-Headers","Authorization, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-OAuth-Scopes, X-Accepted-OAuth-Scopes");
  headers.set("Access-Control-Allow-Headers","Authorization,");
  headers.set("Access-Control-Allow-Credentials","true");
  headers.set("Access-Control-Allow-Methods","GET");
  Series<Header> reqHeaders=(Series<Header>)request.getAttributes().get(HeaderConstants.ATTRIBUTE_HEADERS);
  String requestOrigin=reqHeaders.getFirstValue("Origin","*");
  headers.set("Access-Control-Allow-Origin",requestOrigin);
  response.getAttributes().put(HeaderConstants.ATTRIBUTE_HEADERS,headers);
  if (!Method.GET.equals(request.getMethod())) {
    response.setStatus(Status.CLIENT_ERROR_METHOD_NOT_ALLOWED);
  }
  Object resource=request.getAttributes().get("resource");
  if (resource instanceof String) {
    response.setEntity(getApiDeclaration((String)resource));
  }
 else {
    response.setEntity(getResourceListing());
  }
}
