{
  Object convertWithConverterUtils=convertWithConverterUtils(paramValue);
  if (convertWithConverterUtils != null) {
    return convertWithConverterUtils;
  }
  String value=paramValue;
  if (StringUtils.isEmpty(paramValue)) {
    if (defaultValue == null || defaultValue.value() == null) {
      return null;
    }
    value=defaultValue.value();
  }
  try {
    return ConstructorUtils.invokeConstructor(convertTo,value);
  }
 catch (  Exception e) {
    handleExceptionOnInvocation(value,e);
  }
  try {
    return MethodUtils.invokeStaticMethod(convertTo,convertTo.isEnum() ? "fromString" : "valueOf",value);
  }
 catch (  Exception e) {
    handleExceptionOnInvocation(value,e);
  }
  try {
    return MethodUtils.invokeStaticMethod(convertTo,convertTo.isEnum() ? "valueOf" : "fromString",value);
  }
 catch (  Exception e) {
    handleExceptionOnInvocation(value,e);
  }
  throw ConvertParameterException.object(this.convertTo,value,new Exception("Target object has no String constructor, valueOf or fromString method."));
}
