def fixupOrderForward(self, blocks, default_next):
    'Make sure all JUMP_FORWARDs jump forward'
    index = {}
    chains = []
    cur = []
    for b in blocks:
        index[b] = len(chains)
        cur.append(b)
        if (b.next and (b.next[0] == default_next)):
            chains.append(cur)
            cur = []
    chains.append(cur)
    while 1:
        constraints = []
        for i in range(len(chains)):
            l = chains[i]
            for b in l:
                for c in b.get_children():
                    if (index[c] < i):
                        forward_p = 0
                        for inst in b.insts:
                            if (inst[0] == 'JUMP_FORWARD'):
                                if (inst[1] == c):
                                    forward_p = 1
                        if (not forward_p):
                            continue
                        constraints.append((index[c], i))
        if (not constraints):
            break
        (goes_before, a_chain) = constraints[0]
        assert (a_chain > goes_before)
        c = chains[a_chain]
        chains.remove(c)
        chains.insert(goes_before, c)
    del blocks[:]
    for c in chains:
        for b in c:
            blocks.append(b)
