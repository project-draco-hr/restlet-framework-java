{
  while (!java.lang.reflect.Modifier.isPublic(method.getDeclaringClass().getModifiers())) {
    try {
      method=method.getDeclaringClass().getSuperclass().getMethod(method.getName(),method.getParameterTypes());
    }
 catch (    NoSuchMethodException e) {
      throw new IllegalStateException(e);
    }
  }
  return method;
}
