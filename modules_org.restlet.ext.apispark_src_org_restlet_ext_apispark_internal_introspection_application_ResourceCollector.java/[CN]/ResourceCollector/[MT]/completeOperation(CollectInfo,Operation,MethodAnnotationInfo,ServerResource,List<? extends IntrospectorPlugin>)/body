{
  MetadataService metadataService=sr.getMetadataService();
  Class<?>[] thrownClasses=mai.getJavaMethod().getExceptionTypes();
  if (thrownClasses != null) {
    for (    Class<?> thrownClass : thrownClasses) {
      StatusAnnotationInfo statusAnnotation=AnnotationUtils.getInstance().getStatusAnnotationInfo(thrownClass);
      if (statusAnnotation != null) {
        int statusCode=statusAnnotation.getStatus().getCode();
        Response response=new Response();
        response.setCode(statusCode);
        response.setMessage("Status " + statusCode);
        Class<?> outputPayloadType=statusAnnotation.isSerializable() ? thrownClass : StatusInfo.class;
        RepresentationCollector.addRepresentation(collectInfo,outputPayloadType,null,introspectorPlugins);
        PayLoad outputPayLoad=new PayLoad();
        outputPayLoad.setType(outputPayloadType.getName());
        response.setOutputPayLoad(outputPayLoad);
        operation.getResponses().add(response);
      }
    }
  }
  Class<?>[] inputClasses=mai.getJavaMethod().getParameterTypes();
  if (inputClasses != null && inputClasses.length > 0) {
    Class<?> inputClass=inputClasses[0];
    Type inputType=mai.getJavaMethod().getGenericParameterTypes()[0];
    RepresentationCollector.addRepresentation(collectInfo,inputClass,inputType,introspectorPlugins);
    PayLoad inputEntity=new PayLoad();
    inputEntity.setType(Types.convertPrimitiveType(ReflectUtils.getSimpleClass(inputType)));
    inputEntity.setArray(ReflectUtils.isListType(inputClass));
    operation.setInputPayLoad(inputEntity);
    if (metadataService != null) {
      try {
        List<Variant> requestVariants=mai.getRequestVariants(metadataService,sr.getConverterService());
        if (requestVariants == null || requestVariants.isEmpty()) {
          LOGGER.warning("Method has no requested variant: " + mai);
          return;
        }
        for (        Variant variant : requestVariants) {
          if (variant.getMediaType() == null) {
            LOGGER.warning("Variant has no media type: " + variant);
            continue;
          }
          operation.getConsumes().add(variant.getMediaType().getName());
        }
      }
 catch (      IOException e) {
        throw new ResourceException(e);
      }
    }
  }
  if (mai.getQuery() != null) {
    Form form=new Form(mai.getQuery());
    for (    org.restlet.data.Parameter parameter : form) {
      QueryParameter queryParameter=new QueryParameter();
      queryParameter.setName(parameter.getName());
      queryParameter.setRequired(true);
      queryParameter.setDescription(StringUtils.isNullOrEmpty(parameter.getValue()) ? "" : "Value: " + parameter.getValue());
      queryParameter.setDefaultValue(parameter.getValue());
      queryParameter.setAllowMultiple(false);
      operation.getQueryParameters().add(queryParameter);
    }
  }
  Response response=new Response();
  Class<?> outputClass=mai.getJavaMethod().getReturnType();
  Type outputType=mai.getJavaMethod().getGenericReturnType();
  if (outputClass != Void.TYPE) {
    RepresentationCollector.addRepresentation(collectInfo,outputClass,outputType,introspectorPlugins);
    PayLoad outputEntity=new PayLoad();
    outputEntity.setType(Types.convertPrimitiveType(ReflectUtils.getSimpleClass(outputType)));
    outputEntity.setArray(ReflectUtils.isListType(outputClass));
    response.setOutputPayLoad(outputEntity);
  }
  response.setCode(Status.SUCCESS_OK.getCode());
  response.setName("Success");
  response.setDescription("");
  response.setMessage(Status.SUCCESS_OK.getDescription());
  operation.getResponses().add(response);
  if (metadataService != null) {
    try {
      List<Variant> responseVariants=mai.getResponseVariants(metadataService,sr.getConverterService());
      if (responseVariants == null || responseVariants.isEmpty()) {
        LOGGER.warning("Method has no response variant: " + mai);
        return;
      }
      for (      Variant variant : responseVariants) {
        if (variant.getMediaType() == null) {
          LOGGER.warning("Variant has no media type: " + variant);
          continue;
        }
        operation.getProduces().add(variant.getMediaType().getName());
      }
    }
 catch (    IOException e) {
      throw new ResourceException(e);
    }
  }
}
