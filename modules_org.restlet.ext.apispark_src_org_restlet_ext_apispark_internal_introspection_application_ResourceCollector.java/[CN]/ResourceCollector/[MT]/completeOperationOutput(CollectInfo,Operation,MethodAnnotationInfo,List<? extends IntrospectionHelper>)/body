{
  Response response=new Response();
  if (mai.getJavaMethod().getReturnType() != Void.TYPE) {
    TypeInfo outputTypeInfo;
    try {
      outputTypeInfo=Types.getTypeInfo(mai.getJavaMethod().getReturnType(),mai.getJavaMethod().getGenericReturnType());
    }
 catch (    UnsupportedTypeException e) {
      LOGGER.warning("Could not add output representation of method " + mai.getJavaMethod() + ". "+ e.getMessage());
      return;
    }
    RepresentationCollector.addRepresentation(collectInfo,outputTypeInfo,introspectionHelper);
    PayLoad outputEntity=new PayLoad();
    outputEntity.setType(outputTypeInfo.getRepresentationName());
    outputEntity.setArray(outputTypeInfo.isList());
    response.setOutputPayLoad(outputEntity);
    response.setCode(Status.SUCCESS_OK.getCode());
    response.setName(Status.SUCCESS_OK.getReasonPhrase());
    response.setDescription("");
    response.setMessage(Status.SUCCESS_OK.getDescription());
  }
 else {
    response.setCode(Status.SUCCESS_NO_CONTENT.getCode());
    response.setName(Status.SUCCESS_NO_CONTENT.getReasonPhrase());
    response.setDescription("");
    response.setMessage(Status.SUCCESS_NO_CONTENT.getDescription());
  }
  operation.getResponses().add(response);
}
