def connect(self, host='localhost', port=0):
    "Connect to a host on a given port.\n\n        If the hostname ends with a colon (`:') followed by a number, and\n        there is no port specified, that suffix will be stripped off and the\n        number interpreted as the port number to use.\n\n        Note: This method is automatically invoked by __init__, if a host is\n        specified during instantiation.\n\n        "
    if ((not port) and (host.find(':') == host.rfind(':'))):
        i = host.rfind(':')
        if (i >= 0):
            (host, port) = (host[:i], host[(i + 1):])
            try:
                port = int(port)
            except ValueError:
                raise socket.error, 'nonnumeric port'
    if (not port):
        port = SMTP_PORT
    if (self.debuglevel > 0):
        print  >> stderr, 'connect:', (host, port)
    msg = 'getaddrinfo returns an empty list'
    self.sock = None
    for res in socket.getaddrinfo(host, port, 0, socket.SOCK_STREAM):
        (af, socktype, proto, canonname, sa) = res
        try:
            self.sock = socket.socket(af, socktype, proto)
            if (self.debuglevel > 0):
                print  >> stderr, 'connect:', sa
            self.sock.connect(sa)
        except socket.error as msg:
            if (self.debuglevel > 0):
                print  >> stderr, 'connect fail:', msg
            if self.sock:
                self.sock.close()
            self.sock = None
            continue
        break
    if (not self.sock):
        raise socket.error, msg
    (code, msg) = self.getreply()
    if (self.debuglevel > 0):
        print  >> stderr, 'connect:', msg
    return (code, msg)
