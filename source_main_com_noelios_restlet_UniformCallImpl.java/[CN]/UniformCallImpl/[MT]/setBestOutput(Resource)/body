{
  Parameter currentParam=null;
  boolean compatiblePref=false;
  boolean compatibleLanguage=false;
  RepresentationMetadata currentVariant=null;
  Language currentLanguage=null;
  MediaType currentMediaType=null;
  RepresentationMetadata bestVariant=null;
  float bestQuality=0;
  Preference currentPref=null;
  Preference bestLanguagePref=null;
  Preference bestMediaTypePref=null;
  float currentScore=0;
  float bestLanguageScore=0;
  float bestMediaTypeScore=0;
  List<RepresentationMetadata> variants=resource.getVariantsMetadata();
  if (variants == null) {
    logger.warning("No variant found for resource: " + getResourceRef().getIdentifier());
    setStatus(Statuses.CLIENT_ERROR_NOT_FOUND);
  }
 else {
    logger.info(Integer.toString(variants.size()) + " variants found for resource: " + getResourceRef().getIdentifier());
    for (Iterator iter1=variants.iterator(); iter1.hasNext(); ) {
      currentVariant=(RepresentationMetadata)iter1.next();
      if (getLanguagePrefs() != null) {
        for (Iterator iter2=getLanguagePrefs().iterator(); (currentVariant.getLanguage() != null) && iter2.hasNext(); ) {
          currentPref=(Preference)iter2.next();
          currentLanguage=(Language)currentPref.getMetadata();
          compatiblePref=true;
          currentScore=0;
          if (currentVariant.getLanguage().getMainTag().equals(currentLanguage.getMainTag())) {
            currentScore+=100;
          }
 else           if (!currentLanguage.getMainTag().equals("*")) {
            compatiblePref=false;
          }
 else           if (currentLanguage.getSubTag() != null) {
            compatiblePref=false;
          }
 else {
            currentScore++;
          }
          if (compatiblePref) {
            if ((currentLanguage.getSubTag() == null) || (currentVariant.getLanguage().getSubTag() == null)) {
              if (currentVariant.getLanguage().getSubTag() == currentLanguage.getSubTag()) {
                currentScore+=10;
              }
 else {
              }
            }
 else             if (currentLanguage.getSubTag().equals(currentVariant.getLanguage().getSubTag())) {
              currentScore+=10;
            }
 else {
              compatiblePref=false;
            }
            if (compatiblePref && ((bestLanguagePref == null) || (currentScore > bestLanguageScore))) {
              bestLanguagePref=currentPref;
              bestLanguageScore=currentScore;
            }
          }
        }
      }
      compatibleLanguage=(currentVariant.getLanguage() == null) || (bestLanguagePref != null);
      if (getMediaTypePrefs() != null) {
        for (Iterator iter2=getMediaTypePrefs().iterator(); compatibleLanguage && iter2.hasNext(); ) {
          currentPref=(Preference)iter2.next();
          currentMediaType=(MediaType)currentPref.getMetadata();
          compatiblePref=true;
          currentScore=0;
          if (currentMediaType.getMainType().equals(currentVariant.getMediaType().getMainType())) {
            currentScore+=1000;
          }
 else           if (!currentMediaType.getMainType().equals("*")) {
            compatiblePref=false;
          }
 else           if (!currentMediaType.getSubType().equals("*")) {
            compatiblePref=false;
          }
          if (compatiblePref) {
            if (currentVariant.getMediaType().getSubType().equals(currentMediaType.getSubType())) {
              currentScore+=100;
            }
 else             if (!currentMediaType.getSubType().equals("*")) {
              compatiblePref=false;
            }
            if (compatiblePref && (currentVariant.getMediaType().getParameters() != null)) {
              for (Iterator iter3=currentVariant.getMediaType().getParameters().iterator(); iter3.hasNext(); ) {
                currentParam=(Parameter)iter3.next();
                if (isParameterFound(currentParam,currentMediaType)) {
                  currentScore++;
                }
              }
            }
            if (compatiblePref && ((bestMediaTypePref == null) || (currentScore > bestMediaTypeScore))) {
              bestMediaTypePref=currentPref;
              bestMediaTypeScore=currentScore;
            }
          }
        }
      }
      if (bestMediaTypePref != null) {
        float currentQuality=bestMediaTypePref.getQuality();
        if (bestLanguagePref != null) {
          currentQuality+=(bestLanguagePref.getQuality() * 10F);
        }
        if (bestVariant == null) {
          bestVariant=currentVariant;
          bestQuality=currentQuality;
        }
 else         if (currentQuality > bestQuality) {
          bestVariant=currentVariant;
          bestQuality=currentQuality;
        }
        bestLanguagePref=null;
        bestLanguageScore=0;
        bestMediaTypePref=null;
        bestMediaTypeScore=0;
      }
    }
    if (bestVariant == null) {
      setStatus(Statuses.CLIENT_ERROR_NOT_ACCEPTABLE);
    }
 else {
      setOutput(resource.getRepresentation(bestVariant));
      setStatus(Statuses.SUCCESS_OK);
    }
  }
}
