{
  try {
    Component component=new Component();
    component.getServers().add(Protocol.HTTP,8182);
    component.getDefaultHost().attach(new TestRangeApplication());
    component.start();
    Client client=new Client(Protocol.HTTP);
    Request request=new Request(Method.GET,"http://localhost:8182/testGet");
    Response response=client.handle(request);
    assertEquals(Status.SUCCESS_OK,response.getStatus());
    assertEquals("1234567890",response.getEntity().getText());
    request=new Request(Method.GET,"http://localhost:8182/testGet");
    request.setRanges(Arrays.asList(new Range(0,10)));
    response=client.handle(request);
    assertEquals(Status.SUCCESS_OK,response.getStatus());
    assertEquals("1234567890",response.getEntity().getText());
    request.setRanges(Arrays.asList(new Range(Range.INDEX_FIRST,2)));
    response=client.handle(request);
    assertEquals(Status.SUCCESS_OK,response.getStatus());
    assertEquals("12",response.getEntity().getText());
    request.setRanges(Arrays.asList(new Range(2,2)));
    response=client.handle(request);
    assertEquals(Status.SUCCESS_OK,response.getStatus());
    assertEquals("34",response.getEntity().getText());
    request.setRanges(Arrays.asList(new Range(2,7)));
    response=client.handle(request);
    assertEquals(Status.SUCCESS_OK,response.getStatus());
    assertEquals("3456789",response.getEntity().getText());
    request.setRanges(Arrays.asList(new Range(Range.INDEX_LAST,7)));
    response=client.handle(request);
    assertEquals(Status.SUCCESS_OK,response.getStatus());
    assertEquals("4567890",response.getEntity().getText());
    component.stop();
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}
