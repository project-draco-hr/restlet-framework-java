def read(self, name):
    'Return file bytes (as a string) for name.'
    if (self.mode not in ('r', 'a')):
        raise RuntimeError, 'read() requires mode "r" or "a"'
    if (not self.fp):
        raise RuntimeError, 'Attempt to read ZIP archive that was already closed'
    zinfo = self.getinfo(name)
    filepos = self.fp.tell()
    self.fp.seek(zinfo.file_offset, 0)
    bytes = self.fp.read(zinfo.compress_size)
    self.fp.seek(filepos, 0)
    if (zinfo.compress_type == ZIP_STORED):
        pass
    elif (zinfo.compress_type == ZIP_DEFLATED):
        if (not zlib):
            raise RuntimeError, 'De-compression requires the (missing) zlib module'
        dc = zlib.decompressobj((-15))
        bytes = dc.decompress(bytes)
        ex = (dc.decompress('Z') + dc.flush())
        if ex:
            bytes = (bytes + ex)
    else:
        raise BadZipfile, ('Unsupported compression method %d for file %s' % (zinfo.compress_type, name))
    crc = binascii.crc32(bytes)
    if (crc != zinfo.CRC):
        raise BadZipfile, ('Bad CRC-32 for file %s' % name)
    return bytes
