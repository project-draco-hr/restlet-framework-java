def run(self):
    from distutils.ccompiler import new_compiler
    if (not self.extensions):
        return
    if self.distribution.has_c_libraries():
        build_clib = self.get_finalized_command('build_clib')
        self.libraries.extend((build_clib.get_library_names() or []))
        self.library_dirs.append(build_clib.build_clib)
    self.compiler = new_compiler(compiler=self.compiler, verbose=self.verbose, dry_run=self.dry_run, force=self.force)
    customize_compiler(self.compiler)
    if (self.include_dirs is not None):
        self.compiler.set_include_dirs(self.include_dirs)
    if (self.define is not None):
        for (name, value) in self.define:
            self.compiler.define_macro(name, value)
    if (self.undef is not None):
        for macro in self.undef:
            self.compiler.undefine_macro(macro)
    if (self.libraries is not None):
        self.compiler.set_libraries(self.libraries)
    if (self.library_dirs is not None):
        self.compiler.set_library_dirs(self.library_dirs)
    if (self.rpath is not None):
        self.compiler.set_runtime_library_dirs(self.rpath)
    if (self.link_objects is not None):
        self.compiler.set_link_objects(self.link_objects)
    self.build_extensions()
