{
  Parameter result=null;
  if (this.cachedPair != null) {
    result=this.cachedPair;
    this.cachedPair=null;
  }
 else {
    try {
      boolean readingName=true;
      boolean readingValue=false;
      final StringBuilder nameBuffer=new StringBuilder();
      final StringBuilder valueBuffer=new StringBuilder();
      int nextChar=0;
      while ((result == null) && (nextChar != -1)) {
        nextChar=read();
        if (readingName) {
          if ((HttpUtils.isSpace(nextChar)) && (nameBuffer.length() == 0)) {
          }
 else           if ((nextChar == -1) || (nextChar == ';') || (nextChar == ',')) {
            if (nameBuffer.length() > 0) {
              result=HttpUtils.createParameter(nameBuffer,null);
            }
 else             if (nextChar == -1) {
            }
 else {
              throw new Exception("Empty cookie name detected. Please check your cookies");
            }
          }
 else           if (nextChar == '=') {
            readingName=false;
            readingValue=true;
          }
 else           if (HttpUtils.isTokenChar(nextChar) || (this.globalVersion < 1)) {
            nameBuffer.append((char)nextChar);
          }
 else {
            throw new Exception("Separator and control characters are not allowed within a token. Please check your cookie header");
          }
        }
 else         if (readingValue) {
          if ((HttpUtils.isSpace(nextChar)) && (valueBuffer.length() == 0)) {
          }
 else           if ((nextChar == -1) || (nextChar == ';')) {
            result=HttpUtils.createParameter(nameBuffer,valueBuffer);
          }
 else           if ((nextChar == '"') && (valueBuffer.length() == 0)) {
            valueBuffer.append(readQuotedString());
          }
 else           if (HttpUtils.isTokenChar(nextChar) || (this.globalVersion < 1)) {
            valueBuffer.append((char)nextChar);
          }
 else {
            throw new Exception("Separator and control characters are not allowed within a token. Please check your cookie header");
          }
        }
      }
    }
 catch (    final Exception uee) {
      throw new Exception("Unsupported encoding. Please contact the administrator");
    }
  }
  return result;
}
