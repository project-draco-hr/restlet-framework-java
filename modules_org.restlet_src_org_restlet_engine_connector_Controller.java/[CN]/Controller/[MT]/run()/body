{
  doInit();
  setRunning(true);
  long sleepTime=getHelper().getControllerSleepTimeMs();
  while (isRunning()) {
    try {
      if (getHelper().isWorkerThreads()) {
        if (isOverloaded() && !getHelper().isWorkerServiceOverloaded()) {
          setOverloaded(false);
          getHelper().getLogger().info("Connector overload ended. Accepting new work again");
          getHelper().traceWorkerService();
        }
 else         if (getHelper().isWorkerServiceOverloaded()) {
          setOverloaded(true);
          getHelper().getLogger().info("Connector overload detected. Stop accepting new work");
          getHelper().traceWorkerService();
        }
      }
      doRun(sleepTime);
    }
 catch (    Exception ex) {
      this.helper.getLogger().log(Level.WARNING,"Unexpected error while controlling connector",ex);
    }
  }
}
