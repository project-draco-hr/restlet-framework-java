{
  Form params=request.getResourceRef().getQueryAsForm();
  if (rp.hasReturnTo(request)) {
    Context.getCurrentLogger().info("handling return");
    Map<AX,String> axResp=new HashMap<AX,String>();
    try {
      Identifier identifier=rp.verify(axResp,request,true);
      if (identifier != null && identifier.getIdentifier() != null) {
        User u=new User(identifier.getIdentifier());
        if (axResp.size() > 0) {
          for (          Map.Entry<AX,String> entry : axResp.entrySet()) {
            OpenIdUser.setValueFromAX(entry.getKey(),entry.getValue(),u);
          }
        }
        request.getClientInfo().setUser(u);
        return RESULT_VALID;
      }
 else       return RESULT_INVALID;
    }
 catch (    Exception e) {
      Reference ref=new Reference(request.getResourceRef().getHostIdentifier() + request.getResourceRef().getPath());
      Context.getCurrentLogger().info("Generating XRDS Response");
      if (params.getFirst("sessionId") != null) {
        ref.addQueryParameter("sessionId",params.getFirstValue("sessionId"));
        ref.addQueryParameter("return","true");
      }
      try {
        Representation rep=XRDS.returnToXrds(ref.toString());
        response.setEntity(rep);
        return RESULT_MISSING;
      }
 catch (      Exception e1) {
        e.printStackTrace();
        return RESULT_UNKNOWN;
      }
    }
  }
 else {
    String target=this.getTarget(params,request);
    Reference ref=new Reference(request.getResourceRef().getHostIdentifier() + request.getResourceRef().getPath());
    Context.getCurrentLogger().info("generating a authentication request");
    try {
      rp.authRequest(target,true,true,ref.toString(),optionalAttributes,requiredAttributes,request,response);
      return RESULT_MISSING;
    }
 catch (    Exception e) {
      e.printStackTrace();
      return RESULT_INVALID;
    }
  }
}
