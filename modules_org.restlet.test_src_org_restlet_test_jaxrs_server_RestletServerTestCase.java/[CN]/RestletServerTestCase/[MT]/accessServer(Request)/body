{
  Reference reference=request.getResourceRef();
  if (reference.getBaseRef() == null)   reference.setBaseRef(reference.getHostIdentifier());
  Restlet connector=getClientConnector();
  if (shouldAccessWithoutTcp()) {
    String hostDomain=request.getResourceRef().getHostDomain();
    Util.getHttpHeaders(request).add("host",hostDomain);
  }
  Response response=connector.handle(request);
  if (!useTcp && request.getMethod().equals(Method.HEAD)) {
    response.setEntity(new WrapperRepresentation(response.getEntity()){
      @Override public ReadableByteChannel getChannel() throws IOException {
        return ByteUtils.getChannel(getStream());
      }
      @Override public Reader getReader() throws IOException {
        return new StringReader("");
      }
      @Override public InputStream getStream() throws IOException {
        return new ByteArrayInputStream(new byte[0]);
      }
      @Override public void write(      OutputStream outputStream) throws IOException {
      }
      @Override public void write(      WritableByteChannel writableChannel) throws IOException {
      }
      @Override public void write(      Writer writer) throws IOException {
      }
      @Override public boolean isAvailable(){
        return false;
      }
      @Override public String getText(){
        return null;
      }
    }
);
  }
  return response;
}
