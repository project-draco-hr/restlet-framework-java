def _parse_localename(localename):
    ' Parses the locale code for localename and returns the\n        result as tuple (language code, encoding).\n\n        The localename is normalized and passed through the locale\n        alias engine. A ValueError is raised in case the locale name\n        cannot be parsed.\n\n        The language code corresponds to RFC 1766.  code and encoding\n        can be None in case the values cannot be determined or are\n        unknown to this implementation.\n\n    '
    code = normalize(localename)
    if ('@' in code):
        (code, modifier) = code.split('@')
        if ((modifier == 'euro') and ('.' not in code)):
            return (code, 'iso-8859-15')
    if ('.' in code):
        return tuple(code.split('.')[:2])
    elif (code == 'C'):
        return (None, None)
    raise ValueError, ('unknown locale: %s' % localename)
