def getdefaultlocale(envvars=('LC_ALL', 'LC_CTYPE', 'LANG', 'LANGUAGE')):
    ' Tries to determine the default locale settings and returns\n        them as tuple (language code, encoding).\n\n        According to POSIX, a program which has not called\n        setlocale(LC_ALL, "") runs using the portable \'C\' locale.\n        Calling setlocale(LC_ALL, "") lets it use the default locale as\n        defined by the LANG variable. Since we don\'t want to interfere\n        with the current locale setting we thus emulate the behavior\n        in the way described above.\n\n        To maintain compatibility with other platforms, not only the\n        LANG variable is tested, but a list of variables given as\n        envvars parameter. The first found to be defined will be\n        used. envvars defaults to the search path used in GNU gettext;\n        it must always contain the variable name \'LANG\'.\n\n        Except for the code \'C\', the language code corresponds to RFC\n        1766.  code and encoding can be None in case the values cannot\n        be determined.\n\n    '
    try:
        import _locale
        (code, encoding) = _locale._getdefaultlocale()
    except (ImportError, AttributeError):
        pass
    else:
        if ((sys.platform == 'win32') and code and (code[:2] == '0x')):
            code = windows_locale.get(int(code, 0))
        return (code, encoding)
    import os
    lookup = os.environ.get
    for variable in envvars:
        localename = lookup(variable, None)
        if localename:
            if (variable == 'LANGUAGE'):
                localename = localename.split(':')[0]
            break
    else:
        localename = 'C'
    return _parse_localename(localename)
