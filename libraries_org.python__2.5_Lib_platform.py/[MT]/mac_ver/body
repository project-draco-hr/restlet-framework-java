def mac_ver(release='', versioninfo=('', '', ''), machine=''):
    " Get MacOS version information and return it as tuple (release,\n        versioninfo, machine) with versioninfo being a tuple (version,\n        dev_stage, non_release_version).\n\n        Entries which cannot be determined are set to the paramter values\n        which default to ''. All tuple entries are strings.\n\n        Thanks to Mark R. Levinson for mailing documentation links and\n        code examples for this function. Documentation for the\n        gestalt() API is available online at:\n\n           http://www.rgaros.nl/gestalt/\n\n    "
    try:
        import gestalt
        import MacOS
    except ImportError:
        return (release, versioninfo, machine)
    (sysv, sysu, sysa) = _mac_ver_lookup(('sysv', 'sysu', 'sysa'))
    if sysv:
        major = ((sysv & 65280) >> 8)
        minor = ((sysv & 240) >> 4)
        patch = (sysv & 15)
        if ((major, minor) >= (10, 4)):
            (major, minor, patch) = _mac_ver_lookup(('sys1', 'sys2', 'sys3'))
            release = ('%i.%i.%i' % (major, minor, patch))
        else:
            release = ('%s.%i.%i' % (_bcd2str(major), minor, patch))
    if sysu:
        major = int(((sysu & 4278190080L) >> 24))
        minor = ((sysu & 15728640) >> 20)
        bugfix = ((sysu & 983040) >> 16)
        stage = ((sysu & 65280) >> 8)
        nonrel = (sysu & 255)
        version = ('%s.%i.%i' % (_bcd2str(major), minor, bugfix))
        nonrel = _bcd2str(nonrel)
        stage = {32: 'development', 64: 'alpha', 96: 'beta', 128: 'final', }.get(stage, '')
        versioninfo = (version, stage, nonrel)
    if sysa:
        machine = {1: '68k', 2: 'PowerPC', 10: 'i386', }.get(sysa, '')
    return (release, versioninfo, machine)
