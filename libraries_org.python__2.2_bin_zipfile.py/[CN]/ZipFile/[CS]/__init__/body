def __init__(self, file, mode='r', compression=ZIP_STORED):
    'Open the ZIP file with mode read "r", write "w" or append "a".'
    if (compression == ZIP_STORED):
        pass
    elif (compression == ZIP_DEFLATED):
        if (not zlib):
            raise RuntimeError, 'Compression requires the (missing) zlib module'
    else:
        raise RuntimeError, 'That compression method is not supported'
    self.debug = 0
    self.NameToInfo = {}
    self.filelist = []
    self.compression = compression
    self.mode = key = mode[0]
    if (type(file) in _STRING_TYPES):
        self._filePassed = 0
        self.filename = file
        modeDict = {'r': 'rb', 'w': 'wb', 'a': 'r+b', }
        self.fp = open(file, modeDict[mode])
    else:
        self._filePassed = 1
        self.fp = file
        self.filename = getattr(file, 'name', None)
    if (key == 'r'):
        self._GetContents()
    elif (key == 'w'):
        pass
    elif (key == 'a'):
        fp = self.fp
        fp.seek((-22), 2)
        endrec = fp.read()
        if ((endrec[0:4] == stringEndArchive) and (endrec[(-2):] == '\x00\x00')):
            self._GetContents()
            fp.seek(self.start_dir, 0)
        else:
            fp.seek(0, 2)
    else:
        if (not self._filePassed):
            self.fp.close()
            self.fp = None
        raise RuntimeError, 'Mode must be "r", "w" or "a"'
