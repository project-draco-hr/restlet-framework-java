def test_case_sensitivity(self):
    cf = self.newconfig()
    cf.add_section('A')
    cf.add_section('a')
    L = cf.sections()
    L.sort()
    eq = self.assertEqual
    eq(L, ['A', 'a'])
    cf.set('a', 'B', 'value')
    eq(cf.options('a'), ['b'])
    eq(cf.get('a', 'b'), 'value', 'could not locate option, expecting case-insensitive option names')
    self.failUnless(cf.has_option('a', 'b'))
    cf.set('A', 'A-B', 'A-B value')
    for opt in ('a-b', 'A-b', 'a-B', 'A-B'):
        self.failUnless(cf.has_option('A', opt), 'has_option() returned false for option which should exist')
    eq(cf.options('A'), ['a-b'])
    eq(cf.options('a'), ['b'])
    cf.remove_option('a', 'B')
    eq(cf.options('a'), [])
    cf = self.fromstring('[MySection]\nOption: first line\n\tsecond line\n')
    eq(cf.options('MySection'), ['option'])
    eq(cf.get('MySection', 'Option'), 'first line\nsecond line')
    cf = self.fromstring('[section]\nnekey=nevalue\n', defaults={'key': 'value', })
    self.failUnless(cf.has_option('section', 'Key'))
