def __call__(self, source, filename='<input>', symbol='single'):
    'Compile a command and determine whether it is incomplete.\n\n        Arguments:\n\n        source -- the source string; may contain \\n characters\n        filename -- optional filename from which source was read;\n                    default "<input>"\n        symbol -- optional grammar start symbol; "single" (default) or\n                  "eval"\n\n        Return value / exceptions raised:\n\n        - Return a code object if the command is complete and valid\n        - Return None if the command is incomplete\n        - Raise SyntaxError, ValueError or OverflowError if the command is a\n          syntax error (OverflowError and ValueError can be produced by\n          malformed literals).\n        '
    if (symbol not in ['single', 'eval']):
        raise ValueError, 'symbol arg must be either single or eval'
    symbol = CompileMode.getMode(symbol)
    return Py.compile_command_flags(source, filename, symbol, self._cflags, 0)
