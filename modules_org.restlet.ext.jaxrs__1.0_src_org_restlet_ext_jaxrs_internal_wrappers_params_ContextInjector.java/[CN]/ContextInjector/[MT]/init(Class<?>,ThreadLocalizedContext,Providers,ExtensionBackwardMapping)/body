{
  do {
    try {
      for (      final Field field : jaxRsClass.getDeclaredFields()) {
        if (field.isAnnotationPresent(Context.class)) {
          final InjectionAim aim=new FieldWrapper(field);
          final Class<?> declaringClass=field.getType();
          final Injector injector=getInjector(declaringClass,aim,tlContext,allProviders,extensionBackwardMapping);
          this.injEverSameAims.add(injector);
        }
      }
    }
 catch (    final SecurityException e) {
      throw e;
    }
catch (    final IllegalTypeException e) {
      throw new IllegalFieldTypeException(e);
    }
    try {
      for (      final Method method : jaxRsClass.getDeclaredMethods()) {
        if (isBeanSetter(method,Context.class)) {
          final BeanSetter aim=new BeanSetter(method);
          final Class<?> paramClass=method.getParameterTypes()[0];
          final Injector injector=getInjector(paramClass,aim,tlContext,allProviders,extensionBackwardMapping);
          this.injEverSameAims.add(injector);
        }
      }
    }
 catch (    final SecurityException e) {
      throw e;
    }
catch (    final IllegalTypeException e) {
      throw new IllegalBeanSetterTypeException(e);
    }
    jaxRsClass=jaxRsClass.getSuperclass();
  }
 while (jaxRsClass != null);
}
