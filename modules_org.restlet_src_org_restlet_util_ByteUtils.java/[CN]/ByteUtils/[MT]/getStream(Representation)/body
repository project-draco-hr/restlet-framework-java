{
  if (representation == null) {
    return null;
  }
  final PipeStream pipe=new PipeStream();
  final Context context=Context.getCurrent();
  context.getExecutorService().execute(new Runnable(){
    public void run(){
      try {
        final OutputStream os=pipe.getOutputStream();
        representation.write(os);
        os.write(-1);
        os.close();
      }
 catch (      final IOException ioe) {
        Logger.getLogger(ByteUtils.class.getCanonicalName()).log(Level.FINE,"Error while writing to the piped input stream.",ioe);
      }
    }
  }
);
  return pipe.getInputStream();
}
