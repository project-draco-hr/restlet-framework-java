def main(argv=None):
    import getopt
    if (argv is None):
        argv = sys.argv
    try:
        (opts, prog_argv) = getopt.getopt(argv[1:], 'tcrRf:d:msC:lT', ['help', 'version', 'trace', 'count', 'report', 'no-report', 'summary', 'file=', 'missing', 'ignore-module=', 'ignore-dir=', 'coverdir=', 'listfuncs', 'trackcalls'])
    except getopt.error as msg:
        sys.stderr.write(('%s: %s\n' % (sys.argv[0], msg)))
        sys.stderr.write(("Try `%s --help' for more information\n" % sys.argv[0]))
        sys.exit(1)
    trace = 0
    count = 0
    report = 0
    no_report = 0
    counts_file = None
    missing = 0
    ignore_modules = []
    ignore_dirs = []
    coverdir = None
    summary = 0
    listfuncs = False
    countcallers = False
    for (opt, val) in opts:
        if (opt == '--help'):
            usage(sys.stdout)
            sys.exit(0)
        if (opt == '--version'):
            sys.stdout.write('trace 2.0\n')
            sys.exit(0)
        if ((opt == '-T') or (opt == '--trackcalls')):
            countcallers = True
            continue
        if ((opt == '-l') or (opt == '--listfuncs')):
            listfuncs = True
            continue
        if ((opt == '-t') or (opt == '--trace')):
            trace = 1
            continue
        if ((opt == '-c') or (opt == '--count')):
            count = 1
            continue
        if ((opt == '-r') or (opt == '--report')):
            report = 1
            continue
        if ((opt == '-R') or (opt == '--no-report')):
            no_report = 1
            continue
        if ((opt == '-f') or (opt == '--file')):
            counts_file = val
            continue
        if ((opt == '-m') or (opt == '--missing')):
            missing = 1
            continue
        if ((opt == '-C') or (opt == '--coverdir')):
            coverdir = val
            continue
        if ((opt == '-s') or (opt == '--summary')):
            summary = 1
            continue
        if (opt == '--ignore-module'):
            ignore_modules.append(val)
            continue
        if (opt == '--ignore-dir'):
            for s in val.split(os.pathsep):
                s = os.path.expandvars(s)
                s = s.replace('$prefix', os.path.join(sys.prefix, 'lib', ('python' + sys.version[:3])))
                s = s.replace('$exec_prefix', os.path.join(sys.exec_prefix, 'lib', ('python' + sys.version[:3])))
                s = os.path.normpath(s)
                ignore_dirs.append(s)
            continue
        assert 0, 'Should never get here'
    if (listfuncs and (count or trace)):
        _err_exit('cannot specify both --listfuncs and (--trace or --count)')
    if (not (count or trace or report or listfuncs or countcallers)):
        _err_exit('must specify one of --trace, --count, --report, --listfuncs, or --trackcalls')
    if (report and no_report):
        _err_exit('cannot specify both --report and --no-report')
    if (report and (not counts_file)):
        _err_exit('--report requires a --file')
    if (no_report and (len(prog_argv) == 0)):
        _err_exit('missing name of file to run')
    if report:
        results = CoverageResults(infile=counts_file, outfile=counts_file)
        results.write_results(missing, summary=summary, coverdir=coverdir)
    else:
        sys.argv = prog_argv
        progname = prog_argv[0]
        sys.path[0] = os.path.split(progname)[0]
        t = Trace(count, trace, countfuncs=listfuncs, countcallers=countcallers, ignoremods=ignore_modules, ignoredirs=ignore_dirs, infile=counts_file, outfile=counts_file)
        try:
            t.run(('execfile(%r)' % (progname,)))
        except IOError as err:
            _err_exit(('Cannot run file %r because: %s' % (sys.argv[0], err)))
        except SystemExit:
            pass
        results = t.results()
        if (not no_report):
            results.write_results(missing, summary=summary, coverdir=coverdir)
