def _default(self, text):
    prefix = text[:1]
    if (prefix == '&'):
        try:
            self._target.data(self.entity[text[1:(-1)]])
        except KeyError:
            from xml.parsers import expat
            raise expat.error(('undefined entity %s: line %d, column %d' % (text, self._parser.ErrorLineNumber, self._parser.ErrorColumnNumber)))
    elif ((prefix == '<') and (text[:9] == '<!DOCTYPE')):
        self._doctype = []
    elif (self._doctype is not None):
        if (prefix == '>'):
            self._doctype = None
            return
        text = string.strip(text)
        if (not text):
            return
        self._doctype.append(text)
        n = len(self._doctype)
        if (n > 2):
            type = self._doctype[1]
            if ((type == 'PUBLIC') and (n == 4)):
                (name, type, pubid, system) = self._doctype
            elif ((type == 'SYSTEM') and (n == 3)):
                (name, type, system) = self._doctype
                pubid = None
            else:
                return
            if pubid:
                pubid = pubid[1:(-1)]
            self.doctype(name, pubid, system[1:(-1)])
            self._doctype = None
