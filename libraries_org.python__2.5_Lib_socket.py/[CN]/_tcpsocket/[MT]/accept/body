def accept(self):
    'This signifies a server socket'
    try:
        if (not self.sock_impl):
            self.listen()
        assert self.server
        new_sock = self.sock_impl.accept()
        if (not new_sock):
            raise would_block_error()
        cliconn = _tcpsocket()
        cliconn.pending_options[(SOL_SOCKET, SO_REUSEADDR)] = new_sock.jsocket.getReuseAddress()
        cliconn.sock_impl = new_sock
        cliconn._setup()
        return (cliconn, new_sock.getpeername())
    except java.lang.Exception as jlx:
        raise _map_exception(jlx)
