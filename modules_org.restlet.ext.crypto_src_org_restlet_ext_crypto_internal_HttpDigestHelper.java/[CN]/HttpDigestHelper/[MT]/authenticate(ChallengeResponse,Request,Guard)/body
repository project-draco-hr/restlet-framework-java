{
  Series<Parameter> parameters=cr.getParameters();
  String username=cr.getIdentifier();
  String response=new String(cr.getSecret());
  String nonce=parameters.getFirstValue("nonce");
  String uri=parameters.getFirstValue("uri");
  String qop=parameters.getFirstValue("qop");
  String nc=parameters.getFirstValue("nc");
  String cnonce=parameters.getFirstValue("cnonce");
  try {
    if (!isNonceValid(nonce,guard.getServerKey(),guard.getNonceLifespan())) {
      return Guard.AUTHENTICATION_STALE;
    }
  }
 catch (  Exception ce) {
    return Guard.AUTHENTICATION_INVALID;
  }
  if (!AuthenticatorUtils.anyNull(username,nonce,response,uri)) {
    Reference resourceRef=request.getResourceRef();
    String requestUri=resourceRef.getPath();
    if ((resourceRef.getQuery() != null) && (uri.indexOf('?') > -1)) {
      requestUri+="?" + resourceRef.getQuery();
    }
    if (uri.equals(requestUri)) {
      String a1=getHashedSecret(username,guard);
      if (a1 != null) {
        String a2=DigestUtils.toMd5(request.getMethod() + ":" + requestUri);
        StringBuffer expectedResponse=new StringBuffer(a1).append(':').append(nonce);
        if (!AuthenticatorUtils.anyNull(qop,cnonce,nc)) {
          expectedResponse.append(':').append(nc).append(':').append(cnonce).append(':').append(qop);
        }
        expectedResponse.append(':').append(a2);
        if (response.equals(DigestUtils.toMd5(expectedResponse.toString()))) {
          return Guard.AUTHENTICATION_VALID;
        }
      }
    }
    return Guard.AUTHENTICATION_INVALID;
  }
  return Guard.AUTHENTICATION_MISSING;
}
