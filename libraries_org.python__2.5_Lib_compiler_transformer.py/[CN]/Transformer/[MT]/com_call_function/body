def com_call_function(self, primaryNode, nodelist):
    if (nodelist[0] == token.RPAR):
        return CallFunc(primaryNode, [], lineno=extractLineNo(nodelist))
    args = []
    kw = 0
    len_nodelist = len(nodelist)
    for i in range(1, len_nodelist, 2):
        node = nodelist[i]
        if ((node[0] == token.STAR) or (node[0] == token.DOUBLESTAR)):
            break
        (kw, result) = self.com_argument(node, kw)
        if ((len_nodelist != 2) and isinstance(result, GenExpr) and (len(node) == 3) and (node[2][0] == symbol.gen_for)):
            raise SyntaxError, 'generator expression needs parenthesis'
        args.append(result)
    else:
        i = (i + 1)
    if ((i < len_nodelist) and (nodelist[i][0] == token.COMMA)):
        i = (i + 1)
    star_node = dstar_node = None
    while (i < len_nodelist):
        tok = nodelist[i]
        ch = nodelist[(i + 1)]
        i = (i + 3)
        if (tok[0] == token.STAR):
            if (star_node is not None):
                raise SyntaxError, 'already have the varargs indentifier'
            star_node = self.com_node(ch)
        elif (tok[0] == token.DOUBLESTAR):
            if (dstar_node is not None):
                raise SyntaxError, 'already have the kwargs indentifier'
            dstar_node = self.com_node(ch)
        else:
            raise SyntaxError, ('unknown node type: %s' % tok)
    return CallFunc(primaryNode, args, star_node, dstar_node, lineno=extractLineNo(nodelist))
