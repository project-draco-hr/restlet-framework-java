def compile_node(self, node):
    n = node[0]
    if (n == symbol.encoding_decl):
        self.encoding = node[2]
        node = node[1]
        n = node[0]
    if (n == symbol.single_input):
        return self.single_input(node[1:])
    if (n == symbol.file_input):
        return self.file_input(node[1:])
    if (n == symbol.eval_input):
        return self.eval_input(node[1:])
    if (n == symbol.lambdef):
        return self.lambdef(node[1:])
    if (n == symbol.funcdef):
        return self.funcdef(node[1:])
    if (n == symbol.classdef):
        return self.classdef(node[1:])
    raise WalkerError, ('unexpected node type', n)
