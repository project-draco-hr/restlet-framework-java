def check_node(self, node, source):
    individual_group_bit = ((node >> 40L) & 1)
    universal_local_bit = ((node >> 40L) & 2)
    message = ("%012x doesn't look like a real MAC address" % node)
    self.assertEqual(individual_group_bit, 0, message)
    self.assertEqual(universal_local_bit, 0, message)
    self.assertNotEqual(node, 0, message)
    self.assertNotEqual(node, 281474976710655L, message)
    self.assert_((0 <= node), message)
    self.assert_((node < (1L << 48)), message)
    TestUUID.source2node[source] = node
    if TestUUID.last_node:
        if (TestUUID.last_node != node):
            msg = 'different sources disagree on node:\n'
            for (s, n) in TestUUID.source2node.iteritems():
                msg += ('    from source %r, node was %012x\n' % (s, n))
    else:
        TestUUID.last_node = node
