{
  final AttributesImpl attributes=new AttributesImpl();
  if ((getIdentifier() != null) && !getIdentifier().equals("")) {
    attributes.addAttribute("","id",null,"xs:ID",getIdentifier());
  }
  if ((getName() != null) && (getName().toString() != null)) {
    attributes.addAttribute("","name",null,"xs:NMTOKEN",getName().toString());
  }
  if ((getTargetRef() != null) && (getTargetRef().toString() != null)) {
    attributes.addAttribute("","href",null,"xs:anyURI",getTargetRef().toString());
  }
  if (getDocumentations().isEmpty() && (getRequest() == null) && (getResponses().isEmpty())) {
    writer.emptyElement(APP_NAMESPACE,"method",null,attributes);
  }
 else {
    writer.startElement(APP_NAMESPACE,"method",null,attributes);
    for (    final DocumentationInfo documentationInfo : getDocumentations()) {
      documentationInfo.writeElement(writer);
    }
    if (getRequest() != null) {
      getRequest().writeElement(writer);
    }
    if (!getResponses().isEmpty()) {
      for (      ResponseInfo response : getResponses()) {
        response.writeElement(writer);
        if (!response.getFaults().isEmpty()) {
          for (          FaultInfo faultInfo : response.getFaults()) {
            ResponseInfo r=new ResponseInfo();
            for (            Status status : faultInfo.getStatuses()) {
              if (!r.getStatuses().contains(status)) {
                r.getStatuses().add(status);
              }
            }
            r.getRepresentations().add(faultInfo);
            r.writeElement(writer);
          }
        }
      }
    }
    writer.endElement(APP_NAMESPACE,"method");
  }
}
