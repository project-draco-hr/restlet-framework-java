def whichdb(filename):
    'Guess which db package to use to open a db file.\n\n    Return values:\n\n    - None if the database file can\'t be read;\n    - empty string if the file can be read but can\'t be recognized\n    - the module name (e.g. "dbm" or "gdbm") if recognized.\n\n    Importing the given module may still fail, and opening the\n    database using that module may still fail.\n    '
    import struct
    try:
        f = open(((filename + os.extsep) + 'pag'), 'rb')
        f.close()
        f = open(((filename + os.extsep) + 'dir'), 'rb')
        f.close()
        return 'dbm'
    except IOError:
        pass
    try:
        sizes = (os.stat(((filename + os.extsep) + 'dat')).st_size, os.stat(((filename + os.extsep) + 'dir')).st_size)
        if (sizes == (0, 0)):
            return 'dumbdbm'
        f = open(((filename + os.extsep) + 'dir'), 'rb')
        try:
            if (f.read(1) in ["'", '"']):
                return 'dumbdbm'
        finally:
            f.close()
    except (OSError, IOError):
        pass
    try:
        f = open(filename, 'rb')
    except IOError:
        return None
    s16 = f.read(16)
    f.close()
    s = s16[0:4]
    if (len(s) != 4):
        return ''
    try:
        (magic,) = struct.unpack('=l', s)
    except struct.error:
        return ''
    if (magic == 324508366):
        return 'gdbm'
    if (magic in (398689, 1628767744)):
        return 'dbhash'
    try:
        (magic,) = struct.unpack('=l', s16[(-4):])
    except struct.error:
        return ''
    if (magic in (398689, 1628767744)):
        return 'dbhash'
    return ''
