def customize_compiler(compiler):
    "Do any platform-specific customization of a CCompiler instance.\n\n    Mainly needed on Unix, so we can plug in the information that\n    varies across Unices and is stored in Python's Makefile.\n    "
    if (compiler.compiler_type == 'unix'):
        (cc, cxx, opt, cflags, ccshared, ldshared, so_ext) = get_config_vars('CC', 'CXX', 'OPT', 'CFLAGS', 'CCSHARED', 'LDSHARED', 'SO')
        if os.environ.has_key('CC'):
            cc = os.environ['CC']
        if os.environ.has_key('CXX'):
            cxx = os.environ['CXX']
        if os.environ.has_key('LDSHARED'):
            ldshared = os.environ['LDSHARED']
        if os.environ.has_key('CPP'):
            cpp = os.environ['CPP']
        else:
            cpp = (cc + ' -E')
        if os.environ.has_key('LDFLAGS'):
            ldshared = ((ldshared + ' ') + os.environ['LDFLAGS'])
        if os.environ.has_key('CFLAGS'):
            cflags = ((opt + ' ') + os.environ['CFLAGS'])
            ldshared = ((ldshared + ' ') + os.environ['CFLAGS'])
        if os.environ.has_key('CPPFLAGS'):
            cpp = ((cpp + ' ') + os.environ['CPPFLAGS'])
            cflags = ((cflags + ' ') + os.environ['CPPFLAGS'])
            ldshared = ((ldshared + ' ') + os.environ['CPPFLAGS'])
        cc_cmd = ((cc + ' ') + cflags)
        compiler.set_executables(preprocessor=cpp, compiler=cc_cmd, compiler_so=((cc_cmd + ' ') + ccshared), compiler_cxx=cxx, linker_so=ldshared, linker_exe=cc)
        compiler.shared_lib_extension = so_ext
