def get_python_inc(plat_specific=0, prefix=None):
    "Return the directory containing installed Python header files.\n\n    If 'plat_specific' is false (the default), this is the path to the\n    non-platform-specific header files, i.e. Python.h and so on;\n    otherwise, this is the path to platform-specific header files\n    (namely pyconfig.h).\n\n    If 'prefix' is supplied, use it instead of sys.prefix or\n    sys.exec_prefix -- i.e., ignore 'plat_specific'.\n    "
    if (prefix is None):
        prefix = ((plat_specific and EXEC_PREFIX) or PREFIX)
    if (os.name == 'posix'):
        if python_build:
            base = os.path.dirname(os.path.abspath(sys.executable))
            if plat_specific:
                inc_dir = base
            else:
                inc_dir = os.path.join(base, 'Include')
                if (not os.path.exists(inc_dir)):
                    inc_dir = os.path.join(os.path.dirname(base), 'Include')
            return inc_dir
        return os.path.join(prefix, 'include', ('python' + get_python_version()))
    elif (os.name == 'nt'):
        return os.path.join(prefix, 'include')
    elif (os.name == 'mac'):
        if plat_specific:
            return os.path.join(prefix, 'Mac', 'Include')
        else:
            return os.path.join(prefix, 'Include')
    elif ((os.name == 'os2') or (os.name == 'java')):
        return os.path.join(prefix, 'Include')
    else:
        raise DistutilsPlatformError(("I don't know where Python installs its C header files on platform '%s'" % os.name))
