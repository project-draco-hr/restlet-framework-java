def parse_makefile(fn, g=None):
    'Parse a Makefile-style file.\n\n    A dictionary containing name/value pairs is returned.  If an\n    optional dictionary is passed in as the second argument, it is\n    used instead of a new dictionary.\n    '
    from distutils.text_file import TextFile
    fp = TextFile(fn, strip_comments=1, skip_blanks=1, join_lines=1)
    if (g is None):
        g = {}
    done = {}
    notdone = {}
    while 1:
        line = fp.readline()
        if (line is None):
            break
        m = _variable_rx.match(line)
        if m:
            (n, v) = m.group(1, 2)
            v = string.strip(v)
            if ('$' in v):
                notdone[n] = v
            else:
                try:
                    v = int(v)
                except ValueError:
                    pass
                done[n] = v
    while notdone:
        for name in notdone.keys():
            value = notdone[name]
            m = (_findvar1_rx.search(value) or _findvar2_rx.search(value))
            if m:
                n = m.group(1)
                found = True
                if done.has_key(n):
                    item = str(done[n])
                elif notdone.has_key(n):
                    found = False
                elif os.environ.has_key(n):
                    item = os.environ[n]
                else:
                    done[n] = item = ''
                if found:
                    after = value[m.end():]
                    value = ((value[:m.start()] + item) + after)
                    if ('$' in after):
                        notdone[name] = value
                    else:
                        try:
                            value = int(value)
                        except ValueError:
                            done[name] = string.strip(value)
                        else:
                            done[name] = value
                        del notdone[name]
            else:
                del notdone[name]
    fp.close()
    g.update(done)
    return g
