def testternop(a, b, c, res, expr='a[b:c]', meth='__getslice__'):
    if verbose:
        print 'checking', expr
    dict = {'a': a, 'b': b, 'c': c, }
    vereq(eval(expr, dict), res)
    t = type(a)
    m = getattr(t, meth)
    while (meth not in t.__dict__):
        t = t.__bases__[0]
    vereq(m, t.__dict__[meth])
    vereq(m(a, b, c), res)
    bm = getattr(a, meth)
    vereq(bm(b, c), res)
