def test_sha_vectors(self):

    def shatest(key, data, digest):
        h = hmac.HMAC(key, data, digestmod=sha)
        self.assertEqual(h.hexdigest().upper(), digest.upper())
    shatest((chr(11) * 20), 'Hi There', 'b617318655057264e28bc0b6fb378c8ef146be00')
    shatest('Jefe', 'what do ya want for nothing?', 'effcdf6ae5eb2fa2d27416d5f184df9c259a7c79')
    shatest((chr(170) * 20), (chr(221) * 50), '125d7342b9ac11cd91a39af48aa17b4f63f175d3')
    shatest(''.join([chr(i) for i in range(1, 26)]), (chr(205) * 50), '4c9007f4026250c6bc8414f9bf50c86c2d7235da')
    shatest((chr(12) * 20), 'Test With Truncation', '4c1a03424b55e07fe7f27be1d58bb9324a9a5a04')
    shatest((chr(170) * 80), 'Test Using Larger Than Block-Size Key - Hash Key First', 'aa4ae5e15272d00e95705637ce8a3b55ed402112')
    shatest((chr(170) * 80), 'Test Using Larger Than Block-Size Key and Larger Than One Block-Size Data', 'e8e99d0f45237d786d6bbaa7965c7808bbff1a91')
