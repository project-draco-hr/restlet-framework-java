{
  Set<String> usedModels=new HashSet<>();
  Contract contract=definition.getContract();
  List<Resource> resources=new ArrayList<>();
  boolean allResources=contract.getSections().isEmpty();
  for (  Resource resource : contract.getResources()) {
    if (allResources) {
      resources.add(resource);
    }
 else {
      if (resource.getSections().contains(sectionName)) {
        resources.add(resource);
      }
    }
  }
  for (  Resource resource : resources) {
    if (allResources && !resource.getResourcePath().startsWith("/" + sectionName)) {
      continue;
    }
    ResourceDeclaration rd=new ResourceDeclaration();
    rd.setPath(resource.getResourcePath());
    rd.setDescription(resource.getDescription());
    fillApiDeclarationOperations(resource,contract,usedModels,rd);
    apiDeclaration.getApis().add(rd);
  }
  Collections.sort(apiDeclaration.getApis(),new Comparator<ResourceDeclaration>(){
    @Override public int compare(    ResourceDeclaration o1,    ResourceDeclaration o2){
      return o1.getPath().compareTo(o2.getPath());
    }
  }
);
  return usedModels;
}
