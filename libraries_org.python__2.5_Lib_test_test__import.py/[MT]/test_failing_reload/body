def test_failing_reload():
    source = ((TESTFN + os.extsep) + 'py')
    f = open(source, 'w')
    print  >> f, 'a = 1'
    print  >> f, 'b = 2'
    f.close()
    sys.path.insert(0, os.curdir)
    try:
        mod = __import__(TESTFN)
        if (TESTFN not in sys.modules):
            raise TestFailed('expected module in sys.modules')
        if ((mod.a != 1) or (mod.b != 2)):
            raise TestFailed('module has wrong attribute values')
        remove_files(TESTFN)
        f = open(source, 'w')
        print  >> f, 'a = 10'
        print  >> f, 'b = 20//0'
        f.close()
        try:
            reload(mod)
        except ZeroDivisionError:
            pass
        else:
            raise TestFailed('was able to reload a damaged module')
        mod = sys.modules.get(TESTFN)
        if (mod is None):
            raise TestFailed('expected module to still be in sys.modules')
        if ((mod.a != 10) or (mod.b != 2)):
            raise TestFailed('module has wrong attribute values')
    finally:
        sys.path.pop(0)
        remove_files(TESTFN)
        if (TESTFN in sys.modules):
            del sys.modules[TESTFN]
