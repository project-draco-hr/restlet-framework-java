{
  while (isProcessing() && getByteBuffer().hasRemaining()) {
    if (getMessageState() == MessageState.BODY) {
      if (getActualMessage().isEntityAvailable()) {
        long entitySize=getActualMessage().getEntity().getSize();
        int available=getEntityStream().available();
        int result=0;
switch (getEntityType()) {
case ASYNC_CHANNEL:
case FILE_CHANNEL:
case SYNC_CHANNEL:
          result=getEntityChannel().read(getByteBuffer());
        if (result > 0) {
          setEntityIndex(getEntityIndex() + result);
        }
 else         if (result == -1) {
          setEntityIndex(getEntityIndex() + available);
        }
      if ((result == -1) || ((entitySize != -1) && (getEntityIndex() >= entitySize))) {
        setMessageState(MessageState.IDLE);
      }
    break;
case STREAM:
  if (getByteBuffer().hasArray()) {
    byte[] byteArray=getByteBuffer().array();
    if (available > 0) {
      result=getEntityStream().read(byteArray,getByteBuffer().position(),available);
      if (result > 0) {
        getByteBuffer().position(getByteBuffer().position() + result);
        setEntityIndex(getEntityIndex() + result);
      }
 else       if (result == -1) {
        getByteBuffer().position(getByteBuffer().position() + available);
        setEntityIndex(getEntityIndex() + available);
      }
      if ((result == -1) || ((entitySize != -1) && (getEntityIndex() >= entitySize))) {
        setMessageState(MessageState.IDLE);
      }
    }
 else {
    }
  }
 else {
    ReadableByteChannel rbc=Channels.newChannel(getEntityStream());
    result=rbc.read(getByteBuffer());
    if (result > 0) {
      setEntityIndex(getEntityIndex() + result);
    }
 else     if (result == -1) {
      setEntityIndex(getEntityIndex() + available);
    }
    if ((result == -1) || ((entitySize != -1) && (getEntityIndex() >= entitySize))) {
      setMessageState(MessageState.IDLE);
    }
  }
break;
}
}
 else {
setMessageState(MessageState.IDLE);
}
}
 else {
if (getLineBuilder().length() == 0) {
writeLine();
}
if (getLineBuilder().length() > 0) {
int remaining=getByteBuffer().remaining();
if (remaining >= getLineBuilder().length()) {
getByteBuffer().put(StringUtils.getLatin1Bytes(getLineBuilder().toString()));
getLineBuilder().delete(0,getLineBuilder().length());
}
 else {
getByteBuffer().put(StringUtils.getLatin1Bytes(getLineBuilder().substring(0,remaining)));
getLineBuilder().delete(0,remaining);
}
}
}
}
}
