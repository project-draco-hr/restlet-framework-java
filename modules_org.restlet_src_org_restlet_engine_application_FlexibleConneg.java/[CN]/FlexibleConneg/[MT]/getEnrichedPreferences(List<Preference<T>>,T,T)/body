{
  List<Preference<T>> result=new ArrayList<Preference<T>>();
  List<T> undesired=null;
  for (  Preference<T> pref : userPreferences) {
    if (pref.getQuality() == 0) {
      if (undesired == null) {
        undesired=new ArrayList<T>();
      }
      undesired.add(pref.getMetadata());
    }
  }
  result.addAll(userPreferences);
  T parent;
  for (int i=0; i < result.size(); i++) {
    Preference<T> userPref=result.get(i);
    parent=(T)userPref.getMetadata().getParent();
    if ((parent != null)) {
      if (canAdd(parent,undesired)) {
        result.add(new Preference<T>(parent,0.005f + (0.001f * userPref.getQuality())));
      }
    }
  }
  if (defaultValue != null && canAdd(defaultValue,undesired)) {
    Preference<T> defaultPref=new Preference<T>(defaultValue,0.003f);
    result.add(defaultPref);
    T defaultParent=(T)defaultValue.getParent();
    if (defaultParent != null && canAdd(defaultParent,undesired)) {
      result.add(new Preference<T>(defaultParent,0.002f));
    }
  }
  for (int i=result.size() - 1; i >= 0; i--) {
    if (result.get(i).getMetadata().equals(allValue)) {
      result.remove(i);
    }
  }
  result.add(new Preference<T>(allValue,0.001f));
  return result;
}
