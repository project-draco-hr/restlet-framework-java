def get_matching_blocks(self):
    'Return list of triples describing matching subsequences.\n\n        Each triple is of the form (i, j, n), and means that\n        a[i:i+n] == b[j:j+n].  The triples are monotonically increasing in\n        i and in j.\n\n        The last triple is a dummy, (len(a), len(b), 0), and is the only\n        triple with n==0.\n\n        >>> s = SequenceMatcher(None, "abxcd", "abcd")\n        >>> s.get_matching_blocks()\n        [(0, 0, 2), (3, 2, 2), (5, 4, 0)]\n        '
    if (self.matching_blocks is not None):
        return self.matching_blocks
    self.matching_blocks = []
    (la, lb) = (len(self.a), len(self.b))
    self.__helper(0, la, 0, lb, self.matching_blocks)
    self.matching_blocks.append((la, lb, 0))
    return self.matching_blocks
