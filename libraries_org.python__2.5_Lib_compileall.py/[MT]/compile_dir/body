def compile_dir(dir, maxlevels=10, ddir=None, force=0, rx=None, quiet=0):
    'Byte-compile all modules in the given directory tree.\n\n    Arguments (only dir is required):\n\n    dir:       the directory to byte-compile\n    maxlevels: maximum recursion level (default 10)\n    ddir:      if given, purported directory name (this is the\n               directory name that will show up in error messages)\n    force:     if 1, force compilation, even if timestamps are up-to-date\n    quiet:     if 1, be quiet during compilation\n\n    '
    if (not quiet):
        print 'Listing', dir, '...'
    try:
        names = os.listdir(dir)
    except os.error:
        print "Can't list", dir
        names = []
    names.sort()
    success = 1
    for name in names:
        fullname = os.path.join(dir, name)
        if (ddir is not None):
            dfile = os.path.join(ddir, name)
        else:
            dfile = None
        if (rx is not None):
            mo = rx.search(fullname)
            if mo:
                continue
        if os.path.isfile(fullname):
            (head, tail) = (name[:(-3)], name[(-3):])
            if (tail == '.py'):
                cfile = (fullname + ((__debug__ and 'c') or 'o'))
                ftime = os.stat(fullname).st_mtime
                try:
                    ctime = os.stat(cfile).st_mtime
                except os.error:
                    ctime = 0
                if ((ctime > ftime) and (not force)):
                    continue
                if (not quiet):
                    print 'Compiling', fullname, '...'
                try:
                    ok = py_compile.compile(fullname, None, dfile, True)
                except KeyboardInterrupt:
                    raise KeyboardInterrupt
                except py_compile.PyCompileError as err:
                    if quiet:
                        print 'Compiling', fullname, '...'
                    print err.msg
                    success = 0
                except IOError as e:
                    print 'Sorry', e
                    success = 0
                else:
                    if (ok == 0):
                        success = 0
        elif ((maxlevels > 0) and (name != os.curdir) and (name != os.pardir) and os.path.isdir(fullname) and (not os.path.islink(fullname))):
            if (not compile_dir(fullname, (maxlevels - 1), dfile, force, rx, quiet)):
                success = 0
    return success
