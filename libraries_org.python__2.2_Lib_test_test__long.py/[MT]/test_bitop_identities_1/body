def test_bitop_identities_1(x):
    check(((x & 0) == 0), 'x & 0 != 0 for', x)
    check(((x | 0) == x), 'x | 0 != x for', x)
    check(((x ^ 0) == x), 'x ^ 0 != x for', x)
    check(((x & (-1)) == x), 'x & -1 != x for', x)
    check(((x | (-1)) == (-1)), 'x | -1 != -1 for', x)
    check(((x ^ (-1)) == (~ x)), 'x ^ -1 != ~x for', x)
    check((x == (~ (~ x))), 'x != ~~x for', x)
    check(((x & x) == x), 'x & x != x for', x)
    check(((x | x) == x), 'x | x != x for', x)
    check(((x ^ x) == 0), 'x ^ x != 0 for', x)
    check(((x & (~ x)) == 0), 'x & ~x != 0 for', x)
    check(((x | (~ x)) == (-1)), 'x | ~x != -1 for', x)
    check(((x ^ (~ x)) == (-1)), 'x ^ ~x != -1 for', x)
    check(((- x) == (1 + (~ x)) == (~ (x - 1))), 'not -x == 1 + ~x == ~(x-1) for', x)
    for n in range((2 * SHIFT)):
        p2 = (2L ** n)
        check((((x << n) >> n) == x), 'x << n >> n != x for', x, n)
        check(((x // p2) == (x >> n)), 'x // p2 != x >> n for x n p2', x, n, p2)
        check(((x * p2) == (x << n)), 'x * p2 != x << n for x n p2', x, n, p2)
        check(((x & (- p2)) == ((x >> n) << n) == (x & (~ (p2 - 1)))), 'not x & -p2 == x >> n << n == x & ~(p2 - 1) for x n p2', x, n, p2)
