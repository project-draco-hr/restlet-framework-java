'Regression test.\n\nThis will find all modules whose name is "test_*" in the test\ndirectory, and run them.  Various command line options provide\nadditional facilities.\n\nCommand line options:\n\n-v: verbose    -- run tests in verbose mode with output to stdout\n-w: verbose2   -- re-run failed tests in verbose mode\n-q: quiet      -- don\'t print anything except if a test fails\n-g: generate   -- write the output file for a test instead of comparing it\n-x: exclude    -- arguments are tests to *exclude*\n-s: single     -- run only a single test (see below)\n-r: random     -- randomize test execution order\n-m: memo       -- save results to file\n-j: junit-xml  -- save results as JUnit XML to files in directory\n-f: fromfile   -- read names of tests to run from a file (see below)\n-l: findleaks  -- if GC is available detect tests that leak memory\n-u: use        -- specify which special resource intensive tests to run\n-h: help       -- print this text and exit\n-t: threshold  -- call gc.set_threshold(N)\n-T: coverage   -- turn on code coverage using the trace module\n-D: coverdir   -- Directory where coverage files are put\n-N: nocoverdir -- Put coverage files alongside modules\n-L: runleaks   -- run the leaks(1) command just before exit\n-R: huntrleaks -- search for reference leaks (needs debug build, v. slow)\n-M: memlimit   -- run very large memory-consuming tests\n-e: expected  -- run only tests that are expected to run and pass\n\nIf non-option arguments are present, they are names for tests to run,\nunless -x is given, in which case they are names for tests not to run.\nIf no test names are given, all tests are run.\n\n-v is incompatible with -g and does not compare test output files.\n\n-T turns on code coverage tracing with the trace module.\n\n-D specifies the directory where coverage files are put.\n\n-N Put coverage files alongside modules.\n\n-s means to run only a single test and exit.  This is useful when\ndoing memory analysis on the Python interpreter (which tend to consume\ntoo many resources to run the full regression test non-stop).  The\nfile /tmp/pynexttest is read to find the next test to run.  If this\nfile is missing, the first test_*.py file in testdir or on the command\nline is used.  (actually tempfile.gettempdir() is used instead of\n/tmp).\n\n-f reads the names of tests from the file given as f\'s argument, one\nor more test names per line.  Whitespace is ignored.  Blank lines and\nlines beginning with \'#\' are ignored.  This is especially useful for\nwhittling down failures involving interactions among tests.\n\n-L causes the leaks(1) command to be run just before exit if it exists.\nleaks(1) is available on Mac OS X and presumably on some other\nFreeBSD-derived systems.\n\n-R runs each test several times and examines sys.gettotalrefcount() to\nsee if the test appears to be leaking references.  The argument should\nbe of the form stab:run:fname where \'stab\' is the number of times the\ntest is run to let gettotalrefcount settle down, \'run\' is the number\nof times further it is run and \'fname\' is the name of the file the\nreports are written to.  These parameters all have defaults (5, 4 and\n"reflog.txt" respectively), so the minimal invocation is \'-R ::\'.\n\n-M runs tests that require an exorbitant amount of memory. These tests\ntypically try to ascertain containers keep working when containing more than\n2 billion objects, which only works on 64-bit systems. There are also some\ntests that try to exhaust the address space of the process, which only makes\nsense on 32-bit systems with at least 2Gb of memory. The passed-in memlimit,\nwhich is a string in the form of \'2.5Gb\', determines howmuch memory the\ntests will limit themselves to (but they may go slightly over.) The number\nshouldn\'t be more memory than the machine has (including swap memory). You\nshould also keep in mind that swap memory is generally much, much slower\nthan RAM, and setting memlimit to all available RAM or higher will heavily\ntax the machine. On the other hand, it is no use running these tests with a\nlimit of less than 2.5Gb, and many require more than 20Gb. Tests that expect\nto use more than memlimit memory will be skipped. The big-memory tests\ngenerally run very, very long.\n\n-u is used to specify which special resource intensive tests to run,\nsuch as those requiring large file support or network connectivity.\nThe argument is a comma-separated list of words indicating the\nresources to test.  Currently only the following are defined:\n\n    all -       Enable all special resources.\n\n    audio -     Tests that use the audio device.  (There are known\n                cases of broken audio drivers that can crash Python or\n                even the Linux kernel.)\n\n    curses -    Tests that use curses and will modify the terminal\'s\n                state and output modes.\n\n    largefile - It is okay to run some test that may create huge\n                files.  These tests can take a long time and may\n                consume >2GB of disk space temporarily.\n\n    network -   It is okay to run tests that use external network\n                resource, e.g. testing SSL support for sockets.\n\n    bsddb -     It is okay to run the bsddb testsuite, which takes\n                a long time to complete.\n\n    decimal -   Test the decimal module against a large suite that\n                verifies compliance with standards.\n\n    compiler -  Test the compiler package by compiling all the source\n                in the standard library and test suite.  This takes\n                a long time.  Enabling this resource also allows\n                test_tokenize to verify round-trip lexing on every\n                file in the test library.\n\n    subprocess  Run all tests for the subprocess module.\n\n    urlfetch -  It is okay to download files required on testing.\n\nTo enable all resources except one, use \'-uall,-<resource>\'.  For\nexample, to run all the tests except for the bsddb tests, give the\noption \'-uall,-bsddb\'.\n'
import os
import sys
import getopt
import random
import warnings
import re
import cStringIO
import traceback
import time
warnings.filterwarnings('ignore', 'hex/oct constants', FutureWarning, '.*test.test_grammar$')
if (sys.maxint > 2147483647):
    warnings.filterwarnings('ignore', 'hex/oct constants', FutureWarning, '<string>')
for mod in ('ctypes', 'gzip', 'zipfile', 'tarfile', 'encodings.zlib_codec', 'test.test_zipimport', 'test.test_zlib', 'test.test_zipfile', 'test.test_codecs', 'test.string_tests'):
    warnings.filterwarnings(module=('.*%s$' % (mod,)), action='ignore', category=ImportWarning)
if (sys.platform == 'darwin'):
    try:
        import resource
    except ImportError:
        pass
    else:
        (soft, hard) = resource.getrlimit(resource.RLIMIT_STACK)
        newsoft = min(hard, max(soft, (1024 * 2048)))
        resource.setrlimit(resource.RLIMIT_STACK, (newsoft, hard))
import test as _test
from test import test_support
RESOURCE_NAMES = ('audio', 'curses', 'largefile', 'network', 'bsddb', 'decimal', 'compiler', 'subprocess', 'urlfetch')
STDTESTS = ['test_grammar', 'test_opcodes', 'test_operations', 'test_builtin', 'test_exceptions', 'test_types', 'test_unittest', 'test_doctest', 'test_doctest2']
NOTTESTS = ['test_support', 'test_future1', 'test_future2', 'test_future3']
_expectations = {'win32': '\n        test__locale\n        test_applesingle\n        test_al\n        test_bsddb185\n        test_bsddb3\n        test_cd\n        test_cl\n        test_commands\n        test_crypt\n        test_curses\n        test_dbm\n        test_dl\n        test_fcntl\n        test_fork1\n        test_gdbm\n        test_gl\n        test_grp\n        test_imgfile\n        test_ioctl\n        test_largefile\n        test_linuxaudiodev\n        test_mhlib\n        test_nis\n        test_openpty\n        test_ossaudiodev\n        test_poll\n        test_posix\n        test_pty\n        test_pwd\n        test_resource\n        test_signal\n        test_sunaudiodev\n        test_threadsignals\n        test_timing\n        test_wait3\n        test_wait4\n        ', 'linux2': '\n        test_al\n        test_applesingle\n        test_bsddb185\n        test_cd\n        test_cl\n        test_curses\n        test_dl\n        test_gl\n        test_imgfile\n        test_largefile\n        test_linuxaudiodev\n        test_nis\n        test_ntpath\n        test_ossaudiodev\n        test_sqlite\n        test_startfile\n        test_sunaudiodev\n        ', 'mac': '\n        test_al\n        test_atexit\n        test_bsddb\n        test_bsddb185\n        test_bsddb3\n        test_bz2\n        test_cd\n        test_cl\n        test_commands\n        test_crypt\n        test_curses\n        test_dbm\n        test_dl\n        test_fcntl\n        test_fork1\n        test_gl\n        test_grp\n        test_ioctl\n        test_imgfile\n        test_largefile\n        test_linuxaudiodev\n        test_locale\n        test_mmap\n        test_nis\n        test_ntpath\n        test_openpty\n        test_ossaudiodev\n        test_poll\n        test_popen\n        test_popen2\n        test_posix\n        test_pty\n        test_pwd\n        test_resource\n        test_signal\n        test_sqlite\n        test_startfile\n        test_sunaudiodev\n        test_sundry\n        test_tarfile\n        test_timing\n        ', 'unixware7': '\n        test_al\n        test_applesingle\n        test_bsddb\n        test_bsddb185\n        test_cd\n        test_cl\n        test_dl\n        test_gl\n        test_imgfile\n        test_largefile\n        test_linuxaudiodev\n        test_minidom\n        test_nis\n        test_ntpath\n        test_openpty\n        test_pyexpat\n        test_sax\n        test_startfile\n        test_sqlite\n        test_sunaudiodev\n        test_sundry\n        ', 'openunix8': '\n        test_al\n        test_applesingle\n        test_bsddb\n        test_bsddb185\n        test_cd\n        test_cl\n        test_dl\n        test_gl\n        test_imgfile\n        test_largefile\n        test_linuxaudiodev\n        test_minidom\n        test_nis\n        test_ntpath\n        test_openpty\n        test_pyexpat\n        test_sax\n        test_sqlite\n        test_startfile\n        test_sunaudiodev\n        test_sundry\n        ', 'sco_sv3': '\n        test_al\n        test_applesingle\n        test_asynchat\n        test_bsddb\n        test_bsddb185\n        test_cd\n        test_cl\n        test_dl\n        test_fork1\n        test_gettext\n        test_gl\n        test_imgfile\n        test_largefile\n        test_linuxaudiodev\n        test_locale\n        test_minidom\n        test_nis\n        test_ntpath\n        test_openpty\n        test_pyexpat\n        test_queue\n        test_sax\n        test_sqlite\n        test_startfile\n        test_sunaudiodev\n        test_sundry\n        test_thread\n        test_threaded_import\n        test_threadedtempfile\n        test_threading\n        ', 'riscos': '\n        test_al\n        test_applesingle\n        test_asynchat\n        test_atexit\n        test_bsddb\n        test_bsddb185\n        test_bsddb3\n        test_cd\n        test_cl\n        test_commands\n        test_crypt\n        test_dbm\n        test_dl\n        test_fcntl\n        test_fork1\n        test_gdbm\n        test_gl\n        test_grp\n        test_imgfile\n        test_largefile\n        test_linuxaudiodev\n        test_locale\n        test_mmap\n        test_nis\n        test_ntpath\n        test_openpty\n        test_poll\n        test_popen2\n        test_pty\n        test_pwd\n        test_strop\n        test_sqlite\n        test_startfile\n        test_sunaudiodev\n        test_sundry\n        test_thread\n        test_threaded_import\n        test_threadedtempfile\n        test_threading\n        test_timing\n        ', 'darwin': '\n        test__locale\n        test_al\n        test_bsddb\n        test_bsddb3\n        test_cd\n        test_cl\n        test_curses\n        test_gdbm\n        test_gl\n        test_imgfile\n        test_largefile\n        test_linuxaudiodev\n        test_locale\n        test_minidom\n        test_nis\n        test_ntpath\n        test_ossaudiodev\n        test_poll\n        test_sqlite\n        test_startfile\n        test_sunaudiodev\n        ', 'sunos5': '\n        test_al\n        test_applesingle\n        test_bsddb\n        test_bsddb185\n        test_cd\n        test_cl\n        test_curses\n        test_dbm\n        test_gdbm\n        test_gl\n        test_gzip\n        test_imgfile\n        test_linuxaudiodev\n        test_openpty\n        test_sqlite\n        test_startfile\n        test_zipfile\n        test_zlib\n        ', 'hp-ux11': '\n        test_al\n        test_applesingle\n        test_bsddb\n        test_bsddb185\n        test_cd\n        test_cl\n        test_curses\n        test_dl\n        test_gdbm\n        test_gl\n        test_gzip\n        test_imgfile\n        test_largefile\n        test_linuxaudiodev\n        test_locale\n        test_minidom\n        test_nis\n        test_ntpath\n        test_openpty\n        test_pyexpat\n        test_sax\n        test_sqlite\n        test_startfile\n        test_sunaudiodev\n        test_zipfile\n        test_zlib\n        ', 'atheos': '\n        test_al\n        test_applesingle\n        test_bsddb185\n        test_cd\n        test_cl\n        test_curses\n        test_dl\n        test_gdbm\n        test_gl\n        test_imgfile\n        test_largefile\n        test_linuxaudiodev\n        test_locale\n        test_mhlib\n        test_mmap\n        test_nis\n        test_poll\n        test_popen2\n        test_resource\n        test_sqlite\n        test_startfile\n        test_sunaudiodev\n        ', 'cygwin': '\n        test_al\n        test_applesingle\n        test_bsddb185\n        test_bsddb3\n        test_cd\n        test_cl\n        test_curses\n        test_dbm\n        test_gl\n        test_imgfile\n        test_ioctl\n        test_largefile\n        test_linuxaudiodev\n        test_locale\n        test_nis\n        test_ossaudiodev\n        test_socketserver\n        test_sqlite\n        test_sunaudiodev\n        ', 'os2emx': '\n        test_al\n        test_applesingle\n        test_audioop\n        test_bsddb185\n        test_bsddb3\n        test_cd\n        test_cl\n        test_commands\n        test_curses\n        test_dl\n        test_gl\n        test_imgfile\n        test_largefile\n        test_linuxaudiodev\n        test_mhlib\n        test_mmap\n        test_nis\n        test_openpty\n        test_ossaudiodev\n        test_pty\n        test_resource\n        test_signal\n        test_sqlite\n        test_startfile\n        test_sunaudiodev\n        ', 'freebsd4': '\n        test_aepack\n        test_al\n        test_applesingle\n        test_bsddb\n        test_bsddb3\n        test_cd\n        test_cl\n        test_gdbm\n        test_gl\n        test_imgfile\n        test_linuxaudiodev\n        test_locale\n        test_macfs\n        test_macostools\n        test_nis\n        test_ossaudiodev\n        test_pep277\n        test_plistlib\n        test_pty\n        test_scriptpackages\n        test_socket_ssl\n        test_socketserver\n        test_sqlite\n        test_startfile\n        test_sunaudiodev\n        test_tcl\n        test_timeout\n        test_unicode_file\n        test_urllibnet\n        test_winreg\n        test_winsound\n        ', 'aix5': '\n        test_aepack\n        test_al\n        test_applesingle\n        test_bsddb\n        test_bsddb185\n        test_bsddb3\n        test_bz2\n        test_cd\n        test_cl\n        test_dl\n        test_gdbm\n        test_gl\n        test_gzip\n        test_imgfile\n        test_linuxaudiodev\n        test_macfs\n        test_macostools\n        test_nis\n        test_ossaudiodev\n        test_sqlite\n        test_startfile\n        test_sunaudiodev\n        test_tcl\n        test_winreg\n        test_winsound\n        test_zipimport\n        test_zlib\n        ', 'openbsd3': '\n        test_aepack\n        test_al\n        test_applesingle\n        test_bsddb\n        test_bsddb3\n        test_cd\n        test_cl\n        test_ctypes\n        test_dl\n        test_gdbm\n        test_gl\n        test_imgfile\n        test_linuxaudiodev\n        test_locale\n        test_macfs\n        test_macostools\n        test_nis\n        test_normalization\n        test_ossaudiodev\n        test_pep277\n        test_plistlib\n        test_scriptpackages\n        test_tcl\n        test_sqlite\n        test_startfile\n        test_sunaudiodev\n        test_unicode_file\n        test_winreg\n        test_winsound\n        ', 'netbsd3': '\n        test_aepack\n        test_al\n        test_applesingle\n        test_bsddb\n        test_bsddb185\n        test_bsddb3\n        test_cd\n        test_cl\n        test_ctypes\n        test_curses\n        test_dl\n        test_gdbm\n        test_gl\n        test_imgfile\n        test_linuxaudiodev\n        test_locale\n        test_macfs\n        test_macostools\n        test_nis\n        test_ossaudiodev\n        test_pep277\n        test_sqlite\n        test_startfile\n        test_sunaudiodev\n        test_tcl\n        test_unicode_file\n        test_winreg\n        test_winsound\n        ', 'java': '\n        test__locale\n        test__rawffi\n        test_aepack\n        test_al\n        test_applesingle\n        test_audioop\n        test_bsddb\n        test_bsddb185\n        test_bsddb3\n        test_bz2\n        test_cProfile\n        test_capi\n        test_cd\n        test_cl\n        test_commands\n        test_crypt\n        test_ctypes\n        test_curses\n        test_dbm\n        test_dl\n        test_email_codecs\n        test_fcntl\n        test_fork1\n        test_gdbm\n        test_getargs2\n        test_gl\n        test_hotshot\n        test_imageop\n        test_imgfile\n        test_ioctl\n        test_largefile\n        test_linuxaudiodev\n        test_locale\n        test_longexp\n        test_macfs\n        test_macostools\n        test_mmap\n        test_nis\n        test_normalization\n        test_openpty\n        test_ossaudiodev\n        test_parser\n        test_plistlib\n        test_poll\n        test_pty\n        test_resource\n        test_rgbimg\n        test_scriptpackages\n        test_socket_ssl\n        test_socketserver\n        test_sqlite\n        test_startfile\n        test_strop\n        test_structmembers\n        test_sunaudiodev\n        test_sundry\n        test_symtable\n        test_tcl\n        test_timeout\n        test_unicode_file\n        test_wait3\n        test_wait4\n        test_wave\n        test_winreg\n        test_winsound\n        test_zipfile64\n        ', }
_expectations['freebsd5'] = _expectations['freebsd4']
_expectations['freebsd6'] = _expectations['freebsd4']
_expectations['freebsd7'] = _expectations['freebsd4']
_failures = {'java': '\n        test_codecencodings_cn\n        test_codecencodings_hk\n        test_codecencodings_jp\n        test_codecencodings_kr\n        test_codecencodings_tw\n        test_codecmaps_cn\n        test_codecmaps_hk\n        test_codecmaps_jp\n        test_codecmaps_kr\n        test_codecmaps_tw\n        test_compiler\n        test_dis\n        test_dummy_threading\n        test_eof\n        test_frozen\n        test_gc\n        test_import\n        test_iterlen\n        test_multibytecodec\n        test_multibytecodec_support\n        test_peepholer\n        test_pyclbr\n        test_pyexpat\n        test_stringprep\n        test_threadsignals\n        test_transformer\n        test_ucn\n        test_unicodedata\n        test_zipimport\n        ', }
_platform = sys.platform
if (_platform[:4] == 'java'):
    _platform = 'java'
    if (os._name == 'nt'):
        _failures['java'] += '\ntest_mailbox'
        if (' ' in sys.executable):
            _failures['java'] += '\ntest_popen'
if (__name__ == '__main__'):
    mydir = os.path.abspath(os.path.normpath(os.path.dirname(sys.argv[0])))
    i = pathlen = len(sys.path)
    while (i >= 0):
        i -= 1
        if (os.path.abspath(os.path.normpath(sys.path[i])) == mydir):
            del sys.path[i]
    if (len(sys.path) == pathlen):
        print ('Could not find %r in sys.path to remove it' % mydir)
    main()
