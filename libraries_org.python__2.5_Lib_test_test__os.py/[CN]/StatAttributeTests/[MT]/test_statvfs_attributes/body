def test_statvfs_attributes(self):
    if (not hasattr(os, 'statvfs')):
        return
    import statvfs
    try:
        result = os.statvfs(self.fname)
    except OSError as e:
        import errno
        if (e.errno == errno.ENOSYS):
            return
    self.assertEquals(result.f_bfree, result[statvfs.F_BFREE])
    members = dir(result)
    for name in dir(statvfs):
        if (name[:2] == 'F_'):
            attr = name.lower()
            self.assertEquals(getattr(result, attr), result[getattr(statvfs, name)])
            self.assert_((attr in members))
    try:
        result.f_bfree = 1
        self.fail('No exception thrown')
    except TypeError:
        pass
    try:
        result.parrot = 1
        self.fail('No exception thrown')
    except AttributeError:
        pass
    try:
        result2 = os.statvfs_result((10,))
        self.fail('No exception thrown')
    except TypeError:
        pass
    try:
        result2 = os.statvfs_result((0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))
    except TypeError:
        pass
