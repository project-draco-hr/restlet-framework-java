{
  HttpServerHelper result=null;
  final Component component=getComponent();
  if (component != null) {
    final Server server=new Server(component.getContext().createChildContext(),(List<Protocol>)null,this.getLocalAddr(request),this.getLocalPort(request),component);
    result=new HttpServerHelper(server);
    final String uriPattern=this.getContextPath(request) + request.getServletPath();
    if (isDefaultComponent()) {
      if (this.application != null) {
        log("[Restlet] Attaching application: " + this.application + " to URI: "+ uriPattern);
        component.getDefaultHost().attach(uriPattern,this.application);
      }
    }
 else {
      final String autoWire=getInitParameter(AUTO_WIRE_KEY,AUTO_WIRE_KEY_DEFAULT);
      if (AUTO_WIRE_KEY_DEFAULT.equalsIgnoreCase(autoWire)) {
        boolean addContextPath=false;
        boolean addFullServletPath=false;
        if (component.getDefaultHost().getRoutes().isEmpty()) {
          addFullServletPath=component.getDefaultHost().getDefaultRoute() != null;
        }
 else {
          for (          final Route route : component.getDefaultHost().getRoutes()) {
            if (route.getTemplate().getPattern() == null) {
              addFullServletPath=true;
              continue;
            }
            if (!route.getTemplate().getPattern().startsWith(uriPattern)) {
              if (!route.getTemplate().getPattern().startsWith(request.getServletPath())) {
                addFullServletPath=true;
              }
 else {
                addContextPath=true;
                break;
              }
            }
          }
        }
        if (!addContextPath) {
          for (          final VirtualHost virtualHost : component.getHosts()) {
            if (virtualHost.getRoutes().isEmpty()) {
              addFullServletPath=virtualHost.getDefaultRoute() != null;
            }
 else {
              for (              final Route route : virtualHost.getRoutes()) {
                if (route.getTemplate().getPattern() == null) {
                  addFullServletPath=true;
                  continue;
                }
                if (!route.getTemplate().getPattern().startsWith(uriPattern)) {
                  if (!route.getTemplate().getPattern().startsWith(request.getServletPath())) {
                    addFullServletPath=true;
                  }
 else {
                    addContextPath=true;
                    break;
                  }
                }
              }
            }
            if (addContextPath) {
              break;
            }
          }
        }
        if (addContextPath || addFullServletPath) {
          String offsetPath=null;
          if (addContextPath) {
            offsetPath=this.getContextPath(request);
          }
 else {
            offsetPath=uriPattern;
          }
          Route defaultRoute=component.getDefaultHost().getDefaultRoute();
          if (defaultRoute != null) {
            defaultRoute.getTemplate().setPattern(offsetPath + defaultRoute.getTemplate().getPattern());
            log("[Restlet] Attaching restlet: " + defaultRoute.getNext() + " to URI: "+ offsetPath+ defaultRoute.getTemplate().getPattern());
          }
          for (          final Route route : component.getDefaultHost().getRoutes()) {
            log("[Restlet] Attaching restlet: " + route.getNext() + " to URI: "+ offsetPath+ route.getTemplate().getPattern());
            route.getTemplate().setPattern(offsetPath + route.getTemplate().getPattern());
          }
          for (          final VirtualHost virtualHost : component.getHosts()) {
            defaultRoute=virtualHost.getDefaultRoute();
            if (defaultRoute != null) {
              defaultRoute.getTemplate().setPattern(offsetPath + defaultRoute.getTemplate().getPattern());
              log("[Restlet] Attaching restlet: " + defaultRoute.getNext() + " to URI: "+ offsetPath+ defaultRoute.getTemplate().getPattern());
            }
            for (            final Route route : virtualHost.getRoutes()) {
              log("[Restlet] Attaching restlet: " + route.getNext() + " to URI: "+ offsetPath+ route.getTemplate().getPattern());
              route.getTemplate().setPattern(offsetPath + route.getTemplate().getPattern());
            }
          }
        }
      }
    }
  }
  return result;
}
