def _spawn_posix(cmd, search_path=1, verbose=0, dry_run=0):
    log.info(string.join(cmd, ' '))
    if dry_run:
        return
    exec_fn = ((search_path and os.execvp) or os.execv)
    pid = os.fork()
    if (pid == 0):
        try:
            exec_fn(cmd[0], cmd)
        except OSError as e:
            sys.stderr.write(('unable to execute %s: %s\n' % (cmd[0], e.strerror)))
            os._exit(1)
        sys.stderr.write(('unable to execute %s for unknown reasons' % cmd[0]))
        os._exit(1)
    else:
        while 1:
            try:
                (pid, status) = os.waitpid(pid, 0)
            except OSError as exc:
                import errno
                if (exc.errno == errno.EINTR):
                    continue
                raise DistutilsExecError, ("command '%s' failed: %s" % (cmd[0], exc[(-1)]))
            if os.WIFSIGNALED(status):
                raise DistutilsExecError, ("command '%s' terminated by signal %d" % (cmd[0], os.WTERMSIG(status)))
            elif os.WIFEXITED(status):
                exit_status = os.WEXITSTATUS(status)
                if (exit_status == 0):
                    return
                else:
                    raise DistutilsExecError, ("command '%s' failed with exit status %d" % (cmd[0], exit_status))
            elif os.WIFSTOPPED(status):
                continue
            else:
                raise DistutilsExecError, ("unknown error executing '%s': termination status %d" % (cmd[0], status))
