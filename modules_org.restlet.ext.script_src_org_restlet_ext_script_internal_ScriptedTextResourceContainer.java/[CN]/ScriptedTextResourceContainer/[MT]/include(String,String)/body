{
  ScriptSource.ScriptDescriptor<EmbeddedScript> scriptDescriptor=this.resource.getScriptSource().getScriptDescriptor(name);
  EmbeddedScript script=scriptDescriptor.getScript();
  if (script == null) {
    String text=scriptDescriptor.getText();
    if (scriptEngineName != null) {
      text=EmbeddedScript.delimiter1Start + scriptEngineName + " "+ text+ EmbeddedScript.delimiter1End;
    }
    script=new EmbeddedScript(text,this.resource.getScriptEngineManager(),this.resource.getDefaultScriptEngineName(),this.resource.isAllowCompilation());
    scriptDescriptor.setScript(script);
  }
  String trivial=script.getTrivial();
  if (trivial != null) {
    if (getWriter() != null) {
      getWriter().write(trivial);
    }
    return new StringRepresentation(trivial,getMediaType(),getLanguage(),getCharacterSet());
  }
  int startPosition=0;
  if (!isStreaming()) {
    if (getWriter() == null) {
      StringWriter stringWriter=new StringWriter();
      this.buffer=stringWriter.getBuffer();
      setWriter(new BufferedWriter(stringWriter));
    }
 else {
      getWriter().flush();
      startPosition=this.buffer.length();
    }
  }
  try {
    if (script.run(getWriter(),getErrorWriter(),this.scriptEngines,this.scriptContextController,!isStreaming())) {
      if (this.startStreaming) {
        this.startStreaming=false;
        return new ScriptedTextStreamingRepresentation(this,script);
      }
      if (isStreaming()) {
        return null;
      }
 else {
        getWriter().flush();
        RepresentableString string=new RepresentableString(this.buffer.substring(startPosition),getMediaType(),getLanguage(),getCharacterSet());
        this.cache.put(name,string);
        if (startPosition == 0) {
          return string.represent();
        }
 else {
          return new StringRepresentation(this.buffer.toString(),getMediaType(),getLanguage(),getCharacterSet());
        }
      }
    }
 else {
      RepresentableString string=this.cache.get(name);
      if (string != null) {
        if (getWriter() != null) {
          getWriter().write(string.getString());
        }
        return string.represent();
      }
 else {
        return null;
      }
    }
  }
 catch (  ScriptException x) {
    if (this.startStreaming) {
      this.startStreaming=false;
      return new ScriptedTextStreamingRepresentation(this,script);
    }
 else {
      throw x;
    }
  }
}
