{
  Writer writer=getWriter();
  boolean isStreaming=isStreaming();
  ScriptSource.ScriptDescriptor<EmbeddedScript> scriptDescriptor=this.resource.getScriptSource().getScriptDescriptor(name);
  EmbeddedScript script=scriptDescriptor.getScript();
  if (script == null) {
    String text=scriptDescriptor.getText();
    if (scriptEngineName != null) {
      text=EmbeddedScript.DEFAULT_DELIMITER1_START + scriptEngineName + " "+ text+ EmbeddedScript.DEFAULT_DELIMITER1_END;
    }
    script=new EmbeddedScript(text,this.resource.getScriptEngineManager(),this.resource.getDefaultScriptEngineName(),this.resource.isAllowCompilation(),this.resource.getScriptSource());
    scriptDescriptor.setScript(script);
  }
  String trivial=script.getTrivial();
  if (trivial != null) {
    if (writer != null) {
      writer.write(trivial);
    }
    return new StringRepresentation(trivial,getMediaType(),getLanguage(),getCharacterSet());
  }
  int startPosition=0;
  if (!isStreaming) {
    if (writer == null) {
      StringWriter stringWriter=new StringWriter();
      this.buffer=stringWriter.getBuffer();
      writer=new BufferedWriter(stringWriter);
      setWriter(writer);
    }
 else {
      writer.flush();
      startPosition=this.buffer.length();
    }
  }
  try {
    if (script.run(writer,getErrorWriter(),this.scriptEngines,this.scriptContextController,!isStreaming)) {
      if (this.startStreaming) {
        this.startStreaming=false;
        return new ScriptedTextStreamingRepresentation(this,this.scriptEngines,this.scriptContextController,script);
      }
      if (isStreaming) {
        return null;
      }
 else {
        writer.flush();
        RepresentableString string=new RepresentableString(this.buffer.substring(startPosition),getMediaType(),getLanguage(),getCharacterSet());
        this.cache.put(name,string);
        if (startPosition == 0) {
          return string.represent();
        }
 else {
          return new StringRepresentation(this.buffer.toString(),getMediaType(),getLanguage(),getCharacterSet());
        }
      }
    }
 else {
      RepresentableString string=this.cache.get(name);
      if (string != null) {
        if (writer != null) {
          writer.write(string.getString());
        }
        return string.represent();
      }
 else {
        return null;
      }
    }
  }
 catch (  ScriptException x) {
    if (this.startStreaming) {
      this.startStreaming=false;
      return new ScriptedTextStreamingRepresentation(this,this.scriptEngines,this.scriptContextController,script);
    }
 else {
      throw x;
    }
  }
}
