def test_proto(self):
    build_none = (pickle.NONE + pickle.STOP)
    for proto in protocols:
        expected = build_none
        if (proto >= 2):
            expected = ((pickle.PROTO + chr(proto)) + expected)
        p = self.dumps(None, proto)
        self.assertEqual(p, expected)
    oob = (protocols[(-1)] + 1)
    badpickle = ((pickle.PROTO + chr(oob)) + build_none)
    try:
        self.loads(badpickle)
    except ValueError as detail:
        self.failUnless(str(detail).startswith('unsupported pickle protocol'))
    else:
        self.fail('expected bad protocol number to raise ValueError')
