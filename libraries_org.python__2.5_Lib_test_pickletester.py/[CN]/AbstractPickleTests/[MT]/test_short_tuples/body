def test_short_tuples(self):
    expected_opcode = {(0, 0): pickle.TUPLE, (0, 1): pickle.TUPLE, (0, 2): pickle.TUPLE, (0, 3): pickle.TUPLE, (0, 4): pickle.TUPLE, (1, 0): pickle.EMPTY_TUPLE, (1, 1): pickle.TUPLE, (1, 2): pickle.TUPLE, (1, 3): pickle.TUPLE, (1, 4): pickle.TUPLE, (2, 0): pickle.EMPTY_TUPLE, (2, 1): pickle.TUPLE1, (2, 2): pickle.TUPLE2, (2, 3): pickle.TUPLE3, (2, 4): pickle.TUPLE, }
    a = ()
    b = (1,)
    c = (1, 2)
    d = (1, 2, 3)
    e = (1, 2, 3, 4)
    for proto in protocols:
        for x in (a, b, c, d, e):
            s = self.dumps(x, proto)
            y = self.loads(s)
            self.assertEqual(x, y, (proto, x, s, y))
            expected = expected_opcode[(proto, len(x))]
            self.assertEqual(opcode_in_pickle(expected, s), True)
