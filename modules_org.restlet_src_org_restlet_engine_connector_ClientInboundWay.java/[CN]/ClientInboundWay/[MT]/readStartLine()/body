{
  String version=null;
  int statusCode=-1;
  String reasonPhrase=null;
  int i=0;
  int start=0;
  int size=getLineBuilder().length();
  char next;
  if (size == 0) {
  }
 else {
    for (i=start; (version == null) && (i < size); i++) {
      next=getLineBuilder().charAt(i);
      if (HeaderUtils.isSpace(next)) {
        version=getLineBuilder().substring(start,i);
        start=i + 1;
      }
    }
    for (i=start; (statusCode == -1) && (i < size); i++) {
      next=getLineBuilder().charAt(i);
      if (HeaderUtils.isSpace(next)) {
        try {
          statusCode=Integer.parseInt(getLineBuilder().substring(start,i));
        }
 catch (        NumberFormatException e) {
          throw new IOException("Unable to parse the status code. Non numeric value: " + getLineBuilder().substring(start,i).toString());
        }
        start=i + 1;
      }
    }
    if (statusCode == -1) {
      throw new IOException("Unable to parse the status code. End of line reached too early.");
    }
    for (i=start; (reasonPhrase == null) && (i < size); i++) {
      next=getLineBuilder().charAt(i);
    }
    if (i == size) {
      reasonPhrase=getLineBuilder().substring(start,i);
      start=i + 1;
    }
    if (reasonPhrase == null) {
      throw new IOException("Unable to parse the reason phrase. End of line reached too early.");
    }
    Response finalResponse=getMessages().peek();
    Response response=null;
    Status status=createStatus(statusCode);
    if (status.isInformational()) {
      response=getHelper().createResponse(finalResponse.getRequest());
    }
 else {
      response=finalResponse;
    }
    response.setStatus(status,reasonPhrase);
    response.getServerInfo().setAddress(getConnection().getSocket().getLocalAddress().toString());
    response.getServerInfo().setAgent(Engine.VERSION_HEADER);
    response.getServerInfo().setPort(getConnection().getSocket().getPort());
    setMessage(response);
    setMessageState(MessageState.HEADERS);
    clearLineBuilder();
  }
}
