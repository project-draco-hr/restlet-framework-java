{
  getContentHandler().step();
  do {
    getContentHandler().consumeWhiteSpaces();
switch (getContentHandler().getChar()) {
case '(':
      lexicalUnits.add(new ListToken(getContentHandler(),getContext()));
    break;
case '<':
  if (getContentHandler().step() == '=') {
    lexicalUnits.add(new Token("<="));
    getContentHandler().step();
    getContentHandler().discard();
  }
 else {
    getContentHandler().stepBack();
    lexicalUnits.add(new UriToken(getContentHandler(),getContext()));
  }
break;
case '_':
lexicalUnits.add(new BlankNodeToken(getContentHandler().parseToken()));
break;
case '"':
lexicalUnits.add(new StringToken(getContentHandler(),getContext()));
break;
case '[':
lexicalUnits.add(new BlankNodeToken(getContentHandler(),getContext()));
break;
case '{':
lexicalUnits.add(new FormulaToken(getContentHandler(),getContext()));
break;
case ']':
break;
case RdfN3ContentHandler.EOF:
break;
default :
lexicalUnits.add(new Token(getContentHandler(),getContext()));
break;
}
}
 while (getContentHandler().getChar() != RdfN3ContentHandler.EOF && getContentHandler().getChar() != ']');
if (getContentHandler().getChar() == ']') {
getContentHandler().step();
}
}
