{
  Status result=null;
  if ((this.match != null) && !this.match.isEmpty()) {
    boolean matched=false;
    boolean failed=false;
    final boolean all=getMatch().get(0).equals(Tag.ALL);
    if (entityExists) {
      if (!all && (tag != null)) {
        Tag matchTag;
        for (final Iterator<Tag> iter=getMatch().iterator(); !matched && iter.hasNext(); ) {
          matchTag=iter.next();
          matched=matchTag.equals(tag,false);
        }
      }
 else {
        matched=all;
      }
    }
 else {
      failed=all;
    }
    failed=failed || !matched;
    if (failed) {
      result=Status.CLIENT_ERROR_PRECONDITION_FAILED;
    }
  }
  if ((result == null) && (this.noneMatch != null) && !this.noneMatch.isEmpty()) {
    boolean matched=false;
    if (entityExists) {
      if (tag != null) {
        Tag noneMatchTag;
        for (final Iterator<Tag> iter=getNoneMatch().iterator(); !matched && iter.hasNext(); ) {
          noneMatchTag=iter.next();
          matched=noneMatchTag.equals(tag,(Method.GET.equals(method) || Method.HEAD.equals(method)));
        }
        if (matched) {
          final Date modifiedSince=getModifiedSince();
          final boolean isModifiedSince=(modifiedSince != null) && (DateUtils.after(new Date(),modifiedSince) || (modificationDate == null) || DateUtils.after(modifiedSince,modificationDate));
          matched=!isModifiedSince;
        }
      }
    }
 else {
      matched=getNoneMatch().get(0).equals(Tag.ALL);
    }
    if (matched) {
      if (Method.GET.equals(method) || Method.HEAD.equals(method)) {
        result=Status.REDIRECTION_NOT_MODIFIED;
      }
 else {
        result=Status.CLIENT_ERROR_PRECONDITION_FAILED;
      }
    }
  }
  if ((result == null) && (getModifiedSince() != null)) {
    final Date modifiedSince=getModifiedSince();
    final boolean isModifiedSince=(DateUtils.after(new Date(),modifiedSince) || (modificationDate == null) || DateUtils.after(modifiedSince,modificationDate));
    if (!isModifiedSince) {
      if (Method.GET.equals(method) || Method.HEAD.equals(method)) {
        result=Status.REDIRECTION_NOT_MODIFIED;
      }
 else {
        result=Status.CLIENT_ERROR_PRECONDITION_FAILED;
      }
    }
  }
  if ((result == null) && (getUnmodifiedSince() != null)) {
    final Date unModifiedSince=getUnmodifiedSince();
    final boolean isUnModifiedSince=((unModifiedSince == null) || (modificationDate == null) || DateUtils.after(modificationDate,unModifiedSince));
    if (!isUnModifiedSince) {
      result=Status.CLIENT_ERROR_PRECONDITION_FAILED;
    }
  }
  return result;
}
