{
  Representation result=null;
  if (converterService != null && connegService != null && metadataService != null) {
    Object representationObject=null;
    Throwable cause=throwable != null ? throwable : status.getThrowable();
    if (cause != null) {
      org.restlet.engine.resource.StatusAnnotationInfo sai=org.restlet.engine.resource.AnnotationUtils.getInstance().getStatusAnnotationInfo(cause.getClass());
      if (sai != null && sai.isSerializable()) {
        try {
          representationObject=ThrowableSerializer.serializeToMap(cause);
        }
 catch (        Exception e) {
          Context.getCurrentLogger().log(Level.WARNING,"Could not serialize throwable class " + cause.getClass(),e);
        }
      }
    }
    if (representationObject == null) {
      representationObject=new StatusRepresentation(status);
    }
    List<VariantInfo> variants=ConverterUtils.getVariants(representationObject.getClass(),null);
    if (!variants.contains(VARIANT_HTML)) {
      variants.add(VARIANT_HTML);
    }
    Variant variant=connegService.getPreferredVariant(variants,request,metadataService);
    try {
      result=converterService.toRepresentation(representationObject,variant);
    }
 catch (    IOException e) {
      throw new RuntimeException(e);
    }
  }
  return result;
}
