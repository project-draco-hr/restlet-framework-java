{
  Representation result=null;
  if (converterService != null && connegService != null && metadataService != null) {
    Object representationObject=null;
    Throwable cause=status.getThrowable();
    if (cause != null) {
      org.restlet.engine.resource.ThrowableAnnotationInfo sai=org.restlet.engine.resource.AnnotationUtils.getInstance().getThrowableAnnotationInfo(cause.getClass());
      if (sai != null && sai.isSerializable()) {
        representationObject=cause;
      }
    }
    try {
      if (representationObject == null) {
        representationObject=new StatusInfo(status);
      }
      List<org.restlet.engine.resource.VariantInfo> variants=org.restlet.engine.converter.ConverterUtils.getVariants(representationObject.getClass(),null);
      if (variants == null) {
        variants=new ArrayList<>();
      }
      if (!variants.contains(VARIANT_HTML)) {
        variants.add(VARIANT_HTML);
      }
      Variant variant=connegService.getPreferredVariant(variants,request,metadataService);
      result=converterService.toRepresentation(representationObject,variant);
    }
 catch (    Exception e) {
      Context.getCurrentLogger().log(Level.WARNING,"Could not serialize throwable class " + cause.getClass(),e);
    }
  }
  return result;
}
