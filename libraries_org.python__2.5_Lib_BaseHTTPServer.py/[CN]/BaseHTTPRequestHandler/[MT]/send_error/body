def send_error(self, code, message=None):
    'Send and log an error reply.\n\n        Arguments are the error code, and a detailed message.\n        The detailed message defaults to the short entry matching the\n        response code.\n\n        This sends an error response (so it must be called before any\n        output has been generated), logs the error, and finally sends\n        a piece of HTML explaining the error to the user.\n\n        '
    try:
        (short, long) = self.responses[code]
    except KeyError:
        (short, long) = ('???', '???')
    if (message is None):
        message = short
    explain = long
    self.log_error('code %d, message %s', code, message)
    content = (self.error_message_format % {'code': code, 'message': _quote_html(message), 'explain': explain, })
    self.send_response(code, message)
    self.send_header('Content-Type', 'text/html')
    self.send_header('Connection', 'close')
    self.end_headers()
    if ((self.command != 'HEAD') and (code >= 200) and (code not in (204, 304))):
        self.wfile.write(content)
