{
  if (getIoState() == IoState.WRITE_INTEREST) {
    setIoState(IoState.WRITING);
  }
 else   if (getIoState() == IoState.READ_INTEREST) {
    setIoState(IoState.READING);
  }
 else   if (getIoState() == IoState.CANCELING) {
    setIoState(IoState.CANCELLED);
  }
  try {
    Response message=getMessage();
    if (message != null) {
      while (getIoState() == IoState.WRITING) {
        if (isFilling()) {
          if (getMessageState() == MessageState.BODY) {
switch (getEntityType()) {
case ASYNC_CHANNEL:
              break;
case SYNC_CHANNEL:
            break;
case FILE_CHANNEL:
          break;
case STREAM:
        if (getByteBuffer().hasArray()) {
          byte[] byteArray=getByteBuffer().array();
          int available=getEntityStream().available();
          if (available > 0) {
            long entitySize=getMessage().getEntity().getSize();
            int result=getEntityStream().read(byteArray,getByteBuffer().position(),available);
            if (result > 0) {
              getByteBuffer().position(getByteBuffer().position() + result);
              setEntityIndex(getEntityIndex() + result);
            }
            if ((result == -1) || ((entitySize != -1) && (getEntityIndex() >= entitySize))) {
              setMessageState(MessageState.END);
            }
          }
 else {
          }
        }
 else {
          System.out.println("No underlying byte array for the NIO byte buffer!");
        }
      break;
  }
}
 else {
  if (getLineBuilder().length() == 0) {
    writeLine();
  }
  if (getLineBuilder().length() > 0) {
    int remaining=getByteBuffer().remaining();
    if (remaining >= getLineBuilder().length()) {
      getByteBuffer().put(StringUtils.getLatin1Bytes(getLineBuilder().toString()));
      getLineBuilder().delete(0,getLineBuilder().length());
    }
 else {
      getByteBuffer().put(StringUtils.getLatin1Bytes(getLineBuilder().substring(0,remaining)));
      getLineBuilder().delete(0,remaining);
    }
  }
}
}
 else {
getByteBuffer().flip();
int bytesWritten=getConnection().getSocketChannel().write(getByteBuffer());
if (bytesWritten == 0) {
  getByteBuffer().flip();
  setIoState(IoState.WRITE_INTEREST);
}
 else if (getByteBuffer().hasRemaining()) {
  getByteBuffer().compact();
}
 else if (getMessageState() == MessageState.END) {
  setIoState(IoState.IDLE);
}
 else {
}
}
}
}
}
 catch (Exception e) {
getLogger().log(Level.WARNING,"Error while writing an HTTP message: ",e.getMessage());
getLogger().log(Level.INFO,"Error while writing an HTTP message",e);
}
}
