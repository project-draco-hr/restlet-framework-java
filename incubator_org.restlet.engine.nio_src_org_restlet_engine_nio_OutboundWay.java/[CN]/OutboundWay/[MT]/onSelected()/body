{
  try {
    Response message=getMessage();
    if (message != null) {
      boolean canWrite=(getIoState() == IoState.WRITE_INTEREST);
      boolean filling=getByteBuffer().hasRemaining();
      while (canWrite) {
        if (filling) {
          if (getMessageState() == MessageState.BODY) {
          }
 else {
            if (getLineBuilder().length() == 0) {
              writeLine();
            }
            if (getLineBuilder().length() > 0) {
              int remaining=getByteBuffer().remaining();
              if (remaining >= getLineBuilder().length()) {
                getByteBuffer().put(StringUtils.getLatin1Bytes(getLineBuilder().toString()));
                getLineBuilder().delete(0,getLineBuilder().length());
              }
 else {
                getByteBuffer().put(StringUtils.getLatin1Bytes(getLineBuilder().substring(0,remaining)));
                getLineBuilder().delete(0,remaining);
              }
            }
          }
          canWrite=(getIoState() == IoState.WRITE_INTEREST);
          filling=(getMessageState() != MessageState.END) && getByteBuffer().hasRemaining();
        }
 else {
          getByteBuffer().flip();
          int bytesWritten=getConnection().getSocketChannel().write(getByteBuffer());
          if (bytesWritten == 0) {
            getByteBuffer().flip();
            canWrite=false;
          }
 else           if (getByteBuffer().hasRemaining()) {
            getByteBuffer().compact();
          }
 else {
          }
        }
      }
    }
  }
 catch (  Exception e) {
    getLogger().log(Level.WARNING,"Error while writing an HTTP message: ",e.getMessage());
    getLogger().log(Level.INFO,"Error while writing an HTTP message",e);
  }
}
