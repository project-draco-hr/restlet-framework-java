{
  final Map<String,String> agentAttributes=request.getClientInfo().getAgentAttributes();
  if (agentAttributes != null) {
    final URL userAgentPropertiesUrl=Engine.getClassLoader().getResource("org/restlet/service/accept.properties");
    if (userAgentPropertiesUrl != null) {
      final Form headers=(Form)request.getAttributes().get(HttpConstants.ATTRIBUTE_HEADERS);
      final String acceptOld=(headers != null) ? headers.getFirstValue(HttpConstants.HEADER_ACCEPT) : null;
      BufferedReader reader;
      try {
        reader=new BufferedReader(new InputStreamReader(userAgentPropertiesUrl.openStream(),CharacterSet.UTF_8.getName()));
        boolean processAcceptHeader=true;
        String line=reader.readLine();
        for (; line != null; line=reader.readLine()) {
          if (!line.startsWith("#")) {
            final String[] keyValue=line.split(":");
            if (keyValue.length == 2) {
              final String key=keyValue[0].trim();
              final String value=keyValue[1].trim();
              if ("acceptNew".equalsIgnoreCase(key)) {
                if (processAcceptHeader) {
                  final ClientInfo clientInfo=new ClientInfo();
                  PreferenceUtils.parseMediaTypes(value,clientInfo);
                  request.getClientInfo().setAcceptedMediaTypes(clientInfo.getAcceptedMediaTypes());
                  break;
                }
                processAcceptHeader=true;
              }
 else {
                if (processAcceptHeader) {
                  if ("acceptOld".equalsIgnoreCase(key) && !((value == null) || (value.length() == 0))) {
                    processAcceptHeader=value.equalsIgnoreCase(acceptOld);
                  }
 else {
                    final String attribute=agentAttributes.get(key);
                    processAcceptHeader=(attribute != null) && attribute.equalsIgnoreCase(value);
                  }
                }
              }
            }
          }
        }
        reader.close();
      }
 catch (      final IOException e) {
      }
    }
  }
}
