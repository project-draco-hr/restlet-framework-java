def native_select(read_fd_list, write_fd_list, outofband_fd_list, timeout=None):
    timeout = _calcselecttimeoutvalue(timeout)
    pobj = _poll_object_cache.get_poll_object()
    try:
        registered_for_read = {}
        for fd in read_fd_list:
            pobj.register(fd, POLLIN)
            registered_for_read[fd] = 1
        for fd in write_fd_list:
            if registered_for_read.has_key(fd):
                pobj.register(fd, (POLLIN | POLLOUT))
            else:
                pobj.register(fd, POLLOUT)
        results = pobj.poll(timeout)
        (read_ready_list, write_ready_list, oob_ready_list) = ([], [], [])
        for (fd, mask) in results:
            if (mask & POLLIN):
                read_ready_list.append(fd)
            if (mask & POLLOUT):
                write_ready_list.append(fd)
        return (read_ready_list, write_ready_list, oob_ready_list)
    finally:
        _poll_object_cache.release_poll_object(pobj)
