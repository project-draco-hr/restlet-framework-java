{
  WebApplicationException constructorWae=null;
  try {
    Constructor<?> constr=this.convertTo.getConstructor(String.class);
    return constr.newInstance(paramValue);
  }
 catch (  WebApplicationException wae) {
    constructorWae=wae;
  }
catch (  Exception e) {
  }
  Method valueOf;
  try {
    valueOf=this.convertTo.getMethod("valueOf",String.class);
  }
 catch (  SecurityException e) {
    throw ConvertParameterException.object(this.convertTo,paramValue,e);
  }
catch (  NoSuchMethodException e) {
    throw ConvertParameterException.object(this.convertTo,paramValue,e);
  }
  try {
    return valueOf.invoke(null,paramValue);
  }
 catch (  IllegalArgumentException e) {
    if (constructorWae != null)     throw constructorWae;
    throw ConvertParameterException.object(this.convertTo,paramValue,e);
  }
catch (  IllegalAccessException e) {
    if (constructorWae != null)     throw constructorWae;
    throw ConvertParameterException.object(this.convertTo,paramValue,e);
  }
catch (  InvocationTargetException ite) {
    if (constructorWae != null)     throw constructorWae;
    Throwable cause=ite.getCause();
    if (cause instanceof WebApplicationException)     throw (WebApplicationException)cause;
    if ((paramValue == null || paramValue.length() <= 0) && (ite.getCause() instanceof IllegalArgumentException)) {
      if (defaultValue == null)       return null;
 else {
        String dfv=defaultValue.value();
        return convertParamValueInner(dfv,null);
      }
    }
    throw ConvertParameterException.object(this.convertTo,paramValue,ite);
  }
}
