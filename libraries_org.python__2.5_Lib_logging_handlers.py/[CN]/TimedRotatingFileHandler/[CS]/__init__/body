def __init__(self, filename, when='h', interval=1, backupCount=0, encoding=None):
    BaseRotatingHandler.__init__(self, filename, 'a', encoding)
    self.when = string.upper(when)
    self.backupCount = backupCount
    currentTime = int(time.time())
    if (self.when == 'S'):
        self.interval = 1
        self.suffix = '%Y-%m-%d_%H-%M-%S'
    elif (self.when == 'M'):
        self.interval = 60
        self.suffix = '%Y-%m-%d_%H-%M'
    elif (self.when == 'H'):
        self.interval = (60 * 60)
        self.suffix = '%Y-%m-%d_%H'
    elif ((self.when == 'D') or (self.when == 'MIDNIGHT')):
        self.interval = ((60 * 60) * 24)
        self.suffix = '%Y-%m-%d'
    elif self.when.startswith('W'):
        self.interval = (((60 * 60) * 24) * 7)
        if (len(self.when) != 2):
            raise ValueError(('You must specify a day for weekly rollover from 0 to 6 (0 is Monday): %s' % self.when))
        if ((self.when[1] < '0') or (self.when[1] > '6')):
            raise ValueError(('Invalid day specified for weekly rollover: %s' % self.when))
        self.dayOfWeek = int(self.when[1])
        self.suffix = '%Y-%m-%d'
    else:
        raise ValueError(('Invalid rollover interval specified: %s' % self.when))
    self.interval = (self.interval * interval)
    self.rolloverAt = (currentTime + self.interval)
    if ((self.when == 'MIDNIGHT') or self.when.startswith('W')):
        t = time.localtime(currentTime)
        currentHour = t[3]
        currentMinute = t[4]
        currentSecond = t[5]
        r = (_MIDNIGHT - ((((currentHour * 60) + currentMinute) * 60) + currentSecond))
        self.rolloverAt = (currentTime + r)
        if when.startswith('W'):
            day = t[6]
            if (day != self.dayOfWeek):
                if (day < self.dayOfWeek):
                    daysToWait = (self.dayOfWeek - day)
                else:
                    daysToWait = (((6 - day) + self.dayOfWeek) + 1)
                self.rolloverAt = (self.rolloverAt + (daysToWait * ((60 * 60) * 24)))
