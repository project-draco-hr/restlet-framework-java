def doRollover(self):
    '\n        do a rollover; in this case, a date/time stamp is appended to the filename\n        when the rollover happens.  However, you want the file to be named for the\n        start of the interval, not the current time.  If there is a backup count,\n        then we have to get a list of matching filenames, sort them and remove\n        the one with the oldest suffix.\n        '
    self.stream.close()
    t = (self.rolloverAt - self.interval)
    timeTuple = time.localtime(t)
    dfn = ((self.baseFilename + '.') + time.strftime(self.suffix, timeTuple))
    if os.path.exists(dfn):
        os.remove(dfn)
    os.rename(self.baseFilename, dfn)
    if (self.backupCount > 0):
        s = glob.glob((self.baseFilename + '.20*'))
        if (len(s) > self.backupCount):
            s.sort()
            os.remove(s[0])
    if self.encoding:
        self.stream = codecs.open(self.baseFilename, 'w', self.encoding)
    else:
        self.stream = open(self.baseFilename, 'w')
    self.rolloverAt = (self.rolloverAt + self.interval)
