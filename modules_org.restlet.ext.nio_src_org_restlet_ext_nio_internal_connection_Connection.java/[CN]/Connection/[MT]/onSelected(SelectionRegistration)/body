{
  try {
    onActivity();
    if (getLogger().isLoggable(Level.FINER)) {
      String trace=null;
      if (isClientSide()) {
        trace="Client ";
      }
 else {
        trace="Server ";
      }
      getLogger().finer(trace + "connection (state | empty | registration): " + toString());
    }
    if (registration == null) {
      getLogger().warning("Connection with no registration selected: " + this);
    }
 else     if (registration.isReadable()) {
synchronized (getInboundWay().getBuffer().getLock()) {
        getInboundWay().getRegistration().onSelected(registration.getReadyOperations());
      }
    }
 else     if (registration.isWritable()) {
synchronized (getOutboundWay().getBuffer().getLock()) {
        getOutboundWay().getRegistration().onSelected(registration.getReadyOperations());
      }
    }
 else     if (registration.isConnectable()) {
      try {
        if (getSocketChannel().finishConnect()) {
          open();
        }
 else {
          onError("Unable to establish a connection to " + getSocketAddress(),null,Status.CONNECTOR_ERROR_CONNECTION);
        }
      }
 catch (      IOException e) {
        onError("Unable to establish a connection to " + getSocketAddress(),e,Status.CONNECTOR_ERROR_CONNECTION);
      }
    }
    boolean readyFound=false;
    do {
      readyFound=false;
synchronized (getInboundWay().getBuffer().getLock()) {
        if (getInboundWay().getIoState() == IoState.READY) {
          readyFound=true;
          if (getLogger().isLoggable(Level.FINEST)) {
            getLogger().finest("Entering into a connection READY loop");
          }
          getInboundWay().onSelected(getInboundWay().getRegistration());
        }
      }
synchronized (getOutboundWay().getBuffer().getLock()) {
        if (getOutboundWay().getIoState() == IoState.READY) {
          readyFound=true;
          if (getLogger().isLoggable(Level.FINEST)) {
            getLogger().finest("Entering into a connection READY loop");
          }
          getOutboundWay().onSelected(getOutboundWay().getRegistration());
        }
      }
    }
 while (readyFound);
  }
 catch (  Throwable t) {
    onError("Unexpected error detected. Closing the connection.",t,Status.CONNECTOR_ERROR_INTERNAL);
  }
}
