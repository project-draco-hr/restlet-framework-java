def translate_references(self, data, all=1):
    if (not self.__translate_attribute_references):
        return data
    i = 0
    while 1:
        res = amp.search(data, i)
        if (res is None):
            return data
        s = res.start(0)
        res = ref.match(data, s)
        if (res is None):
            self.syntax_error("bogus `&'")
            i = (s + 1)
            continue
        i = res.end(0)
        str = res.group(1)
        rescan = 0
        if (str[0] == '#'):
            if (str[1] == 'x'):
                str = chr(int(str[2:], 16))
            else:
                str = chr(int(str[1:]))
            if (data[(i - 1)] != ';'):
                self.syntax_error("`;' missing after char reference")
                i = (i - 1)
        elif all:
            if (str in self.entitydefs):
                str = self.entitydefs[str]
                rescan = 1
            elif (data[(i - 1)] != ';'):
                self.syntax_error("bogus `&'")
                i = (s + 1)
                continue
            else:
                self.syntax_error(("reference to unknown entity `&%s;'" % str))
                str = (('&' + str) + ';')
        elif (data[(i - 1)] != ';'):
            self.syntax_error("bogus `&'")
            i = (s + 1)
            continue
        data = ((data[:s] + str) + data[i:])
        if rescan:
            i = s
        else:
            i = (s + len(str))
