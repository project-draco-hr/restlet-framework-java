def decode_long(data):
    'Decode a long from a two\'s complement little-endian binary string.\n\n    >>> decode_long(\'\')\n    0L\n    >>> decode_long("\\xff\\x00")\n    255L\n    >>> decode_long("\\xff\\x7f")\n    32767L\n    >>> decode_long("\\x00\\xff")\n    -256L\n    >>> decode_long("\\x00\\x80")\n    -32768L\n    >>> decode_long("\\x80")\n    -128L\n    >>> decode_long("\\x7f")\n    127L\n    '
    nbytes = len(data)
    if (nbytes == 0):
        return 0L
    ashex = _binascii.hexlify(data[::(-1)])
    n = long(ashex, 16)
    if (data[(-1)] >= '\x80'):
        n -= (1L << (nbytes * 8))
    return n
