{
  Socket socket=null;
  if ((clientAddress != null) && (clientPort != -1) && (serverPort != -1)) {
    BufferedReader in=null;
    try {
      final StringBuilder sb=new StringBuilder();
      sb.append(clientPort).append(" , ").append(serverPort).append("\r\n");
      final String request=sb.toString();
      socket=new Socket();
      socket.setSoTimeout(SO_TIMEOUT);
      socket.connect(new InetSocketAddress(clientAddress,113),CONNECT_TIMEOUT);
      socket.getOutputStream().write(StringUtils.getAsciiBytes(request));
      in=new BufferedReader(new InputStreamReader(socket.getInputStream()),IoUtils.getBufferSize());
      final String response=in.readLine();
      if (response != null) {
        final StringTokenizer st=new StringTokenizer(response,":");
        if (st.countTokens() >= 3) {
          st.nextToken();
          final String command=st.nextToken().trim();
          if (command.equalsIgnoreCase("USERID") && (st.countTokens() >= 2)) {
            this.hostType=st.nextToken().trim();
            this.userIdentifier=st.nextToken("").substring(1);
          }
        }
      }
    }
 catch (    IOException ioe) {
      Context.getCurrentLogger().log(Level.FINE,"Unable to complete the IDENT request",ioe);
    }
 finally {
      try {
        if (in != null) {
          in.close();
        }
      }
 catch (      IOException ioe) {
        Context.getCurrentLogger().log(Level.FINE,"Unable to close the socket",ioe);
      }
    }
  }
}
