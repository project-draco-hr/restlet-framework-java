{
  if (variants == null) {
    return null;
  }
  List<Language> variantLanguages=null;
  MediaType variantMediaType=null;
  boolean compatibleLanguage=false;
  boolean compatibleMediaType=false;
  Variant currentVariant=null;
  Variant bestVariant=null;
  Preference<Language> currentLanguagePref=null;
  Preference<Language> bestLanguagePref=null;
  Preference<MediaType> currentMediaTypePref=null;
  Preference<MediaType> bestMediaTypePref=null;
  float bestQuality=0;
  float bestLanguageScore=0;
  float bestMediaTypeScore=0;
  List<Preference<Language>> languagePrefs=client.getAcceptedLanguages();
  final List<Preference<Language>> primaryLanguagePrefs=new ArrayList<Preference<Language>>();
  final Preference<Language> defaultLanguagePref=((defaultLanguage == null) ? null : new Preference<Language>(defaultLanguage,0.003f));
  final Preference<Language> allLanguagesPref=new Preference<Language>(Language.ALL,0.001f);
  if (languagePrefs.isEmpty()) {
    languagePrefs.add(new Preference<Language>(Language.ALL));
  }
 else {
    final List<String> list=new ArrayList<String>();
    for (    final Preference<Language> preference : languagePrefs) {
      final Language language=preference.getMetadata();
      if (!language.getSubTags().isEmpty()) {
        if (!list.contains(language.getPrimaryTag())) {
          list.add(language.getPrimaryTag());
          primaryLanguagePrefs.add(new Preference<Language>(new Language(language.getPrimaryTag()),0.005f + (0.001f * preference.getQuality())));
        }
      }
    }
    if ((defaultLanguage != null) && !defaultLanguage.getSubTags().isEmpty()) {
      if (!list.contains(defaultLanguage.getPrimaryTag())) {
        primaryLanguagePrefs.add(new Preference<Language>(new Language(defaultLanguage.getPrimaryTag()),0.002f));
      }
    }
  }
  languagePrefs.addAll(primaryLanguagePrefs);
  if (defaultLanguagePref != null) {
    languagePrefs.add(defaultLanguagePref);
    final List<Preference<Language>> list=new ArrayList<Preference<Language>>();
    for (    final Preference<Language> preference : languagePrefs) {
      final Language language=preference.getMetadata();
      if (!language.equals(Language.ALL)) {
        list.add(preference);
      }
    }
    languagePrefs=list;
  }
  languagePrefs.add(allLanguagesPref);
  for (final Iterator<Variant> iter1=variants.iterator(); iter1.hasNext(); ) {
    currentVariant=iter1.next();
    variantLanguages=currentVariant.getLanguages();
    variantMediaType=currentVariant.getMediaType();
    for (    final Language variantLanguage : variantLanguages) {
      for (final Iterator<Preference<Language>> iter2=languagePrefs.iterator(); (variantLanguage != null) && iter2.hasNext(); ) {
        currentLanguagePref=iter2.next();
        final float currentScore=getScore(variantLanguage,currentLanguagePref.getMetadata());
        final boolean compatiblePref=(currentScore != -1.0f);
        if (compatiblePref && ((bestLanguagePref == null) || (currentScore > bestLanguageScore))) {
          bestLanguagePref=currentLanguagePref;
          bestLanguageScore=currentScore;
        }
      }
    }
    compatibleLanguage=(variantLanguages.isEmpty()) || (bestLanguagePref != null);
    final List<Preference<MediaType>> mediaTypePrefs=client.getAcceptedMediaTypes();
    if (mediaTypePrefs.size() == 0) {
      mediaTypePrefs.add(new Preference<MediaType>(MediaType.ALL));
    }
    for (final Iterator<Preference<MediaType>> iter2=mediaTypePrefs.iterator(); compatibleLanguage && iter2.hasNext(); ) {
      currentMediaTypePref=iter2.next();
      final float currentScore=getScore(variantMediaType,currentMediaTypePref.getMetadata());
      final boolean compatiblePref=(currentScore != -1.0f);
      if (compatiblePref && ((bestMediaTypePref == null) || (currentScore > bestMediaTypeScore))) {
        bestMediaTypePref=currentMediaTypePref;
        bestMediaTypeScore=currentScore;
      }
    }
    compatibleMediaType=(variantMediaType == null) || (bestMediaTypePref != null);
    if (compatibleLanguage && compatibleMediaType) {
      float currentQuality=0;
      if (bestLanguagePref != null) {
        currentQuality+=(bestLanguagePref.getQuality() * 10F);
      }
 else       if (!variantLanguages.isEmpty()) {
        currentQuality+=0.1F * 10F;
      }
      if (bestMediaTypePref != null) {
        currentQuality+=bestMediaTypePref.getQuality();
      }
      if (bestVariant == null) {
        bestVariant=currentVariant;
        bestQuality=currentQuality;
      }
 else       if (currentQuality > bestQuality) {
        bestVariant=currentVariant;
        bestQuality=currentQuality;
      }
    }
    bestLanguagePref=null;
    bestLanguageScore=0;
    bestMediaTypePref=null;
    bestMediaTypeScore=0;
  }
  return bestVariant;
}
