{
  if (getRangeService().isEnabled()) {
    response.getServerInfo().setAcceptingRanges(true);
    if (request.getMethod().isSafe() && response.isEntityAvailable()) {
      boolean rangedEntity=response.getEntity().getRange() != null;
      if (response.getStatus().isSuccess()) {
        if (Status.SUCCESS_PARTIAL_CONTENT.equals(response.getStatus())) {
          if (!rangedEntity) {
            getLogger().warning("When returning a \"206 Partial content\" status, your response entity must be properly ranged.");
          }
 else {
          }
        }
 else {
          if (request.getRanges().size() == 1 && (!request.getConditions().hasSomeRange() || request.getConditions().getRangeStatus(response.getEntity()).isSuccess())) {
            Range requestedRange=request.getRanges().get(0);
            if ((!response.getEntity().hasKnownSize()) && ((requestedRange.getIndex() == Range.INDEX_LAST || requestedRange.getSize() == Range.SIZE_MAX) && !(requestedRange.getIndex() == Range.INDEX_LAST && requestedRange.getSize() == Range.SIZE_MAX))) {
              response.setStatus(Status.SERVER_ERROR_INTERNAL);
              getLogger().warning("Unable to serve this range since at least the end index of the range cannot be computed.");
              response.setEntity(null);
            }
 else             if (!requestedRange.equals(response.getEntity().getRange())) {
              if (rangedEntity) {
                getLogger().info("The range of the response entity is not equal to the requested one.");
              }
              response.setEntity(new RangeRepresentation(response.getEntity(),requestedRange));
              response.setStatus(Status.SUCCESS_PARTIAL_CONTENT);
            }
          }
 else           if (request.getRanges().size() > 1) {
            response.setStatus(Status.SERVER_ERROR_NOT_IMPLEMENTED);
            getLogger().warning("Multiple ranges are not supported at this time.");
            response.setEntity(null);
          }
        }
      }
 else {
      }
    }
  }
}
