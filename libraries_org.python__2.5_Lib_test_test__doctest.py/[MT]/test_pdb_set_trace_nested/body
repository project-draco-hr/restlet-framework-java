def test_pdb_set_trace_nested():
    'This illustrates more-demanding use of set_trace with nested functions.\n\n    >>> class C(object):\n    ...     def calls_set_trace(self):\n    ...         y = 1\n    ...         import pdb; pdb.set_trace()\n    ...         self.f1()\n    ...         y = 2\n    ...     def f1(self):\n    ...         x = 1\n    ...         self.f2()\n    ...         x = 2\n    ...     def f2(self):\n    ...         z = 1\n    ...         z = 2\n\n    >>> calls_set_trace = C().calls_set_trace\n\n    >>> doc = \'\'\'\n    ... >>> a = 1\n    ... >>> calls_set_trace()\n    ... \'\'\'\n    >>> parser = doctest.DocTestParser()\n    >>> runner = doctest.DocTestRunner(verbose=False)\n    >>> test = parser.get_doctest(doc, globals(), "foo", "foo.py", 0)\n    >>> real_stdin = sys.stdin\n    >>> sys.stdin = _FakeInput([\n    ...    \'print y\',  # print data defined in the function\n    ...    \'step\', \'step\', \'step\', \'step\', \'step\', \'step\', \'print z\',\n    ...    \'up\', \'print x\',\n    ...    \'up\', \'print y\',\n    ...    \'up\', \'print foo\',\n    ...    \'continue\', # stop debugging\n    ...    \'\'])\n\n    >>> try:\n    ...     runner.run(test)\n    ... finally:\n    ...     sys.stdin = real_stdin\n    > <doctest test.test_doctest.test_pdb_set_trace_nested[0]>(5)calls_set_trace()\n    -> self.f1()\n    (Pdb) print y\n    1\n    (Pdb) step\n    --Call--\n    > <doctest test.test_doctest.test_pdb_set_trace_nested[0]>(7)f1()\n    -> def f1(self):\n    (Pdb) step\n    > <doctest test.test_doctest.test_pdb_set_trace_nested[0]>(8)f1()\n    -> x = 1\n    (Pdb) step\n    > <doctest test.test_doctest.test_pdb_set_trace_nested[0]>(9)f1()\n    -> self.f2()\n    (Pdb) step\n    --Call--\n    > <doctest test.test_doctest.test_pdb_set_trace_nested[0]>(11)f2()\n    -> def f2(self):\n    (Pdb) step\n    > <doctest test.test_doctest.test_pdb_set_trace_nested[0]>(12)f2()\n    -> z = 1\n    (Pdb) step\n    > <doctest test.test_doctest.test_pdb_set_trace_nested[0]>(13)f2()\n    -> z = 2\n    (Pdb) print z\n    1\n    (Pdb) up\n    > <doctest test.test_doctest.test_pdb_set_trace_nested[0]>(9)f1()\n    -> self.f2()\n    (Pdb) print x\n    1\n    (Pdb) up\n    > <doctest test.test_doctest.test_pdb_set_trace_nested[0]>(5)calls_set_trace()\n    -> self.f1()\n    (Pdb) print y\n    1\n    (Pdb) up\n    > <doctest foo[1]>(1)<module>()\n    -> calls_set_trace()\n    (Pdb) print foo\n    *** NameError: name \'foo\' is not defined\n    (Pdb) continue\n    (0, 2)\n'
