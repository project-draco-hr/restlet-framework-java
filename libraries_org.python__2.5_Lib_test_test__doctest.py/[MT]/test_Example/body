def test_Example():
    '\nUnit tests for the `Example` class.\n\nExample is a simple container class that holds:\n  - `source`: A source string.\n  - `want`: An expected output string.\n  - `exc_msg`: An expected exception message string (or None if no\n    exception is expected).\n  - `lineno`: A line number (within the docstring).\n  - `indent`: The example\'s indentation in the input string.\n  - `options`: An option dictionary, mapping option flags to True or\n    False.\n\nThese attributes are set by the constructor.  `source` and `want` are\nrequired; the other attributes all have default values:\n\n    >>> example = doctest.Example(\'print 1\', \'1\\n\')\n    >>> (example.source, example.want, example.exc_msg,\n    ...  example.lineno, example.indent, example.options)\n    (\'print 1\\n\', \'1\\n\', None, 0, 0, {})\n\nThe first three attributes (`source`, `want`, and `exc_msg`) may be\nspecified positionally; the remaining arguments should be specified as\nkeyword arguments:\n\n    >>> exc_msg = \'IndexError: pop from an empty list\'\n    >>> example = doctest.Example(\'[].pop()\', \'\', exc_msg,\n    ...                           lineno=5, indent=4,\n    ...                           options={doctest.ELLIPSIS: True})\n    >>> (example.source, example.want, example.exc_msg,\n    ...  example.lineno, example.indent, example.options)\n    (\'[].pop()\\n\', \'\', \'IndexError: pop from an empty list\\n\', 5, 4, {8: True})\n\nThe constructor normalizes the `source` string to end in a newline:\n\n    Source spans a single line: no terminating newline.\n    >>> e = doctest.Example(\'print 1\', \'1\\n\')\n    >>> e.source, e.want\n    (\'print 1\\n\', \'1\\n\')\n\n    >>> e = doctest.Example(\'print 1\\n\', \'1\\n\')\n    >>> e.source, e.want\n    (\'print 1\\n\', \'1\\n\')\n\n    Source spans multiple lines: require terminating newline.\n    >>> e = doctest.Example(\'print 1;\\nprint 2\\n\', \'1\\n2\\n\')\n    >>> e.source, e.want\n    (\'print 1;\\nprint 2\\n\', \'1\\n2\\n\')\n\n    >>> e = doctest.Example(\'print 1;\\nprint 2\', \'1\\n2\\n\')\n    >>> e.source, e.want\n    (\'print 1;\\nprint 2\\n\', \'1\\n2\\n\')\n\n    Empty source string (which should never appear in real examples)\n    >>> e = doctest.Example(\'\', \'\')\n    >>> e.source, e.want\n    (\'\\n\', \'\')\n\nThe constructor normalizes the `want` string to end in a newline,\nunless it\'s the empty string:\n\n    >>> e = doctest.Example(\'print 1\', \'1\\n\')\n    >>> e.source, e.want\n    (\'print 1\\n\', \'1\\n\')\n\n    >>> e = doctest.Example(\'print 1\', \'1\')\n    >>> e.source, e.want\n    (\'print 1\\n\', \'1\\n\')\n\n    >>> e = doctest.Example(\'print\', \'\')\n    >>> e.source, e.want\n    (\'print\\n\', \'\')\n\nThe constructor normalizes the `exc_msg` string to end in a newline,\nunless it\'s `None`:\n\n    Message spans one line\n    >>> exc_msg = \'IndexError: pop from an empty list\'\n    >>> e = doctest.Example(\'[].pop()\', \'\', exc_msg)\n    >>> e.exc_msg\n    \'IndexError: pop from an empty list\\n\'\n\n    >>> exc_msg = \'IndexError: pop from an empty list\\n\'\n    >>> e = doctest.Example(\'[].pop()\', \'\', exc_msg)\n    >>> e.exc_msg\n    \'IndexError: pop from an empty list\\n\'\n\n    Message spans multiple lines\n    >>> exc_msg = \'ValueError: 1\\n  2\'\n    >>> e = doctest.Example(\'raise ValueError("1\\n  2")\', \'\', exc_msg)\n    >>> e.exc_msg\n    \'ValueError: 1\\n  2\\n\'\n\n    >>> exc_msg = \'ValueError: 1\\n  2\\n\'\n    >>> e = doctest.Example(\'raise ValueError("1\\n  2")\', \'\', exc_msg)\n    >>> e.exc_msg\n    \'ValueError: 1\\n  2\\n\'\n\n    Empty (but non-None) exception message (which should never appear\n    in real examples)\n    >>> exc_msg = \'\'\n    >>> e = doctest.Example(\'raise X()\', \'\', exc_msg)\n    >>> e.exc_msg\n    \'\\n\'\n'
