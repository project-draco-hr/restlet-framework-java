def remainder(self, a, b):
    'Returns the remainder from integer division.\n\n        The result is the residue of the dividend after the operation of\n        calculating integer division as described for divide-integer, rounded\n        to precision digits if necessary.  The sign of the result, if\n        non-zero, is the same as that of the original dividend.\n\n        This operation will fail under the same conditions as integer division\n        (that is, if integer division on the same two operands would fail, the\n        remainder cannot be calculated).\n\n        >>> ExtendedContext.remainder(Decimal(\'2.1\'), Decimal(\'3\'))\n        Decimal("2.1")\n        >>> ExtendedContext.remainder(Decimal(\'10\'), Decimal(\'3\'))\n        Decimal("1")\n        >>> ExtendedContext.remainder(Decimal(\'-10\'), Decimal(\'3\'))\n        Decimal("-1")\n        >>> ExtendedContext.remainder(Decimal(\'10.2\'), Decimal(\'1\'))\n        Decimal("0.2")\n        >>> ExtendedContext.remainder(Decimal(\'10\'), Decimal(\'0.3\'))\n        Decimal("0.1")\n        >>> ExtendedContext.remainder(Decimal(\'3.6\'), Decimal(\'1.3\'))\n        Decimal("1.0")\n        '
    return a.__mod__(b, context=self)
