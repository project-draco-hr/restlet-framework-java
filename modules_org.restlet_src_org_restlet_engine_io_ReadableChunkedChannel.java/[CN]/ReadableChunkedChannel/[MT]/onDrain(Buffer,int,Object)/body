{
  int result=0;
  ByteBuffer targetBuffer=(ByteBuffer)args[0];
  int before=buffer.remaining();
  if (Context.getCurrentLogger().isLoggable(Level.FINEST)) {
    Context.getCurrentLogger().log(Level.FINEST,"Chunk state: " + getChunkState());
  }
switch (getChunkState()) {
case SIZE:
    setLineBuilderState(buffer.drain(getLineBuilder(),getLineBuilderState()));
  if (getLineBuilderState() == BufferState.DRAINING) {
    int length=getLineBuilder().length();
    if (length == 0) {
      throw new IOException("An empty chunk size line was detected");
    }
    int index=getLineBuilder().indexOf(";");
    index=(index == -1) ? getLineBuilder().length() : index;
    try {
      setRemainingChunkSize(Integer.parseInt(getLineBuilder().substring(0,index).trim(),16));
      if (Context.getCurrentLogger().isLoggable(Level.FINER)) {
        Context.getCurrentLogger().log(Level.FINER,"New chunk detected. Size: " + this.remainingChunkSize);
      }
    }
 catch (    NumberFormatException ex) {
      throw new IOException("\"" + getLineBuilder() + "\" has an invalid chunk size");
    }
 finally {
      clearLineBuilder();
    }
    if (getRemainingChunkSize() == 0) {
      setChunkState(ChunkState.TRAILER);
    }
 else {
      setChunkState(ChunkState.DATA);
    }
    break;
  }
break;
case DATA:
if (getRemainingChunkSize() > 0) {
result=super.onDrain(buffer,this.remainingChunkSize,targetBuffer);
if (result > 0) {
  setRemainingChunkSize(getRemainingChunkSize() - result);
}
 else {
  if (Context.getCurrentLogger().isLoggable(Level.FINE)) {
    Context.getCurrentLogger().fine("No chunk data read");
  }
}
}
 else if (getRemainingChunkSize() == 0) {
clearLineBuilder();
setChunkState(ChunkState.SIZE);
}
break;
case TRAILER:
setChunkState(ChunkState.END);
break;
case END:
setLineBuilderState(buffer.drain(getLineBuilder(),getLineBuilderState()));
if (getLineBuilderState() == BufferState.DRAINING) {
if (getLineBuilder().length() != 0) {
Context.getCurrentLogger().log(Level.FINE,"The last chunk line had a non empty line");
}
setEndReached(true);
}
break;
}
if ((result == -1) && (getWrappedChannel() instanceof CompletionListener)) {
((CompletionListener)getWrappedChannel()).onCompleted(false);
}
 else {
result=before - buffer.remaining();
}
return result;
}
