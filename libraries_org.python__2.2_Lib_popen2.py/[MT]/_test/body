def _test():
    cmd = 'cat'
    teststr = 'ab cd\n'
    import os
    if (os.name in ['nt', 'java']):
        cmd = 'more'
    expected = teststr.strip()
    print 'testing popen2...'
    (r, w) = popen2(cmd)
    w.write(teststr)
    w.close()
    got = r.read()
    if (got.strip() != expected):
        raise ValueError(('wrote %s read %s' % (teststr, got)))
    print 'testing popen3...'
    try:
        (r, w, e) = popen3([cmd])
    except:
        (r, w, e) = popen3(cmd)
    w.write(teststr)
    w.close()
    got = r.read()
    err = e.read()
    if (got.strip() != expected):
        raise ValueError(('wrote %s read %s, error %s' % (teststr, got, err)))
    if err:
        raise ValueError(('unexected %s on stderr' % err))
    print 'All OK'
    p = Popen3(cmd)
    q = 'This is\na test of\nwriting\n'
    p.tochild.write(q)
    p.tochild.close()
    r = p.fromchild.read()
    x = p.poll()
    assert (x == 0)
    assert (r.strip() == q.strip())
