{
  final int size=1623;
  final Vector<URL> urls=new Vector<URL>();
  try {
    for (    URL u : new URL[]{new URL("http://mm04.nasaimages.org/MediaManager/srvr?mediafile=/Size1/NVA2-8-NA/15614/full_tif.jpg&userid=1&username=admin&resolution=1&servertype=JVA&cid=8&iid=NVA2&vcid=NA&usergroup=NASA_Hubble_Space_Telescope_Collection-8-Admin&profileid=36"),new URL("http://mm04.nasaimages.org/MediaManager/srvr?mediafile=/Size1/nasaNAS-4-NA/17226/PIA09579.jpg&userid=1&username=admin&resolution=1&servertype=JVA&cid=4&iid=nasaNAS&vcid=NA&usergroup=photojournal_%28nasa%29_3-4-Admin&profileid=16")}) {
      urls.add(u);
    }
  }
 catch (  MalformedURLException mue) {
    throw new RuntimeException(mue);
  }
  OutputRepresentation os=new OutputRepresentation(MediaType.APPLICATION_OCTET_STREAM){
    @Override public void write(    OutputStream outputStream) throws IOException {
      Iterator<URL> urlIt=urls.iterator();
      byte[] b=new byte[1024];
      try {
        while (urlIt.hasNext()) {
          InputStream is=urlIt.next().openStream();
          try {
            while (true) {
              int r;
              r=is.read(b);
              if (r == -1)               break;
              outputStream.write(b,0,r);
            }
          }
  finally {
            is.close();
          }
        }
      }
 catch (      IOException ioe) {
        ioe.printStackTrace();
        throw ioe;
      }
 finally {
        outputStream.close();
      }
    }
  }
;
  os.setSize(size);
  return os;
}
