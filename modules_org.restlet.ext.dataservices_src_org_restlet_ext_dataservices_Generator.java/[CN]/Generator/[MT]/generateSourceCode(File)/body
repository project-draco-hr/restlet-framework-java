{
  Configuration fmc=new Configuration();
  fmc.setDefaultEncoding(CharacterSet.UTF_8.getName());
  String rootTemplates="clap://class/org/restlet/ext/dataservices/internal/templates";
  Representation entityTmpl=new StringRepresentation(new ClientResource(rootTemplates + "/entityType.ftl").get().getText());
  Representation serviceTmpl=new StringRepresentation(new ClientResource(rootTemplates + "/session.ftl").get().getText());
  for (  Schema schema : metadata.getSchemas()) {
    String packageName=Type.getPackageName(schema);
    File packageDir=new File(outputDir,packageName.replace(".",System.getProperty("file.separator")));
    packageDir.mkdirs();
    for (    EntityType type : schema.getTypes()) {
      String className=type.getClassName();
      Map<String,Object> dataModel=new HashMap<String,Object>();
      dataModel.put("entityType",type);
      dataModel.put("schema",schema);
      dataModel.put("metadata",metadata);
      dataModel.put("className",className);
      dataModel.put("packageName",packageName);
      TemplateRepresentation templateRepresentation=new TemplateRepresentation(entityTmpl,fmc,dataModel,MediaType.TEXT_PLAIN);
      templateRepresentation.setCharacterSet(CharacterSet.UTF_8);
      templateRepresentation.write(new FileOutputStream(new File(packageDir,type.getClassName() + ".java")));
    }
    StringBuffer className=new StringBuffer();
    className.append(schema.getNamespace().getNormalizedName().substring(0,1).toUpperCase());
    className.append(schema.getNamespace().getNormalizedName().substring(1));
    className.append("Session");
    Map<String,Object> dataModel=new HashMap<String,Object>();
    dataModel.put("schema",schema);
    dataModel.put("metadata",metadata);
    dataModel.put("className",className);
    dataModel.put("dataServiceUri",this.dataServiceRef.getTargetRef());
    dataModel.put("entityContainers",metadata.getContainers());
    TemplateRepresentation templateRepresentation=new TemplateRepresentation(serviceTmpl,fmc,dataModel,MediaType.TEXT_PLAIN);
    templateRepresentation.setCharacterSet(CharacterSet.UTF_8);
    templateRepresentation.write(new FileOutputStream(new File(outputDir,className + ".java")));
  }
}
