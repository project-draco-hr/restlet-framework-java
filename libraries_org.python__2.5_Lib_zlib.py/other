"\nThe functions in this module allow compression and decompression using the\nzlib library, which is based on GNU zip.\n\nadler32(string[, start]) -- Compute an Adler-32 checksum.\ncompress(string[, level]) -- Compress string, with compression level in 1-9.\ncompressobj([level]) -- Return a compressor object.\ncrc32(string[, start]) -- Compute a CRC-32 checksum.\ndecompress(string,[wbits],[bufsize]) -- Decompresses a compressed string.\ndecompressobj([wbits]) -- Return a decompressor object.\n\n'wbits' is window buffer size.\nCompressor objects support compress() and flush() methods; decompressor\nobjects support decompress() and flush().\n"
import array
import binascii
import jarray
from java.util.zip import Adler32, Deflater, Inflater, DataFormatException
from java.lang import Long, String
from cStringIO import StringIO
DEFLATED = 8
MAX_WBITS = 15
DEF_MEM_LEVEL = 8
ZLIB_VERSION = '1.1.3'
Z_BEST_COMPRESSION = 9
Z_BEST_SPEED = 1
Z_FILTERED = 1
Z_HUFFMAN_ONLY = 2
Z_DEFAULT_COMPRESSION = (-1)
Z_DEFAULT_STRATEGY = 0
Z_FINISH = 4
_valid_flush_modes = (Z_FINISH,)
