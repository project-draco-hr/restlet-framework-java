'Common string manipulations.\n\nPublic module variables:\n\nwhitespace -- a string containing all characters considered whitespace\nlowercase -- a string containing all characters considered lowercase letters\nuppercase -- a string containing all characters considered uppercase letters\nletters -- a string containing all characters considered letters\nascii_lowercase -- a string containing all characters considered lowercase\n  letters that is not locale-dependent and will not change.\nascii_uppercase -- a string containing all characters considered uppercase\n  letters that is not locale-dependent and will not change.\nascii_letters -- The concatenation of the ascii_lowercase and ascii_uppercase\n  constants described below. This value is not locale-dependent.\ndigits -- a string containing all characters considered decimal digits\nhexdigits -- a string containing all characters considered hexadecimal digits\noctdigits -- a string containing all characters considered octal digits\npunctuation -- a string containing all characters considered punctuation\nprintable -- a string containing all characters considered printable\n\n'
whitespace = ' \t\n\r\x0b\x0c'
lowercase = 'abcdefghijklmnopqrstuvwxyz'
uppercase = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
letters = (lowercase + uppercase)
digits = '0123456789'
hexdigits = ((digits + 'abcdef') + 'ABCDEF')
octdigits = '01234567'
punctuation = '!"#$%&\'()*+,-./:;<=>?@[\\]^_`{|}~'
printable = (((digits + letters) + punctuation) + whitespace)
ascii_lowercase = 'abcdefghijklmnopqrstuvwxyz'
ascii_uppercase = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
ascii_letters = (ascii_lowercase + ascii_uppercase)
_idmap = ''
for i in range(256):
    _idmap = (_idmap + chr(i))
del i
index_error = ValueError
atoi_error = ValueError
atof_error = ValueError
atol_error = ValueError
splitfields = split
joinfields = join
_apply = apply
_float = float
_int = int
_long = long
_StringType = type('')
_idmapL = None
try:
    from strop import maketrans, lowercase, uppercase, whitespace
    letters = (lowercase + uppercase)
except ImportError:
    pass
