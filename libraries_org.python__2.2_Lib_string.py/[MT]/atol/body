def atol(*args):
    'atol(s [,base]) -> long\n\n    Return the long integer represented by the string s in the\n    given base, which defaults to 10.  The string s must consist\n    of one or more digits, possibly preceded by a sign.  If base\n    is 0, it is chosen from the leading characters of s, 0 for\n    octal, 0x or 0X for hexadecimal.  If base is 16, a preceding\n    0x or 0X is accepted.  A trailing L or l is not accepted,\n    unless base is 0.\n\n    '
    try:
        s = args[0]
    except IndexError:
        raise TypeError(('function requires at least 1 argument: %d given' % len(args)))
    if (type(s) == _StringType):
        return _apply(_long, args)
    else:
        raise TypeError(('argument 1: expected string, %s found' % type(s).__name__))
