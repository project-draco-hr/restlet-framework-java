def test_float_overflow(self):
    import math
    for x in ((-2.0), (-1.0), 0.0, 1.0, 2.0):
        self.assertEqual(float(long(x)), x)
    shuge = ('12345' * 120)
    huge = (1L << 30000)
    mhuge = (- huge)
    namespace = {'huge': huge, 'mhuge': mhuge, 'shuge': shuge, 'math': math, }
    for test in ['float(huge)', 'float(mhuge)', 'complex(huge)', 'complex(mhuge)', 'complex(huge, 1)', 'complex(mhuge, 1)', 'complex(1, huge)', 'complex(1, mhuge)', '1. + huge', 'huge + 1.', '1. + mhuge', 'mhuge + 1.', '1. - huge', 'huge - 1.', '1. - mhuge', 'mhuge - 1.', '1. * huge', 'huge * 1.', '1. * mhuge', 'mhuge * 1.', '1. // huge', 'huge // 1.', '1. // mhuge', 'mhuge // 1.', '1. / huge', 'huge / 1.', '1. / mhuge', 'mhuge / 1.', '1. ** huge', 'huge ** 1.', '1. ** mhuge', 'mhuge ** 1.', 'math.sin(huge)', 'math.sin(mhuge)', 'math.sqrt(huge)', 'math.sqrt(mhuge)', 'math.floor(huge)', 'math.floor(mhuge)']:
        self.assertRaises(OverflowError, eval, test, namespace)
        self.assertNotEqual(float(shuge), int(shuge), 'float(shuge) should not equal int(shuge)')
