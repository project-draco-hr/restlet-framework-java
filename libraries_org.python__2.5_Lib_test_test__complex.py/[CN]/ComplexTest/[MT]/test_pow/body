def test_pow(self):
    self.assertAlmostEqual(pow((1 + 1j), (0 + 0j)), 1.0)
    self.assertAlmostEqual(pow((0 + 0j), (2 + 0j)), 0.0)
    self.assertRaises(ZeroDivisionError, pow, (0 + 0j), 1j)
    self.assertAlmostEqual(pow(1j, (-1)), (1 / 1j))
    self.assertAlmostEqual(pow(1j, 200), 1)
    self.assertRaises(ValueError, pow, (1 + 1j), (1 + 1j), (1 + 1j))
    a = (3.33 + 4.43j)
    self.assertEqual((a ** 0j), 1)
    self.assertEqual(((a ** 0.0) + 0j), 1)
    self.assertEqual((3j ** 0j), 1)
    self.assertEqual((3j ** 0), 1)
    try:
        (0j ** a)
    except ZeroDivisionError:
        pass
    else:
        self.fail('should fail 0.0 to negative or complex power')
    try:
        (0j ** (3 - 2j))
    except ZeroDivisionError:
        pass
    else:
        self.fail('should fail 0.0 to negative or complex power')
    self.assertEqual((a ** 105), (a ** 105))
    self.assertEqual((a ** (-105)), (a ** (-105)))
    self.assertEqual((a ** (-30)), (a ** (-30)))
    self.assertEqual((0j ** 0), 1)
    b = (5.1 + 2.3j)
    self.assertRaises(ValueError, pow, a, b, 0)
