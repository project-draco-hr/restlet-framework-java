def testHeaderFormats(self):

    def non_error_app(e, s):
        s('200 OK', [])
        return []
    stdpat = 'HTTP/%s 200 OK\\r\\nDate: \\w{3}, [ 0123]\\d \\w{3} \\d{4} \\d\\d:\\d\\d:\\d\\d GMT\\r\\n%sContent-Length: 0\\r\\n\\r\\n'
    shortpat = 'Status: 200 OK\r\nContent-Length: 0\r\n\r\n'
    for ssw in ('FooBar/1.0', None):
        sw = ((ssw and ('Server: %s\r\n' % ssw)) or '')
        for version in ('1.0', '1.1'):
            for proto in ('HTTP/0.9', 'HTTP/1.0', 'HTTP/1.1'):
                h = TestHandler(SERVER_PROTOCOL=proto)
                h.origin_server = False
                h.http_version = version
                h.server_software = ssw
                h.run(non_error_app)
                self.assertEqual(shortpat, h.stdout.getvalue())
                h = TestHandler(SERVER_PROTOCOL=proto)
                h.origin_server = True
                h.http_version = version
                h.server_software = ssw
                h.run(non_error_app)
                if (proto == 'HTTP/0.9'):
                    self.assertEqual(h.stdout.getvalue(), '')
                else:
                    self.failUnless(re.match((stdpat % (version, sw)), h.stdout.getvalue()), ((stdpat % (version, sw)), h.stdout.getvalue()))
