def testMappingInterface(self):
    test = [('x', 'y')]
    self.assertEqual(len(Headers([])), 0)
    self.assertEqual(len(Headers(test[:])), 1)
    self.assertEqual(Headers(test[:]).keys(), ['x'])
    self.assertEqual(Headers(test[:]).values(), ['y'])
    self.assertEqual(Headers(test[:]).items(), test)
    self.failIf((Headers(test).items() is test))
    h = Headers([])
    del h['foo']
    h['Foo'] = 'bar'
    for m in (h.has_key, h.__contains__, h.get, h.get_all, h.__getitem__):
        self.failUnless(m('foo'))
        self.failUnless(m('Foo'))
        self.failUnless(m('FOO'))
        self.failIf(m('bar'))
    self.assertEqual(h['foo'], 'bar')
    h['foo'] = 'baz'
    self.assertEqual(h['FOO'], 'baz')
    self.assertEqual(h.get_all('foo'), ['baz'])
    self.assertEqual(h.get('foo', 'whee'), 'baz')
    self.assertEqual(h.get('zoo', 'whee'), 'whee')
    self.assertEqual(h.setdefault('foo', 'whee'), 'baz')
    self.assertEqual(h.setdefault('zoo', 'whee'), 'whee')
    self.assertEqual(h['foo'], 'baz')
    self.assertEqual(h['zoo'], 'whee')
