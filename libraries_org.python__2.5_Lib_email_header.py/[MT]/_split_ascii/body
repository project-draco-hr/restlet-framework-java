def _split_ascii(s, firstlen, restlen, continuation_ws, splitchars):
    lines = []
    maxlen = firstlen
    for line in s.splitlines():
        line = line.lstrip()
        if (len(line) < maxlen):
            lines.append(line)
            maxlen = restlen
            continue
        for ch in splitchars:
            if (ch in line):
                break
        else:
            lines.append(line)
            maxlen = restlen
            continue
        cre = re.compile(('%s\\s*' % ch))
        if (ch in ';,'):
            eol = ch
        else:
            eol = ''
        joiner = (eol + ' ')
        joinlen = len(joiner)
        wslen = len(continuation_ws.replace('\t', SPACE8))
        this = []
        linelen = 0
        for part in cre.split(line):
            curlen = (linelen + (max(0, (len(this) - 1)) * joinlen))
            partlen = len(part)
            onfirstline = (not lines)
            if ((ch == ' ') and onfirstline and (len(this) == 1) and fcre.match(this[0])):
                this.append(part)
                linelen += partlen
            elif ((curlen + partlen) > maxlen):
                if this:
                    lines.append((joiner.join(this) + eol))
                if ((partlen > maxlen) and (ch != ' ')):
                    subl = _split_ascii(part, maxlen, restlen, continuation_ws, ' ')
                    lines.extend(subl[:(-1)])
                    this = [subl[(-1)]]
                else:
                    this = [part]
                linelen = (wslen + len(this[(-1)]))
                maxlen = restlen
            else:
                this.append(part)
                linelen += partlen
        if this:
            lines.append(joiner.join(this))
    return lines
