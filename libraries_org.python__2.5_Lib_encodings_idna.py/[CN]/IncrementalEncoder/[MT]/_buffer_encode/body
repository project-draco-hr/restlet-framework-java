def _buffer_encode(self, input, errors, final):
    if (errors != 'strict'):
        raise UnicodeError(('unsupported error handling ' + errors))
    if (not input):
        return ('', 0)
    labels = dots.split(input)
    trailing_dot = u''
    if labels:
        if (not labels[(-1)]):
            trailing_dot = '.'
            del labels[(-1)]
        elif (not final):
            del labels[(-1)]
            if labels:
                trailing_dot = '.'
    result = []
    size = 0
    for label in labels:
        result.append(ToASCII(label))
        if size:
            size += 1
        size += len(label)
    result = ('.'.join(result) + trailing_dot)
    size += len(trailing_dot)
    return (result, size)
