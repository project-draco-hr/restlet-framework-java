{
  final StringBuilder builder=new StringBuilder();
  builder.append("<?xml version=\"1.0\"?>");
  builder.append("<component>");
  builder.append("<server protocol=\"HTTP\" port=\"" + this.port + "\" />");
  builder.append("<server protocol=\"HTTP\" port=\"" + this.port2 + "\" />");
  builder.append("<defaultHost hostPort=\"" + this.port2 + "\">");
  builder.append("<attach uriPattern=\"/abcd\" targetClass=\"org.restlet.test.HelloWorldApplication\" /> ");
  builder.append("</defaultHost>");
  builder.append("<host hostPort=\"" + this.port + "\">");
  builder.append("<attach uriPattern=\"/efgh\" targetClass=\"org.restlet.test.HelloWorldApplication\" /> ");
  builder.append("</host>");
  builder.append("</component>");
  final Component component=new Component(new StringRepresentation(builder.toString()));
  component.start();
  final Client client=new Client(Protocol.HTTP);
  Response response=client.get("http://localhost:" + this.port + "/efgh");
  assertTrue(response.getStatus().isSuccess());
  assertTrue(response.isEntityAvailable());
  response=client.get("http://localhost:" + this.port + "/abcd");
  assertTrue(response.getStatus().isClientError());
  response=client.get("http://localhost:" + this.port2 + "/abcd");
  assertTrue(response.getStatus().isSuccess());
  assertTrue(response.isEntityAvailable());
  response=client.get("http://localhost:" + this.port2 + "/efgh");
  assertTrue(response.getStatus().isClientError());
  component.stop();
}
