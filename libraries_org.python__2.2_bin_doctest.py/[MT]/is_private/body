def is_private(prefix, base):
    'prefix, base -> true iff name prefix + "." + base is "private".\n\n    Prefix may be an empty string, and base does not contain a period.\n    Prefix is ignored (although functions you write conforming to this\n    protocol may make use of it).\n    Return true iff base begins with an (at least one) underscore, but\n    does not both begin and end with (at least) two underscores.\n\n    >>> is_private("a.b", "my_func")\n    0\n    >>> is_private("____", "_my_func")\n    1\n    >>> is_private("someclass", "__init__")\n    0\n    >>> is_private("sometypo", "__init_")\n    1\n    >>> is_private("x.y.z", "_")\n    1\n    >>> is_private("_x.y.z", "__")\n    0\n    >>> is_private("", "")  # senseless but consistent\n    0\n    '
    return ((base[:1] == '_') and (not (base[:2] == '__' == base[(-2):])))
