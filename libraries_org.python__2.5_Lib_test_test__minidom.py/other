from xml.dom.minidom import parse, Node, Document, parseString
from xml.dom import HierarchyRequestErr
import os
import sys
import traceback
from test_support import verbose
if (__name__ == '__main__'):
    base = sys.argv[0]
else:
    base = __file__
tstfile = os.path.join(os.path.dirname(base), (('test' + os.extsep) + 'xml'))
del base
Node._debug = 1
names = globals().keys()
names.sort()
failed = []
try:
    Node.allnodes
except AttributeError:

    def check_allnodes():
        pass
else:

    def check_allnodes():
        confirm((len(Node.allnodes) == 0), 'assertion: len(Node.allnodes) == 0')
        if len(Node.allnodes):
            print 'Garbage left over:'
            if verbose:
                print Node.allnodes.items()[0:10]
            else:
                print len(Node.allnodes)
        Node.allnodes = {}
for name in names:
    if name.startswith('test'):
        func = globals()[name]
        try:
            func()
            check_allnodes()
        except:
            failed.append(name)
            print 'Test Failed: ', name
            sys.stdout.flush()
            traceback.print_exception(*sys.exc_info())
            print `sys.exc_info()[1]`
            Node.allnodes = {}
if failed:
    print '\n\n\n**** Check for failures in these tests:'
    for name in failed:
        print ('  ' + name)
