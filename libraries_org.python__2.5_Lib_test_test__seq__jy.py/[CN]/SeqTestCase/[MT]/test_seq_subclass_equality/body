def test_seq_subclass_equality(self):
    for type2test in self.types2test:


        class Foo(type2test):

            def __eq__(self, other):
                return False
        l = type2test(['bar', 'baz'])
        foo = Foo(l)
        self.assertNotEqual(l, foo)
        self.assertEqual(cmp(l, foo), 1)
        self.assertEqual(cmp(foo, foo), 0)
        seqs1 = type2test([l, foo])
        seqs2 = type2test([l, foo])
        self.assertEqual(seqs1, seqs1)
        self.assertEqual(seqs1, seqs2)
        self.assertEqual(cmp(seqs1, seqs2), 0)
        self.assertTrue((foo in seqs1))
        if hasattr(seqs1, 'count'):
            self.assertTrue(seqs1.count(foo), 1)
        if hasattr(seqs1, 'index'):
            self.assertEqual(seqs1.index(foo), 1)
