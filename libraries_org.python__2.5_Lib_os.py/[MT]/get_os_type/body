def get_os_type():
    'Return the name of the type of the underlying OS.\n\n    Returns a value suitable for the os.name variable (though not\n    necessarily intended to be for os.name Jython).  This value may be\n    overwritten in the Jython registry.\n    '
    os_name = sys.registry.getProperty('python.os')
    if os_name:
        return asPyString(os_name)
    os_name = asPyString(java.lang.System.getProperty('os.name'))
    os_type = None
    for (type, (patterns, shell_commands)) in _os_map.iteritems():
        for pattern in patterns:
            if os_name.startswith(pattern):
                return type
    return 'posix'
