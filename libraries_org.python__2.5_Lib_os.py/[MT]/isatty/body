def isatty(fileno):
    "isatty(fd) -> bool\n\n    Return True if the file descriptor 'fd' is an open file descriptor\n    connected to the slave end of a terminal."
    from java.io import FileDescriptor
    if isinstance(fileno, int):
        if (fileno == 0):
            fd = getattr(FileDescriptor, 'in')
        elif (fileno == 1):
            fd = FileDescriptor.out
        elif (fileno == 2):
            fd = FileDescriptor.err
        else:
            raise NotImplemented('Integer file descriptor compatibility only available for stdin, stdout and stderr (0-2)')
        return _posix.isatty(fd)
    if isinstance(fileno, FileDescriptor):
        return _posix.isatty(fileno)
    if (not isinstance(fileno, IOBase)):
        raise TypeError('a file descriptor is required')
    return fileno.isatty()
