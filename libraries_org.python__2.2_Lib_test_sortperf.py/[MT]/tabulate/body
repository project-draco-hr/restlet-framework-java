def tabulate(r):
    'Tabulate sort speed for lists of various sizes.\n\n    The sizes are 2**i for i in r (the argument, a list).\n\n    The output displays i, 2**i, and the time to sort arrays of 2**i\n    floating point numbers with the following properties:\n\n    *sort: random data\n    \\sort: descending data\n    /sort: ascending data\n    ~sort: many duplicates\n    -sort: all equal\n    !sort: worst case scenario\n\n    '
    cases = ('*sort', '\\sort', '/sort', '~sort', '-sort', '!sort')
    fmt = ('%2s %6s' + (' %6s' * len(cases)))
    print (fmt % (('i', '2**i') + cases))
    for i in r:
        n = (1 << i)
        L = randrange(n)
        print ('%2d %6d' % (i, n)),
        fl()
        doit(L)
        L.reverse()
        doit(L)
        doit(L)
        if (n > 4):
            del L[4:]
            L = (L * (n / 4))
            L = map((lambda x: (- (- x))), L)
        doit(L)
        del L
        L = map(abs, ([(-0.5)] * n))
        doit(L)
        L = range(((n / 2) - 1), (-1), (-1))
        L[len(L):] = range((n / 2))
        doit(L)
        print 
