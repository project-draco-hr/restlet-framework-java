{
  if (graceful) {
    if (getLogger().isLoggable(Level.FINER)) {
      getLogger().log(Level.FINER,"Closing connection to " + getSocketAddress() + " gracefully");
    }
    if (getRegistration() != null) {
      getRegistration().setCanceling(true);
    }
    setState(ConnectionState.CLOSING);
  }
 else {
    if (getLogger().isLoggable(Level.FINER)) {
      getLogger().log(Level.FINER,"Closing connection to " + getSocketAddress() + " immediately");
    }
    try {
      Socket socket=getSocket();
      if ((socket != null) && !socket.isClosed()) {
        if (!(socket instanceof SSLSocket)) {
          socket.shutdownInput();
          socket.shutdownOutput();
        }
      }
    }
 catch (    IOException ex) {
      getLogger().log(Level.FINE,"Unable to properly shutdown socket",ex);
    }
 finally {
      setState(ConnectionState.CLOSED);
    }
    try {
      Socket socket=getSocket();
      if ((socket != null) && !socket.isClosed()) {
        getSocket().close();
      }
    }
 catch (    IOException ex) {
      getLogger().log(Level.FINE,"Unable to properly close socket",ex);
    }
 finally {
      setState(ConnectionState.CLOSED);
    }
  }
}
