def _gettempdir_inner():
    'Function to calculate the directory to use.'
    global tempdir
    if (tempdir is not None):
        return tempdir
    try:
        pwd = os.getcwd()
    except (AttributeError, os.error):
        pwd = os.curdir
    attempdirs = ['/tmp', '/var/tmp', '/usr/tmp', pwd]
    if (os.name == 'nt'):
        attempdirs.insert(0, 'C:\\TEMP')
        attempdirs.insert(0, '\\TEMP')
    elif (os.name == 'mac'):
        import macfs, MACFS
        try:
            (refnum, dirid) = macfs.FindFolder(MACFS.kOnSystemDisk, MACFS.kTemporaryFolderType, 1)
            dirname = macfs.FSSpec((refnum, dirid, '')).as_pathname()
            attempdirs.insert(0, dirname)
        except macfs.error:
            pass
    elif (os.name == 'riscos'):
        scrapdir = os.getenv('Wimp$ScrapDir')
        if scrapdir:
            attempdirs.insert(0, scrapdir)
    for envname in ('TMPDIR', 'TEMP', 'TMP'):
        if os.environ.has_key(envname):
            attempdirs.insert(0, os.environ[envname])
    testfile = (gettempprefix() + 'test')
    for dir in attempdirs:
        try:
            filename = os.path.join(dir, testfile)
            if (os.name == 'posix'):
                try:
                    fd = os.open(filename, ((os.O_RDWR | os.O_CREAT) | os.O_EXCL), 448)
                except OSError:
                    pass
                else:
                    fp = os.fdopen(fd, 'w')
                    fp.write('blat')
                    fp.close()
                    os.unlink(filename)
                    del fp, fd
                    tempdir = dir
                    break
            else:
                fp = open(filename, 'w')
                fp.write('blat')
                fp.close()
                os.unlink(filename)
                tempdir = dir
                break
        except IOError:
            pass
    if (tempdir is None):
        msg = ("Can't find a usable temporary directory amongst " + `attempdirs`)
        raise IOError, msg
    return tempdir
