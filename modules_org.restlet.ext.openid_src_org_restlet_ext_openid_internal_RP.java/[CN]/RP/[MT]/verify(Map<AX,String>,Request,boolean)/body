{
  Form params=req.getResourceRef().getQueryAsForm();
  ParameterList response=new ParameterList(params.getValuesMap());
  String sessionId=sessionAware ? params.getFirstValue("sessionId") : null;
  DiscoveryInformation discovered=sessionId != null ? sessions.get(sessionId) : null;
  getLogger().info("retrieved discovery information from session: (" + sessionId + ") "+ discovered);
  String received=req.getResourceRef().getHostIdentifier() + req.getResourceRef().getPath();
  if (req.getResourceRef().hasQuery()) {
    received+="?" + req.getResourceRef().getQuery();
  }
  VerificationResult verification=cm.verify(received,response,discovered);
  Identifier verified=verification.getVerifiedId();
  if (verified != null) {
    AuthSuccess authSuccess=(AuthSuccess)verification.getAuthResponse();
    if (authSuccess.hasExtension(AxMessage.OPENID_NS_AX)) {
      FetchResponse fetchResp=(FetchResponse)authSuccess.getExtension(AxMessage.OPENID_NS_AX);
      MessageExtension ext=authSuccess.getExtension(AxMessage.OPENID_NS_AX);
      if (ext instanceof FetchResponse) {
        @SuppressWarnings("unchecked") List<String> aliases=(List<String>)fetchResp.getAttributeAliases();
        for (        String alias : aliases) {
          String value=fetchResp.getAttributeValue(alias);
          axResp.put(AX.valueOf(alias),value);
        }
      }
    }
  }
  return verified;
}
