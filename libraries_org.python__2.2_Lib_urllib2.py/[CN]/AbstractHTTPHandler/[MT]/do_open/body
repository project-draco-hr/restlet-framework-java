def do_open(self, http_class, req):
    host = req.get_host()
    if (not host):
        raise URLError('no host given')
    h = http_class(host)
    if req.has_data():
        data = req.get_data()
        h.putrequest('POST', req.get_selector())
        if (not req.headers.has_key('Content-type')):
            h.putheader('Content-type', 'application/x-www-form-urlencoded')
        if (not req.headers.has_key('Content-length')):
            h.putheader('Content-length', ('%d' % len(data)))
    else:
        h.putrequest('GET', req.get_selector())
    (scheme, sel) = splittype(req.get_selector())
    (sel_host, sel_path) = splithost(sel)
    h.putheader('Host', (sel_host or host))
    for args in self.parent.addheaders:
        h.putheader(*args)
    for (k, v) in req.headers.items():
        h.putheader(k, v)
    try:
        h.endheaders()
    except socket.error as err:
        raise URLError(err)
    if req.has_data():
        h.send(data)
    (code, msg, hdrs) = h.getreply()
    fp = h.getfile()
    if (code == 200):
        return addinfourl(fp, hdrs, req.get_full_url())
    else:
        return self.parent.error('http', req, fp, code, msg, hdrs)
