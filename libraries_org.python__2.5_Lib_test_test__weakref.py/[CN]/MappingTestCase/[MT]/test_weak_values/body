def test_weak_values(self):
    (dict, objects) = self.make_weak_valued_dict()
    for o in objects:
        self.assert_((weakref.getweakrefcount(o) == 1), ('wrong number of weak references to %r!' % o))
        self.assert_((o is dict[o.arg]), 'wrong object returned by weak dict!')
    items1 = dict.items()
    items2 = dict.copy().items()
    items1.sort()
    items2.sort()
    self.assert_((items1 == items2), 'cloning of weak-valued dictionary did not work!')
    del items1, items2
    self.assert_((len(dict) == self.COUNT))
    del objects[0]
    extra_collect()
    self.assert_((len(dict) == (self.COUNT - 1)), 'deleting object did not cause dictionary update')
    del objects, o
    extra_collect()
    self.assert_((len(dict) == 0), 'deleting the values did not clear the dictionary')
    dict = weakref.WeakValueDictionary()
    self.assertRaises(KeyError, dict.__getitem__, 1)
    dict[2] = C()
    extra_collect()
    self.assertRaises(KeyError, dict.__getitem__, 2)
