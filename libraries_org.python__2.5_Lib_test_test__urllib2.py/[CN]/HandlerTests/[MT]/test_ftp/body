def test_ftp(self):


    class MockFTPWrapper:

        def __init__(self, data):
            self.data = data

        def retrfile(self, filename, filetype):
            (self.filename, self.filetype) = (filename, filetype)
            return (StringIO.StringIO(self.data), len(self.data))


    class NullFTPHandler(urllib2.FTPHandler):

        def __init__(self, data):
            self.data = data

        def connect_ftp(self, user, passwd, host, port, dirs):
            (self.user, self.passwd) = (user, passwd)
            (self.host, self.port) = (host, port)
            self.dirs = dirs
            self.ftpwrapper = MockFTPWrapper(self.data)
            return self.ftpwrapper
    import ftplib, socket
    data = 'rheum rhaponicum'
    h = NullFTPHandler(data)
    o = h.parent = MockOpener()
    for (url, host, port, type_, dirs, filename, mimetype) in [('ftp://localhost/foo/bar/baz.html', 'localhost', ftplib.FTP_PORT, 'I', ['foo', 'bar'], 'baz.html', 'text/html'), ('ftp://localhost:80/foo/bar/', 'localhost', 80, 'D', ['foo', 'bar'], '', None), ('ftp://localhost/baz.gif;type=a', 'localhost', ftplib.FTP_PORT, 'A', [], 'baz.gif', None)]:
        r = h.ftp_open(Request(url))
        self.assert_((h.user == h.passwd == ''))
        self.assertEqual(h.host, socket.gethostbyname(host))
        self.assertEqual(h.port, port)
        self.assertEqual(h.dirs, dirs)
        self.assertEqual(h.ftpwrapper.filename, filename)
        self.assertEqual(h.ftpwrapper.filetype, type_)
        headers = r.info()
        self.assertEqual(headers.get('Content-type'), mimetype)
        self.assertEqual(int(headers['Content-length']), len(data))
