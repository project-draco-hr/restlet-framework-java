def _test_basic_auth(self, opener, auth_handler, auth_header, realm, http_handler, password_manager, request_url, protected_url):
    import base64, httplib
    (user, password) = ('wile', 'coyote')
    auth_handler.add_password(realm, request_url, user, password)
    self.assertEqual(realm, password_manager.realm)
    self.assertEqual(request_url, password_manager.url)
    self.assertEqual(user, password_manager.user)
    self.assertEqual(password, password_manager.password)
    r = opener.open(request_url)
    self.assertEqual(password_manager.target_realm, realm)
    self.assertEqual(password_manager.target_url, protected_url)
    self.assertEqual(len(http_handler.requests), 2)
    self.assertFalse(http_handler.requests[0].has_header(auth_header))
    userpass = ('%s:%s' % (user, password))
    auth_hdr_value = ('Basic ' + base64.encodestring(userpass).strip())
    self.assertEqual(http_handler.requests[1].get_header(auth_header), auth_hdr_value)
    password_manager.user = password_manager.password = None
    http_handler.reset()
    r = opener.open(request_url)
    self.assertEqual(len(http_handler.requests), 1)
    self.assertFalse(http_handler.requests[0].has_header(auth_header))
