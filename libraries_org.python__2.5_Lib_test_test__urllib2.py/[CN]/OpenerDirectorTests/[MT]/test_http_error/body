def test_http_error(self):
    o = OpenerDirector()
    meth_spec = [[('http_open', 'error 302')], [('http_error_400', 'raise'), 'http_open'], [('http_error_302', 'return response'), 'http_error_303', 'http_error'], ['http_error_302']]
    handlers = add_ordered_mock_handlers(o, meth_spec)


    class Unknown:

        def __eq__(self, other):
            return True
    req = Request('http://example.com/')
    r = o.open(req)
    assert (len(o.calls) == 2)
    calls = [(handlers[0], 'http_open', (req,)), (handlers[2], 'http_error_302', (req, Unknown(), 302, '', {}))]
    for (expected, got) in zip(calls, o.calls):
        (handler, method_name, args) = expected
        self.assertEqual((handler, method_name), got[:2])
        self.assertEqual(args, got[2])
