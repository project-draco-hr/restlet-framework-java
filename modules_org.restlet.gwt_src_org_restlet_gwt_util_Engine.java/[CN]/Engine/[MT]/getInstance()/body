{
  Engine result=instance;
  if (result == null) {
    String engineClassName=null;
    ClassLoader cl=getClassLoader();
    URL configURL=cl.getResource(providerResource);
    if (configURL == null) {
      cl=Thread.currentThread().getContextClassLoader();
      configURL=cl.getResource(providerResource);
    }
    if (configURL == null) {
      cl=ClassLoader.getSystemClassLoader();
      configURL=cl.getResource(providerResource);
    }
    if (configURL != null) {
      BufferedReader reader=null;
      try {
        reader=new BufferedReader(new InputStreamReader(configURL.openStream(),"utf-8"));
        String providerName=reader.readLine();
        if (providerName != null)         engineClassName=providerName.substring(0,providerName.indexOf('#')).trim();
      }
 catch (      IOException e) {
        logger.log(Level.SEVERE,"Unable to register the Restlet API implementation. Please check that the JAR file is in your classpath.");
      }
 finally {
        if (reader != null) {
          try {
            reader.close();
          }
 catch (          IOException e) {
            logger.warning("IOException encountered while closing an open BufferedReader" + e.getMessage());
          }
        }
      }
      try {
        instance=(Engine)Class.forName(engineClassName).newInstance();
        result=instance;
      }
 catch (      Exception e) {
        logger.log(Level.SEVERE,"Unable to register the Restlet API implementation",e);
        throw new RuntimeException("Unable to register the Restlet API implementation");
      }
    }
    if (configURL == null) {
      logger.log(Level.SEVERE,"Unable to find an implementation of the Restlet API. Please check your classpath.");
    }
  }
  return result;
}
