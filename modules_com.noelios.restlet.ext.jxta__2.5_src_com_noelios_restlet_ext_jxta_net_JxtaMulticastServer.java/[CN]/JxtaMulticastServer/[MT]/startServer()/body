{
  if (server != null) {
    throw new IllegalStateException("server already started");
  }
  if (logger.isLoggable(Level.FINE)) {
    logger.log(Level.FINE,"jxta multicast server starting");
  }
  try {
    server=new JxtaMulticastSocket(getPeerGroup(),getPipeAdvertisement());
  }
 catch (  IOException ioe) {
    throw new NetworkException("unable to create socket",ioe);
  }
  Callable listener=new Callable(){
    public Object call(){
      listen();
      return null;
    }
  }
;
  if (logger.isLoggable(Level.FINE)) {
    logger.log(Level.FINE,"jxta multicast server started");
  }
}
