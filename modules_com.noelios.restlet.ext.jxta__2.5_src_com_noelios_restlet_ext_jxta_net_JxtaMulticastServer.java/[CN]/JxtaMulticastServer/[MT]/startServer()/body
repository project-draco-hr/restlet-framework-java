{
  if (server != null) {
    throw new IllegalStateException("server already started");
  }
  if (logger.isLoggable(Level.FINE)) {
    logger.log(Level.FINE,"jxta multicast server starting");
  }
  try {
    server=new JxtaMulticastSocket(getPeerGroup(),getPipeAdvertisement());
    server.setSoTimeout(0);
  }
 catch (  IOException ioe) {
    throw new NetworkException("unable to create socket",ioe);
  }
  executor.submit(new Callable<Object>(){
    public Object call() throws IOException {
      listen();
      return null;
    }
  }
);
  if (logger.isLoggable(Level.FINE)) {
    logger.log(Level.FINE,"jxta multicast server started");
  }
}
