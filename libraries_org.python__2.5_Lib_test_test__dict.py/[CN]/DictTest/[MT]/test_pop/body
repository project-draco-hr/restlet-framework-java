def test_pop(self):
    d = {}
    (k, v) = ('abc', 'def')
    d[k] = v
    self.assertRaises(KeyError, d.pop, 'ghi')
    self.assertEqual(d.pop(k), v)
    self.assertEqual(len(d), 0)
    self.assertRaises(KeyError, d.pop, k)
    x = 4503599627370496L
    y = 4503599627370496
    h = {x: 'anything', y: 'something else', }
    self.assertEqual(h[x], h[y])
    self.assertEqual(d.pop(k, v), v)
    d[k] = v
    self.assertEqual(d.pop(k, 1), v)
    self.assertRaises(TypeError, d.pop)


    class Exc(Exception):
        pass


    class BadHash(object):
        fail = False

        def __hash__(self):
            if self.fail:
                raise Exc()
            else:
                return 42
    x = BadHash()
    d[x] = 42
    x.fail = True
    self.assertRaises(Exc, d.pop, x)
