def parse_endtag(self, i):
    rawdata = self.rawdata
    assert (rawdata[i:(i + 2)] == '</'), 'unexpected call to parse_endtag'
    match = endendtag.search(rawdata, (i + 1))
    if (not match):
        return (-1)
    j = match.end()
    match = endtagfind.match(rawdata, i)
    if (not match):
        self.error(('bad end tag: %r' % (rawdata[i:j],)))
    tag = match.group(1)
    self.handle_endtag(tag.lower())
    self.clear_cdata_mode()
    return j
