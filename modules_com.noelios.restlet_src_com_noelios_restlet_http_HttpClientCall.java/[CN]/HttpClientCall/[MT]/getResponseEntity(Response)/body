{
  Representation result=null;
  long size=Representation.UNKNOWN_SIZE;
  Series<Parameter> responseHeaders=getResponseHeaders();
  for (  Parameter header : responseHeaders) {
    if (header.getName().equalsIgnoreCase(HttpConstants.HEADER_CONTENT_LENGTH)) {
      try {
        size=Long.parseLong(header.getValue());
      }
 catch (      NumberFormatException e) {
        getLogger().warning("Unkown value received as content lenght: \"" + header.getValue() + "\".");
      }
    }
 else     if (header.getName().equalsIgnoreCase(HttpConstants.HEADER_TRANSFER_ENCODING)) {
      if (!header.getValue().equalsIgnoreCase("identity")) {
        size=Representation.UNKNOWN_SIZE;
      }
    }
  }
  if (getMethod().equals(Method.HEAD.getName())) {
    result=new EmptyRepresentation();
  }
 else {
    InputStream stream=getResponseEntityStream(size);
    ReadableByteChannel channel=getResponseEntityChannel(size);
    if (stream != null) {
      result=new InputRepresentation(stream,null);
    }
 else     if (channel != null) {
      result=new ReadableRepresentation(channel,null);
    }
  }
  if (result != null) {
    result.setSize(size);
    copyResponseEntityHeaders(responseHeaders,result);
  }
  return result;
}
