def getwidth(self):
    if self.width:
        return self.width
    lo = hi = 0L
    UNITCODES = (ANY, RANGE, IN, LITERAL, NOT_LITERAL, CATEGORY)
    REPEATCODES = (MIN_REPEAT, MAX_REPEAT)
    for (op, av) in self.data:
        if (op is BRANCH):
            i = sys.maxint
            j = 0
            for av in av[1]:
                (l, h) = av.getwidth()
                i = min(i, l)
                j = max(j, h)
            lo = (lo + i)
            hi = (hi + j)
        elif (op is CALL):
            (i, j) = av.getwidth()
            lo = (lo + i)
            hi = (hi + j)
        elif (op is SUBPATTERN):
            (i, j) = av[1].getwidth()
            lo = (lo + i)
            hi = (hi + j)
        elif (op in REPEATCODES):
            (i, j) = av[2].getwidth()
            lo = (lo + (long(i) * av[0]))
            hi = (hi + (long(j) * av[1]))
        elif (op in UNITCODES):
            lo = (lo + 1)
            hi = (hi + 1)
        elif (op == SUCCESS):
            break
    self.width = (int(min(lo, sys.maxint)), int(min(hi, sys.maxint)))
    return self.width
