{
  try {
    DomRepresentation dom=null;
    if (wadl instanceof DomRepresentation) {
      dom=(DomRepresentation)wadl;
    }
 else {
      dom=new DomRepresentation(wadl);
    }
    Application app=new Application(getContext());
    Router root=new Router(app.getContext());
    app.setRoot(root);
    NodeSet resources=dom.getNodes("/application/resources/resource");
    for (    Node resource : resources) {
      String uriPattern=resource.getAttributes().getNamedItem("path").getNodeValue();
      Node idNode=resource.getAttributes().getNamedItem("id");
      if (idNode != null) {
        String targetClassName=idNode.getNodeValue();
        Class targetClass=Class.forName(targetClassName);
        root.attach(uriPattern,targetClass);
      }
 else {
        getLogger().warning("Unable to find the 'id' attribute of the resource element with this path attribute \"" + uriPattern + "\"");
      }
    }
    Node baseNode=dom.getNode("/application/resources/@base");
    Reference baseRef=new Reference(baseNode.getNodeValue());
    Protocol protocol=baseRef.getSchemeProtocol();
    int port=baseRef.getHostPort();
    boolean exists=false;
    if (port == -1) {
      for (      Server server : getServers()) {
        if (server.getProtocols().contains(protocol) && (server.getPort() == protocol.getDefaultPort())) {
          exists=true;
        }
      }
      if (!exists) {
        getServers().add(protocol);
      }
    }
 else {
      for (      Server server : getServers()) {
        if (server.getProtocols().contains(protocol) && (server.getPort() == port)) {
          exists=true;
        }
      }
      if (!exists) {
        getServers().add(protocol,port);
      }
    }
    String hostDomain=baseRef.getHostDomain();
    String hostPort=Integer.toString(baseRef.getHostPort());
    String hostScheme=baseRef.getScheme();
    VirtualHost host=null;
    for (    VirtualHost vh : getHosts()) {
      if (vh.getHostDomain().equals(hostDomain) && vh.getHostPort().equals(hostPort) && vh.getHostScheme().equals(hostScheme)) {
        host=vh;
      }
    }
    if (host == null) {
      host=new VirtualHost(getContext());
      host.setHostDomain(hostDomain);
      host.setHostPort(hostPort);
      host.setHostScheme(hostScheme);
      getHosts().add(host);
    }
    host.attach(baseRef.getPath(),app);
  }
 catch (  Exception e) {
    getLogger().log(Level.WARNING,"Error during the attachment of the WADL application",e);
  }
}
