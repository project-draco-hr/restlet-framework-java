{
  ResourceObject resourceObject=resObjAndPath.resourceObject;
  String remainingPath=resObjAndPath.remainingPath;
  MultivaluedMap<String,String> allTemplParamsEnc=resObjAndPath.allTemplParamsEnc;
  List<ResourceMethod> resourceMethods=new ArrayList<ResourceMethod>();
  Iterable<SubResourceMethod> subResourceMethods=resourceObject.getResourceClass().getSubResourceMethods();
  for (  SubResourceMethod method : subResourceMethods) {
    PathRegExp methodPath=method.getPathRegExp();
    if (Util.isEmptyOrSlash(remainingPath)) {
      if (methodPath.isEmptyOrSlash())       resourceMethods.add(method);
    }
 else {
      if (methodPath.matchesWithEmpty(remainingPath))       resourceMethods.add(method);
    }
  }
  if (resourceMethods.isEmpty())   throw new CouldNotFindMethodException(errorRestletResourceMethodNotFound);
  boolean alsoGet=httpMethod.equals(Method.HEAD);
  removeNotSupportedHttpMethod(resourceMethods,httpMethod,alsoGet);
  if (resourceMethods.isEmpty()) {
    throw new CouldNotFindMethodException(errorRestletMethodNotAllowed);
  }
  if (givenMediaType != null) {
    Iterator<ResourceMethod> methodIter=resourceMethods.iterator();
    while (methodIter.hasNext()) {
      ResourceMethod resourceMethod=methodIter.next();
      if (!resourceMethod.isGivenMediaTypeSupported(givenMediaType))       methodIter.remove();
    }
    if (resourceMethods.isEmpty())     throw new CouldNotFindMethodException(errorRestletUnsupportedMediaType);
  }
  Iterator<ResourceMethod> methodIter=resourceMethods.iterator();
  while (methodIter.hasNext()) {
    ResourceMethod resourceMethod=methodIter.next();
    if (!resourceMethod.isAcceptedMediaTypeSupported(accMediaTypes))     methodIter.remove();
  }
  if (resourceMethods.isEmpty()) {
    throw new CouldNotFindMethodException(errorRestletNotAcceptable);
  }
  ResourceMethod bestResourceMethod=getBestMethod(resourceMethods,givenMediaType,accMediaTypes,httpMethod);
  if (bestResourceMethod == null) {
    throw new RuntimeException("Found no method, but there must be one.");
  }
  return new ResObjAndMeth(resourceObject,bestResourceMethod,allTemplParamsEnc);
}
