{
  Collection<RootResourceClass> eAndCs=new ArrayList<RootResourceClass>();
  for (  RootResourceClass rootResourceClass : this.rootResourceClasses) {
    PathRegExp rrcPathRegExp=rootResourceClass.getPathRegExp();
    MatchingResult matchingResult=rrcPathRegExp.match(u);
    if (matchingResult == null)     continue;
    if (Util.isEmptyOrSlash(matchingResult.getFinalMatchingGroup()))     eAndCs.add(rootResourceClass);
 else     if (rootResourceClass.hasSubResourceMethodsOrLocators())     eAndCs.add(rootResourceClass);
  }
  if (eAndCs.isEmpty())   throwRootResourceNotFound(u);
  RootResourceClass tClass=getFirstRrcByNumberOfLiteralCharactersAndByNumberOfCapturingGroups(eAndCs);
  PathRegExp rMatch=tClass.getPathRegExp();
  MatchingResult matchResult=rMatch.match(u);
  u=matchResult.getFinalCapturingGroup();
  addMrVarsToMap(matchResult,callContext);
  return new RrcAndRemPath(tClass,u);
}
