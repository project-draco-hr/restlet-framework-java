{
  if (eWithMethod == null || eWithMethod.isEmpty())   return null;
  Iterator<SubResourceMethodOrLocator> srmlIter=eWithMethod.iterator();
  SubResourceMethodOrLocator bestSrml=srmlIter.next();
  if (eWithMethod.size() == 1)   return bestSrml;
  int bestSrmlChars=Integer.MIN_VALUE;
  int bestSrmlNoCaptGroups=Integer.MIN_VALUE;
  for (  SubResourceMethodOrLocator srml : eWithMethod) {
    int srmlNoLitChars=srml.getPathRegExp().getNumberOfLiteralChars();
    int srmlNoCaptGroups=srml.getPathRegExp().getNumberOfCapturingGroups();
    if (srmlNoLitChars > bestSrmlChars) {
      bestSrml=srml;
      bestSrmlChars=srmlNoLitChars;
      bestSrmlNoCaptGroups=srmlNoCaptGroups;
      continue;
    }
    if (srmlNoLitChars == bestSrmlChars) {
      if (srmlNoCaptGroups > bestSrmlNoCaptGroups) {
        bestSrml=srml;
        bestSrmlChars=srmlNoLitChars;
        bestSrmlNoCaptGroups=srmlNoCaptGroups;
        continue;
      }
      if (srmlNoCaptGroups == bestSrmlNoCaptGroups) {
        if (srml.getPathRegExp().equals(bestSrml.getPathRegExp())) {
          continue;
        }
        String message="There are multiple methods on the Resource class (" + bestSrml.getResourceClass().getName() + "), that could handle the request: "+ bestSrml.getName()+ " and "+ srml.getName();
        throwMultipleResourceMethods(message);
      }
    }
  }
  return bestSrml;
}
