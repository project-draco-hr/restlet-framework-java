{
  RootResourceClass newRrc;
  try {
    newRrc=wrapperFactory.getRootResourceClass(rootResourceClass);
  }
 catch (  IllegalPathOnClassException e) {
    getLogger().warning("The root resource class " + rootResourceClass.getName() + " is annotated with an illegal path: "+ e.getPath()+ ". ("+ e.getMessage()+ ")");
    return false;
  }
catch (  IllegalArgumentException e) {
    getLogger().log(Level.WARNING,"The root resource class " + rootResourceClass.getName() + " is not a valud root resource class: "+ e.getMessage(),e);
    return false;
  }
catch (  MissingAnnotationException e) {
    getLogger().log(Level.WARNING,"The root resource class " + rootResourceClass.getName() + " is not a valud root resource class: "+ e.getMessage(),e);
    return false;
  }
catch (  MissingConstructorException e) {
    getLogger().warning("The root resource class " + rootResourceClass.getName() + " has no valid constructor");
    return false;
  }
  PathRegExp uriTempl=newRrc.getPathRegExp();
  for (  RootResourceClass rrc : this.rootResourceClasses) {
    if (rrc.getJaxRsClass().equals(rootResourceClass)) {
      return true;
    }
    if (rrc.getPathRegExp().equals(uriTempl)) {
      getLogger().warning("There is already a root resource class with path " + uriTempl.getPathPattern());
      return false;
    }
  }
  rootResourceClasses.add(newRrc);
  return true;
}
