{
  SortedMetadata<MediaType> givenMediaTypes;
  if (givenMediaType != null)   givenMediaTypes=SortedMetadata.singleton(givenMediaType);
 else   givenMediaTypes=null;
  Map<ResourceMethod,List<MediaType>> mms=findMethodSupportsMime(resourceMethods,ConsOrProdMime.CONSUME_MIME,givenMediaTypes);
  if (mms.isEmpty())   throw new WebApplicationException(500);
  if (mms.size() == 1)   return Util.getFirstKey(mms);
  mms=findMethodSupportsMime(mms.keySet(),ConsOrProdMime.PRODUCE_MIME,accMediaTypes);
  if (mms.isEmpty())   throw new WebApplicationException(500);
  if (mms.size() == 1)   return Util.getFirstKey(mms);
  for (  MediaType accMediaType : accMediaTypes) {
    ResourceMethod bestMethod=null;
    for (    Map.Entry<ResourceMethod,List<MediaType>> mm : mms.entrySet()) {
      for (      MediaType methodMediaType : mm.getValue()) {
        if (accMediaType.includes(methodMediaType)) {
          ResourceMethod currentMethod=mm.getKey();
          if (bestMethod == null) {
            bestMethod=currentMethod;
          }
 else {
            if (httpMethod.equals(Method.HEAD)) {
              Method bestMethodHttp=bestMethod.getHttpMethod();
              if (bestMethodHttp.equals(Method.GET) && currentMethod.getHttpMethod().equals(Method.HEAD)) {
              }
 else               if (bestMethod.getHttpMethod().equals(Method.HEAD) && currentMethod.getHttpMethod().equals(Method.GET)) {
                bestMethod=currentMethod;
              }
 else {
                throwMultipleResourceMethods("Multiple java methods found on " + currentMethod.getResourceClass().getName() + ": "+ bestMethod.getName()+ " and "+ currentMethod.getName());
              }
            }
 else {
              throwMultipleResourceMethods("Multiple java methods found for this request: " + bestMethod.getName() + " and "+ currentMethod.getName());
            }
          }
        }
      }
    }
    if (bestMethod != null)     return bestMethod;
  }
  throw new WebApplicationException(500);
}
