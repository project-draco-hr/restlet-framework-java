def classic():
    if verbose:
        print 'Testing classic classes...'


    class C:

        def foo(*a):
            return a
        goo = classmethod(foo)
    c = C()
    vereq(C.goo(1), (C, 1))
    vereq(c.goo(1), (C, 1))
    vereq(c.foo(1), (c, 1))


    class D(C):
        pass
    d = D()
    vereq(D.goo(1), (D, 1))
    vereq(d.goo(1), (D, 1))
    vereq(d.foo(1), (d, 1))
    vereq(D.foo(d, 1), (d, 1))


    class E:
        foo = C.foo
    vereq(E().foo, C.foo)
    verify(repr(C.foo.__get__(C())).startswith('<bound method '))
