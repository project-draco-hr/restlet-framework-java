def subclass_right_op():
    if verbose:
        print 'Testing correct dispatch of subclass overloading __r<op>__...'


    class B(int):

        def __floordiv__(self, other):
            return 'B.__floordiv__'

        def __rfloordiv__(self, other):
            return 'B.__rfloordiv__'
    vereq((B(1) // 1), 'B.__floordiv__')
    vereq((1 // B(1)), 'B.__rfloordiv__')


    class C(object):

        def __floordiv__(self, other):
            return 'C.__floordiv__'

        def __rfloordiv__(self, other):
            return 'C.__rfloordiv__'
    vereq((C() // 1), 'C.__floordiv__')
    vereq((1 // C()), 'C.__rfloordiv__')


    class D(C):

        def __floordiv__(self, other):
            return 'D.__floordiv__'

        def __rfloordiv__(self, other):
            return 'D.__rfloordiv__'
    vereq((D() // C()), 'D.__floordiv__')
    vereq((C() // D()), 'D.__rfloordiv__')


    class E(C):
        pass
    vereq(E.__rfloordiv__, C.__rfloordiv__)
    vereq((E() // 1), 'C.__floordiv__')
    vereq((1 // E()), 'C.__rfloordiv__')
    vereq((E() // C()), 'C.__floordiv__')
    vereq((C() // E()), 'C.__floordiv__')
