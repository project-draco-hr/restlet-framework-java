def testset2op(a, b, c, res, stmt='a[b]=c', meth='__setitem__'):
    if verbose:
        print 'checking', stmt
    dict = {'a': deepcopy(a), 'b': b, 'c': c, }
    exec stmt in dict
    vereq(dict['a'], res)
    t = type(a)
    m = getattr(t, meth)
    while (meth not in t.__dict__):
        t = t.__bases__[0]
    vereq(m, t.__dict__[meth])
    dict['a'] = deepcopy(a)
    m(dict['a'], b, c)
    vereq(dict['a'], res)
    dict['a'] = deepcopy(a)
    bm = getattr(dict['a'], meth)
    bm(b, c)
    vereq(dict['a'], res)
