def str_of_str_subclass():
    import binascii
    import cStringIO
    if verbose:
        print 'Testing __str__ defined in subclass of str ...'


    class octetstring(str):

        def __str__(self):
            return binascii.b2a_hex(self)

        def __repr__(self):
            return (self + ' repr')
    o = octetstring('A')
    vereq(type(o), octetstring)
    vereq(type(str(o)), str)
    vereq(type(repr(o)), str)
    vereq(ord(o), 65)
    vereq(str(o), '41')
    vereq(repr(o), 'A repr')
    vereq(o.__str__(), '41')
    vereq(o.__repr__(), 'A repr')
    capture = cStringIO.StringIO()
    print  >> capture, o
    print  >> capture, str(o)
    vereq(capture.getvalue(), '41\n41\n')
    capture.close()
