def meth_class_get():
    if verbose:
        print 'Testing __get__ method of METH_CLASS C methods...'
    arg = [1, 2, 3]
    res = {1: None, 2: None, 3: None, }
    vereq(dict.fromkeys(arg), res)
    vereq({}.fromkeys(arg), res)
    descr = dict.__dict__['fromkeys']
    vereq(descr.__get__(None, dict)(arg), res)
    vereq(descr.__get__({})(arg), res)
    try:
        descr.__get__(None, None)
    except TypeError:
        pass
    else:
        raise TestFailed, "shouldn't have allowed descr.__get__(None, None)"
    try:
        descr.__get__(42)
    except TypeError:
        pass
    else:
        raise TestFailed, "shouldn't have allowed descr.__get__(42)"
    try:
        descr.__get__(None, 42)
    except TypeError:
        pass
    else:
        raise TestFailed, "shouldn't have allowed descr.__get__(None, 42)"
    try:
        descr.__get__(None, int)
    except TypeError:
        pass
    else:
        raise TestFailed, "shouldn't have allowed descr.__get__(None, int)"
