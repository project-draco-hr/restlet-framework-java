{
  Representation result=null;
  long contentLength=HeaderUtils.getContentLength(headers);
  boolean chunkedEncoding=HeaderUtils.isChunkedEncoding(headers);
  boolean connectionClose=HeaderUtils.isConnectionClose(headers);
  if ((contentLength != Representation.UNKNOWN_SIZE && contentLength != 0) || chunkedEncoding || connectionClose) {
    ReadableSelectionChannel inboundEntityChannel=null;
    if (chunkedEncoding) {
      inboundEntityChannel=new ReadableChunkedChannel(this,getBuffer(),getConnection().getReadableSelectionChannel());
    }
 else {
      inboundEntityChannel=new ReadableSizedSelectionChannel(this,getBuffer(),getConnection().getReadableSelectionChannel(),contentLength);
    }
    setEntityRegistration(inboundEntityChannel.getRegistration());
    if (inboundEntityChannel != null) {
      result=new ReadableRepresentation(inboundEntityChannel,null,contentLength);
      result.setSize(contentLength);
      setMessageState(MessageState.BODY);
    }
  }
 else {
    result=new EmptyRepresentation();
  }
  if (headers != null) {
    try {
      result=HeaderUtils.extractEntityHeaders(headers,result);
    }
 catch (    Throwable t) {
      getLogger().log(Level.WARNING,"Error while parsing entity headers",t);
    }
  }
  return result;
}
