def _do_single(self, filename):
    self.failUnless(os.path.exists(filename))
    self.failUnless(os.path.isfile(filename))
    self.failUnless(os.access(filename, os.R_OK))
    self.failUnless(os.path.exists(os.path.abspath(filename)))
    self.failUnless(os.path.isfile(os.path.abspath(filename)))
    self.failUnless(os.access(os.path.abspath(filename), os.R_OK))
    os.chmod(filename, 511)
    os.utime(filename, None)
    os.utime(filename, (time.time(), time.time()))
    self._do_copyish(filename, filename)
    self.failUnless((os.path.abspath(filename) == os.path.abspath(glob.glob(filename)[0])))
    (path, base) = os.path.split(os.path.abspath(filename))
    if isinstance(base, str):
        base = base.decode(TESTFN_ENCODING)
    file_list = os.listdir(path)
    if (file_list and isinstance(file_list[0], str)):
        file_list = [f.decode(TESTFN_ENCODING) for f in file_list]
    base = unicodedata.normalize('NFD', base)
    file_list = [unicodedata.normalize('NFD', f) for f in file_list]
    self.failUnless((base in file_list))
