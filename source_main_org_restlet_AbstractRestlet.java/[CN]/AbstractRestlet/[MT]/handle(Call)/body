{
  T genericCall=(T)call;
  if (call.getMethod().equals(Methods.GET)) {
    handleGet(genericCall);
  }
 else   if (call.getMethod().equals(Methods.POST)) {
    handlePost(genericCall);
  }
 else   if (call.getMethod().equals(Methods.PUT)) {
    handlePut(genericCall);
  }
 else   if (call.getMethod().equals(Methods.DELETE)) {
    handleDelete(genericCall);
  }
 else   if (call.getMethod().equals(Methods.HEAD)) {
    handleHead(genericCall);
  }
 else   if (call.getMethod().equals(Methods.CONNECT)) {
    handleConnect(genericCall);
  }
 else   if (call.getMethod().equals(Methods.OPTIONS)) {
    handleOptions(genericCall);
  }
 else   if (call.getMethod().equals(Methods.TRACE)) {
    handleTrace(genericCall);
  }
 else   if (call.getMethod().equals(Methods.MOVE)) {
    handleMove(genericCall);
  }
 else   if (call.getMethod().equals(Methods.COPY)) {
    handleCopy(genericCall);
  }
 else   if (call.getMethod().equals(Methods.LOCK)) {
    handleLock(genericCall);
  }
 else   if (call.getMethod().equals(Methods.MKCOL)) {
    handleMakeCollection(genericCall);
  }
 else   if (call.getMethod().equals(Methods.PROPFIND)) {
    handleFindProperties(genericCall);
  }
 else   if (call.getMethod().equals(Methods.PROPPATCH)) {
    handlePatchProperties(genericCall);
  }
 else   if (call.getMethod().equals(Methods.UNLOCK)) {
    handleUnlock(genericCall);
  }
}
