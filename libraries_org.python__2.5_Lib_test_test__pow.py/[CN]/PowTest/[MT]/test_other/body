def test_other(self):
    self.assertEquals((pow(3, 3) % 8), pow(3, 3, 8))
    self.assertEquals((pow(3, 3) % (-8)), pow(3, 3, (-8)))
    self.assertEquals((pow(3, 2) % (-2)), pow(3, 2, (-2)))
    self.assertEquals((pow((-3), 3) % 8), pow((-3), 3, 8))
    self.assertEquals((pow((-3), 3) % (-8)), pow((-3), 3, (-8)))
    self.assertEquals((pow(5, 2) % (-8)), pow(5, 2, (-8)))
    self.assertEquals((pow(3L, 3L) % 8), pow(3L, 3L, 8))
    self.assertEquals((pow(3L, 3L) % (-8)), pow(3L, 3L, (-8)))
    self.assertEquals((pow(3L, 2) % (-2)), pow(3L, 2, (-2)))
    self.assertEquals((pow((-3L), 3L) % 8), pow((-3L), 3L, 8))
    self.assertEquals((pow((-3L), 3L) % (-8)), pow((-3L), 3L, (-8)))
    self.assertEquals((pow(5L, 2) % (-8)), pow(5L, 2, (-8)))
    for i in range((-10), 11):
        for j in range(0, 6):
            for k in range((-7), 11):
                if ((j >= 0) and (k != 0)):
                    self.assertEquals((pow(i, j) % k), pow(i, j, k))
                if ((j >= 0) and (k != 0)):
                    self.assertEquals((pow(long(i), j) % k), pow(long(i), j, k))
