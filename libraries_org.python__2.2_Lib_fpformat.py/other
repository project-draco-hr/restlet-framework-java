'General floating point formatting functions.\n\nFunctions:\nfix(x, digits_behind)\nsci(x, digits_behind)\n\nEach takes a number or a string and a number of digits as arguments.\n\nParameters:\nx:             number to be formatted; or a string resembling a number\ndigits_behind: number of digits behind the decimal point\n'
import re
__all__ = ['fix', 'sci', 'NotANumber']
decoder = re.compile('^([-+]?)0*(\\d*)((?:\\.\\d*)?)(([eE][-+]?\\d+)?)$')
try:


    class NotANumber(ValueError):
        pass
except TypeError:
    NotANumber = 'fpformat.NotANumber'
