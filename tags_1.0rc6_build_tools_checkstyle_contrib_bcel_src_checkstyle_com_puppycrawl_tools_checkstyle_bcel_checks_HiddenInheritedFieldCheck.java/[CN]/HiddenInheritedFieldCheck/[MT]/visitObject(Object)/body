{
  final JavaClass javaClass=(JavaClass)aJavaClass;
  final String className=javaClass.getClassName();
  final JavaClass[] superClasses=javaClass.getSuperClasses();
  final Field[] fields=javaClass.getFields();
  for (int i=0; i < fields.length; i++) {
    final Field field=fields[i];
    for (int j=0; j < superClasses.length; j++) {
      final JavaClass superClass=superClasses[j];
      final String superClassName=superClass.getClassName();
      final Field[] superClassFields=superClass.getFields();
      for (int k=0; k < superClassFields.length; k++) {
        final Field superClassField=superClassFields[k];
        if (!superClassField.isPrivate() && superClassField.getName().equals(field.getName()) && !ignore(className,field)) {
          log(javaClass,0,"hidden.inherited.field",new Object[]{fields[i],superClassName});
        }
      }
    }
  }
}
