def read(self, size=(-1)):
    ' Decodes data from the stream self.stream and returns the\n            resulting object.\n\n            size indicates the approximate maximum number of bytes to\n            read from the stream for decoding purposes. The decoder\n            can modify this setting as appropriate. The default value\n            -1 indicates to read and decode as much as possible.  size\n            is intended to prevent having to decode huge files in one\n            step.\n\n            The method should use a greedy read strategy meaning that\n            it should read as much data as is allowed within the\n            definition of the encoding and the given size, e.g.  if\n            optional encoding endings or state markers are available\n            on the stream, these should be read too.\n\n        '
    if (size < 0):
        return self.decode(self.stream.read(), self.errors)[0]
    read = self.stream.read
    decode = self.decode
    data = read(size)
    i = 0
    while 1:
        try:
            (object, decodedbytes) = decode(data, self.errors)
        except ValueError as why:
            i = (i + 1)
            newdata = read(1)
            if ((not newdata) or (i > 10)):
                raise
            data = (data + newdata)
        else:
            return object
