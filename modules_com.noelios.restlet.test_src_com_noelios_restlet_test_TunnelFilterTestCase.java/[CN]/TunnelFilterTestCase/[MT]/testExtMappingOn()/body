{
  createGet(UNEFFECTED);
  filter();
  check(UNEFFECTED,"ab");
  assertLanguages();
  assertCharSets();
  assertCharSets();
  assertMediaTypes();
  createGet(EFFECTED);
  filter();
  check("http://example.org/adf.asdf/af",null);
  assertMediaTypes(MediaType.TEXT_HTML);
  assertLanguages();
  assertCharSets();
  assertCharSets();
  createGetFromPath("afhhh");
  filter();
  checkFromPath(null,null);
  assertEqualSet(accMediaTypes);
  assertLanguages();
  assertEncodings();
  assertCharSets();
  createGetFromPath("hksf.afsdf");
  filter();
  checkFromPath(null,"afsdf");
  assertMediaTypes();
  assertLanguages();
  assertEncodings();
  assertCharSets();
  createGetFromPath("hksf.afsdf.html");
  filter();
  checkFromPath("hksf.afsdf","afsdf");
  assertMediaTypes(MediaType.TEXT_HTML);
  assertLanguages();
  assertEncodings();
  assertCharSets();
  createGetFromPath("hksf.afsdf.html.txt");
  filter();
  checkFromPath("hksf.afsdf.html","afsdf.html");
  assertMediaTypes(MediaType.TEXT_PLAIN);
  assertLanguages();
  assertEncodings();
  assertCharSets();
  createGetFromPath("hksf.html.afsdf.txt");
  filter();
  checkFromPath("hksf.html.afsdf","html.afsdf");
  assertMediaTypes(MediaType.TEXT_PLAIN);
  assertLanguages();
  assertEncodings();
  assertCharSets();
  createGetFromPath("hksf.html.afsdf.txt.en.fr");
  filter();
  checkFromPath("hksf.html.afsdf.txt.en","html.afsdf.txt.en");
  assertMediaTypes();
  assertLanguages(Language.FRENCH);
  assertEncodings();
  assertCharSets();
  createGetFromPath("hksf.html.afsdf.txt.en");
  filter();
  checkFromPath("hksf.html.afsdf","html.afsdf");
  assertMediaTypes(MediaType.TEXT_PLAIN);
  assertLanguages(Language.ENGLISH);
  assertEncodings();
  assertCharSets();
  createGet(START_REF_FOR_PATH_TEST);
  filter();
  checkFromPath(null,null);
  assertMediaTypes();
  assertLanguages();
  assertEncodings();
  assertCharSets();
}
