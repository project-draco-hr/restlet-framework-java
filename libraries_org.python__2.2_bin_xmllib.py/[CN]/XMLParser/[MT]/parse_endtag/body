def parse_endtag(self, i):
    rawdata = self.rawdata
    end = endbracketfind.match(rawdata, (i + 1))
    if (end is None):
        return (-1)
    res = tagfind.match(rawdata, (i + 2))
    if (res is None):
        if self.literal:
            self.handle_data(rawdata[i])
            return (i + 1)
        if (not self.__accept_missing_endtag_name):
            self.syntax_error('no name specified in end tag')
        tag = self.stack[(-1)][0]
        k = (i + 2)
    else:
        tag = res.group(0)
        if self.__map_case:
            tag = tag.lower()
        if self.literal:
            if ((not self.stack) or (tag != self.stack[(-1)][0])):
                self.handle_data(rawdata[i])
                return (i + 1)
        k = res.end(0)
    if (endbracket.match(rawdata, k) is None):
        self.syntax_error('garbage in end tag')
    self.finish_endtag(tag)
    return end.end(0)
