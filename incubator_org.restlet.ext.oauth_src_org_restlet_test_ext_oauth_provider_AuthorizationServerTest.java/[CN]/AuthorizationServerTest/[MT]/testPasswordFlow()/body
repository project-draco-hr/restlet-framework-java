{
  OAuthUser user=OAuthFlows.doFlow(client.getOauthParameters(),null,null,OAuthTestApplication.TEST_USER,OAuthTestApplication.TEST_PASS,null,Flow.PASSWORD);
  assertNotNull(user);
  Reference ref=new Reference(prot + "://localhost:" + serverPort+ "/server/protected");
  ref.addQueryParameter("oauth_token",user.getAccessToken());
  ClientResource cr=new ClientResource(ref);
  Representation r=cr.get();
  assertNotNull(r);
  String text=r.getText();
  assertEquals("Response text test",text,"TestSuccessful");
  assertEquals("Response content type test",r.getMediaType(),MediaType.TEXT_HTML);
  cr.release();
  try {
    user=OAuthFlows.doFlow(client.getOauthParameters(),null,null,"somewrong",OAuthTestApplication.TEST_PASS,null,Flow.PASSWORD);
  }
 catch (  ResourceException re) {
    assertEquals(Status.CLIENT_ERROR_BAD_REQUEST,re.getStatus());
  }
  try {
    user=OAuthFlows.doFlow(client.getOauthParameters(),null,null,OAuthTestApplication.TEST_USER,"somewrong",null,Flow.PASSWORD);
  }
 catch (  ResourceException re) {
    assertEquals(Status.CLIENT_ERROR_FORBIDDEN,re.getStatus());
  }
}
