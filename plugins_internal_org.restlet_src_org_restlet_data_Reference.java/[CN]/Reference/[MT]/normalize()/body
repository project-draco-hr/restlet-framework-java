{
  StringBuilder output=new StringBuilder();
  StringBuilder input=new StringBuilder();
  String path=getPath();
  if (path != null)   input.append(path);
  while (input.length() > 0) {
    if ((input.length() >= 3) && input.substring(0,3).equals("../")) {
      input.delete(0,3);
    }
 else     if ((input.length() >= 2) && input.substring(0,2).equals("./")) {
      input.delete(0,2);
    }
 else     if ((input.length() >= 3) && input.substring(0,3).equals("/./")) {
      input.delete(0,2);
    }
 else     if ((input.length() == 2) && input.substring(0,2).equals("/.")) {
      input.delete(1,2);
    }
 else     if ((input.length() >= 4) && input.substring(0,4).equals("/../")) {
      input.delete(0,3);
      removeLastSegment(output);
    }
 else     if ((input.length() == 3) && input.substring(0,3).equals("/..")) {
      input.delete(1,3);
      removeLastSegment(output);
    }
 else     if ((input.length() == 1) && input.substring(0,1).equals(".")) {
      input.delete(0,1);
    }
 else     if ((input.length() == 2) && input.substring(0,2).equals("..")) {
      input.delete(0,2);
    }
 else {
      int max=-1;
      for (int i=1; (max == -1) && (i < input.length()); i++) {
        if (input.charAt(i) == '/')         max=i;
      }
      if (max != -1) {
        output.append(input.substring(0,max));
        input.delete(0,max);
      }
 else {
        output.append(input);
        input.delete(0,input.length());
      }
    }
  }
  setPath(output.toString());
  setScheme(getScheme());
  setHostName(getHostName());
  return this;
}
