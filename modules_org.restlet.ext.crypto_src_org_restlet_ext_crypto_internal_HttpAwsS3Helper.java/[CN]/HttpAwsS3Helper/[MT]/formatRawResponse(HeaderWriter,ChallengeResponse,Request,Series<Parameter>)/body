{
  final String methodName=request.getMethod().getName();
  String date="";
  if (httpHeaders.getFirstValue("X-Amz-Date",true) == null) {
    date=httpHeaders.getFirstValue(HeaderConstants.HEADER_DATE,true);
    if (date == null) {
      date=DateUtils.format(new Date(),DateUtils.FORMAT_RFC_1123.get(0));
      httpHeaders.add(HeaderConstants.HEADER_DATE,date);
    }
  }
  String contentMd5=httpHeaders.getFirstValue(HeaderConstants.HEADER_CONTENT_MD5,true);
  if (contentMd5 == null) {
    contentMd5="";
  }
  String contentType=httpHeaders.getFirstValue(HeaderConstants.HEADER_CONTENT_TYPE,true);
  if (contentType == null) {
    boolean applyPatch=false;
    final String jvmVendor=System.getProperty("java.vm.vendor");
    if ((jvmVendor != null) && (jvmVendor.toLowerCase()).startsWith("sun")) {
      final int majorVersionNumber=SystemUtils.getJavaMajorVersion();
      final int minorVersionNumber=SystemUtils.getJavaMinorVersion();
      if (majorVersionNumber == 1) {
        if (minorVersionNumber < 5) {
          applyPatch=true;
        }
 else         if (minorVersionNumber == 5) {
          applyPatch=(SystemUtils.getJavaUpdateVersion() < 10);
        }
      }
    }
    if (applyPatch && !request.getMethod().equals(Method.PUT)) {
      contentType="application/x-www-form-urlencoded";
    }
 else {
      contentType="";
    }
  }
  final String canonicalizedAmzHeaders=getCanonicalizedAmzHeaders(httpHeaders);
  final String canonicalizedResource=getCanonicalizedResourceName(request.getResourceRef());
  final StringBuilder rest=new StringBuilder();
  rest.append(methodName).append('\n').append(contentMd5).append('\n').append(contentType).append('\n').append(date).append('\n').append(canonicalizedAmzHeaders).append(canonicalizedResource);
  sb.append(challenge.getIdentifier()).append(':').append(Base64.encode(DigestUtils.toHMac(rest.toString(),BioUtils.toByteArray(challenge.getSecret())),false));
}
