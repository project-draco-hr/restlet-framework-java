def testInsertBefore():
    dom = parseString('<doc><foo/></doc>')
    root = dom.documentElement
    elem = root.childNodes[0]
    nelem = dom.createElement('element')
    root.insertBefore(nelem, elem)
    confirm(((len(root.childNodes) == 2) and (root.childNodes.length == 2) and (root.childNodes[0] is nelem) and (root.childNodes.item(0) is nelem) and (root.childNodes[1] is elem) and (root.childNodes.item(1) is elem) and (root.firstChild is nelem) and (root.lastChild is elem) and (root.toxml() == '<doc><element/><foo/></doc>')), 'testInsertBefore -- node properly placed in tree')
    nelem = dom.createElement('element')
    root.insertBefore(nelem, None)
    confirm(((len(root.childNodes) == 3) and (root.childNodes.length == 3) and (root.childNodes[1] is elem) and (root.childNodes.item(1) is elem) and (root.childNodes[2] is nelem) and (root.childNodes.item(2) is nelem) and (root.lastChild is nelem) and (nelem.previousSibling is elem) and (root.toxml() == '<doc><element/><foo/><element/></doc>')), 'testInsertBefore -- node properly placed in tree')
    nelem2 = dom.createElement('bar')
    root.insertBefore(nelem2, nelem)
    confirm(((len(root.childNodes) == 4) and (root.childNodes.length == 4) and (root.childNodes[2] is nelem2) and (root.childNodes.item(2) is nelem2) and (root.childNodes[3] is nelem) and (root.childNodes.item(3) is nelem) and (nelem2.nextSibling is nelem) and (nelem.previousSibling is nelem2) and (root.toxml() == '<doc><element/><foo/><bar/><element/></doc>')), 'testInsertBefore -- node properly placed in tree')
    dom.unlink()
