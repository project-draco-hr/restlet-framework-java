import urlparse
errors = 0
RFC1808_BASE = 'http://a/b/c/d;p?q#f'
for (url, expected) in [('http://www.python.org', ('http', 'www.python.org', '', '', '', '')), ('http://www.python.org#abc', ('http', 'www.python.org', '', '', '', 'abc')), ('http://www.python.org/#abc', ('http', 'www.python.org', '/', '', '', 'abc')), (RFC1808_BASE, ('http', 'a', '/b/c/d', 'p', 'q', 'f')), ('file:///tmp/junk.txt', ('file', '', '/tmp/junk.txt', '', '', ''))]:
    result = urlparse.urlparse(url)
    print ('%-13s = %r' % (url, result))
    if (result != expected):
        errors += 1
        print ('urlparse(%r)' % url)
        print ('expected %r,\n     got %r' % (expected, result))
    result2 = urlparse.urlunparse(result)
    assert (result2 == url)
print 
print 'urlparse.urljoin() tests'
print 
checkJoin('g:h', 'g:h')
checkJoin('g', 'http://a/b/c/g')
checkJoin('./g', 'http://a/b/c/g')
checkJoin('g/', 'http://a/b/c/g/')
checkJoin('/g', 'http://a/g')
checkJoin('//g', 'http://g')
checkJoin('?y', 'http://a/b/c/d;p?y')
checkJoin('g?y', 'http://a/b/c/g?y')
checkJoin('g?y/./x', 'http://a/b/c/g?y/./x')
checkJoin('#s', 'http://a/b/c/d;p?q#s')
checkJoin('g#s', 'http://a/b/c/g#s')
checkJoin('g#s/./x', 'http://a/b/c/g#s/./x')
checkJoin('g?y#s', 'http://a/b/c/g?y#s')
checkJoin(';x', 'http://a/b/c/d;x')
checkJoin('g;x', 'http://a/b/c/g;x')
checkJoin('g;x?y#s', 'http://a/b/c/g;x?y#s')
checkJoin('.', 'http://a/b/c/')
checkJoin('./', 'http://a/b/c/')
checkJoin('..', 'http://a/b/')
checkJoin('../', 'http://a/b/')
checkJoin('../g', 'http://a/b/g')
checkJoin('../..', 'http://a/')
checkJoin('../../', 'http://a/')
checkJoin('../../g', 'http://a/g')
checkJoin('', 'http://a/b/c/d;p?q#f')
checkJoin('../../../g', 'http://a/../g')
checkJoin('../../../../g', 'http://a/../../g')
checkJoin('/./g', 'http://a/./g')
checkJoin('/../g', 'http://a/../g')
checkJoin('g.', 'http://a/b/c/g.')
checkJoin('.g', 'http://a/b/c/.g')
checkJoin('g..', 'http://a/b/c/g..')
checkJoin('..g', 'http://a/b/c/..g')
checkJoin('./../g', 'http://a/b/g')
checkJoin('./g/.', 'http://a/b/c/g/')
checkJoin('g/./h', 'http://a/b/c/g/h')
checkJoin('g/../h', 'http://a/b/c/h')
print errors, 'errors'
for u in ['Python', './Python']:
    if (urlparse.urlunparse(urlparse.urlparse(u)) != u):
        print '*** urlparse/urlunparse failure for', `u`
