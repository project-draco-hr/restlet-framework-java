{
  Representation result=null;
  long contentLength=getContentLength();
  boolean chunkedEncoding=HeaderUtils.isChunkedEncoding(getRequestHeaders());
  boolean connectionClosed=HeaderUtils.isConnectionClose(getRequestHeaders());
  if (((contentLength != Representation.UNKNOWN_SIZE) && (contentLength != 0)) || chunkedEncoding || connectionClosed) {
    InputStream requestStream=getRequestEntityStream(contentLength);
    if (connectionClosed) {
      PushbackInputStream pbi=new PushbackInputStream(requestStream);
      try {
        int next=pbi.read();
        if (next != -1) {
          pbi.unread(next);
          requestStream=pbi;
        }
 else {
          requestStream=null;
        }
      }
 catch (      IOException e) {
        getLogger().fine("Unable to read request entity");
      }
    }
    if (requestStream != null) {
      result=new InputRepresentation(requestStream,null,contentLength);
    }
 else {
      result=new EmptyRepresentation();
    }
    result.setSize(contentLength);
  }
 else {
    result=new EmptyRepresentation();
  }
  for (  Parameter header : getRequestHeaders()) {
    if (header.getName().equalsIgnoreCase(HeaderConstants.HEADER_CONTENT_ENCODING)) {
      new EncodingReader(header.getValue()).addValues(result.getEncodings());
    }
 else     if (header.getName().equalsIgnoreCase(HeaderConstants.HEADER_CONTENT_LANGUAGE)) {
      new LanguageReader(header.getValue()).addValues(result.getLanguages());
    }
 else     if (header.getName().equalsIgnoreCase(HeaderConstants.HEADER_CONTENT_TYPE)) {
      ContentType contentType=new ContentType(header.getValue());
      result.setMediaType(contentType.getMediaType());
      result.setCharacterSet(contentType.getCharacterSet());
    }
 else     if (header.getName().equalsIgnoreCase(HeaderConstants.HEADER_CONTENT_RANGE)) {
      RangeReader.update(header.getValue(),result);
    }
 else     if (header.getName().equalsIgnoreCase(HeaderConstants.HEADER_CONTENT_MD5)) {
      result.setDigest(new Digest(Digest.ALGORITHM_MD5,Base64.decode(header.getValue())));
    }
  }
  return result;
}
