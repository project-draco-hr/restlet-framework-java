def test_auto_headers(self):
    import httplib


    class HeaderCountingBuffer(list):

        def __init__(self):
            self.count = {}

        def append(self, item):
            kv = item.split(':')
            if (len(kv) > 1):
                lcKey = kv[0].lower()
                self.count.setdefault(lcKey, 0)
                self.count[lcKey] += 1
            list.append(self, item)
    for explicit_header in (True, False):
        for header in ('Content-length', 'Host', 'Accept-encoding'):
            conn = httplib.HTTPConnection('example.com')
            conn.sock = FakeSocket('blahblahblah')
            conn._buffer = HeaderCountingBuffer()
            body = 'spamspamspam'
            headers = {}
            if explicit_header:
                headers[header] = str(len(body))
            conn.request('POST', '/', body, headers)
            self.assertEqual(conn._buffer.count[header.lower()], 1)
