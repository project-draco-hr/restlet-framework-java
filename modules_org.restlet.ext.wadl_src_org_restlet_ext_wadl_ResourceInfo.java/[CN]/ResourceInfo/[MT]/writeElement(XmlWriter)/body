{
  final AttributesImpl attributes=new AttributesImpl();
  if ((getIdentifier() != null) && !getIdentifier().equals("")) {
    attributes.addAttribute("","id",null,"xs:ID",getIdentifier());
  }
  if ((getPath() != null) && !getPath().equals("")) {
    attributes.addAttribute("","path",null,"xs:string",getPath());
  }
  if (getQueryType() != null) {
    attributes.addAttribute("","queryType",null,"xs:string",getQueryType().getMainType());
  }
  if ((getType() != null) && !getType().isEmpty()) {
    final StringBuilder builder=new StringBuilder();
    for (final Iterator<Reference> iterator=getType().iterator(); iterator.hasNext(); ) {
      final Reference reference=iterator.next();
      builder.append(reference.toString());
      if (iterator.hasNext()) {
        builder.append(" ");
      }
    }
    attributes.addAttribute("","type",null,"xs:string",builder.toString());
  }
  if (getChildResources().isEmpty() && getDocumentations().isEmpty() && getMethods().isEmpty()&& getParameters().isEmpty()) {
    writer.emptyElement(APP_NAMESPACE,"resource",null,attributes);
  }
 else {
    writer.startElement(APP_NAMESPACE,"resource",null,attributes);
    for (    final ResourceInfo resourceInfo : getChildResources()) {
      resourceInfo.writeElement(writer);
    }
    for (    final DocumentationInfo documentationInfo : getDocumentations()) {
      documentationInfo.writeElement(writer);
    }
    for (    final ParameterInfo parameterInfo : getParameters()) {
      parameterInfo.writeElement(writer);
    }
    for (    final MethodInfo methodInfo : getMethods()) {
      methodInfo.writeElement(writer);
    }
    writer.endElement(APP_NAMESPACE,"resource");
  }
}
