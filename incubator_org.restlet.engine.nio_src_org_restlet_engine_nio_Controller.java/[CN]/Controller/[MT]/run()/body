{
  setRunning(true);
  long sleepTime=getHelper().getControllerSleepTimeMs();
  while (isRunning()) {
    try {
      if (isOverloaded()) {
        if (!isWorkerServiceOverloaded()) {
          setOverloaded(false);
          getHelper().getLogger().info("Connector overload ended. Accepting new connections again");
          getHelper().traceWorkerService();
        }
      }
 else {
        if (isWorkerServiceOverloaded()) {
          setOverloaded(true);
          getHelper().getLogger().info("Connector overload detected. Stop accepting new connections");
          getHelper().traceWorkerService();
        }
      }
      selectKey(sleepTime);
      controlConnections(isOverloaded());
      controlHelper();
    }
 catch (    Exception ex) {
      this.helper.getLogger().log(Level.WARNING,"Unexpected error while controlling connector",ex);
    }
  }
}
