{
  boolean result=false;
  if (type.equals(this)) {
    result=true;
  }
 else   if (superclass != null && superclass.isCompatibleWith(type)) {
    result=true;
  }
 else   if (!interfaces.isEmpty()) {
    Iterator it=interfaces.iterator();
    while (it.hasNext() && !result) {
      IClass current=(IClass)it.next();
      if (current.isCompatibleWith(type)) {
        result=true;
      }
    }
  }
  return result;
}
