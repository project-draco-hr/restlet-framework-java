def _darwin_compiler_fixup(compiler_so, cc_args):
    "\n    This function will strip '-isysroot PATH' and '-arch ARCH' from the\n    compile flags if the user has specified one them in extra_compile_flags.\n\n    This is needed because '-arch ARCH' adds another architecture to the\n    build, without a way to remove an architecture. Furthermore GCC will\n    barf if multiple '-isysroot' arguments are present.\n    "
    stripArch = stripSysroot = 0
    compiler_so = list(compiler_so)
    kernel_version = os.uname()[2]
    major_version = int(kernel_version.split('.')[0])
    if (major_version < 8):
        stripArch = stripSysroot = True
    else:
        stripArch = ('-arch' in cc_args)
        stripSysroot = ('-isysroot' in cc_args)
    if stripArch:
        while 1:
            try:
                index = compiler_so.index('-arch')
                del compiler_so[index:(index + 2)]
            except ValueError:
                break
    if stripSysroot:
        try:
            index = compiler_so.index('-isysroot')
            del compiler_so[index:(index + 2)]
        except ValueError:
            pass
    sysroot = None
    if ('-isysroot' in cc_args):
        idx = cc_args.index('-isysroot')
        sysroot = cc_args[(idx + 1)]
    elif ('-isysroot' in compiler_so):
        idx = compiler_so.index('-isysroot')
        sysroot = compiler_so[(idx + 1)]
    if (sysroot and (not os.path.isdir(sysroot))):
        log.warn("Compiling with an SDK that doesn't seem to exist: %s", sysroot)
        log.warn('Please check your Xcode installation')
    return compiler_so
