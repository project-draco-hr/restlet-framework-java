{
  Connection<Client> result=null;
  int hostConnectionCount=0;
  int bestCount=0;
  boolean foundConn=false;
  InetSocketAddress socketAddress=getSocketAddress(request);
  if (socketAddress == null) {
    getLogger().log(Level.WARNING,"Unable to create a socket address related to the request.");
  }
 else {
    for (Iterator<Connection<Client>> iterator=getConnections().iterator(); !foundConn && iterator.hasNext(); ) {
      Connection<Client> currConn=iterator.next();
      if (socketAddress.equals(currConn.getSocketAddress())) {
        if (currConn.getState().equals(ConnectionState.OPEN) && currConn.getInboundWay().getIoState().equals(IoState.IDLE) && currConn.getInboundWay().getMessages().isEmpty()&& currConn.getOutboundWay().getIoState().equals(IoState.IDLE)&& currConn.getOutboundWay().getMessages().isEmpty()) {
          result=currConn;
          foundConn=true;
        }
 else {
          int currCount=currConn.getOutboundWay().getMessages().size();
          if (bestCount > currCount) {
            bestCount=currCount;
            result=currConn;
          }
          hostConnectionCount++;
        }
      }
    }
    if (!foundConn && ((getMaxTotalConnections() == -1) || (getConnections().size() < getMaxTotalConnections())) && ((getMaxConnectionsPerHost() == -1) || (hostConnectionCount < getMaxConnectionsPerHost()))) {
      result=checkout(createSocketChannel(request.isConfidential(),socketAddress),getController().getSelector(),socketAddress);
      getConnections().add(result);
    }
  }
  return result;
}
