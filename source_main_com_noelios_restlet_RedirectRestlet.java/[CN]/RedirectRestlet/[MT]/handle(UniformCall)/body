{
  try {
    StringTemplate te=new StringTemplate(this.targetPattern);
    String targetUri=te.process(new UniformCallModel(call,null));
    Reference target=Manager.createReference(targetUri);
switch (this.mode) {
case MODE_CLIENT_PERMANENT:
      logger.log(Level.INFO,"Permanently redirecting client to: " + targetUri);
    call.setRedirectionRef(target);
  call.setStatus(Statuses.REDIRECTION_MOVED_PERMANENTLY);
break;
case MODE_CLIENT_FOUND:
logger.log(Level.INFO,"Redirecting client to found location: " + targetUri);
call.setRedirectionRef(target);
call.setStatus(Statuses.REDIRECTION_FOUND);
break;
case MODE_CLIENT_TEMPORARY:
logger.log(Level.INFO,"Temporarily redirecting client to: " + targetUri);
call.setRedirectionRef(target);
call.setStatus(Statuses.REDIRECTION_MOVED_TEMPORARILY);
break;
case MODE_CONNECTOR:
logger.log(Level.INFO,"Redirecting to connector " + this.connectorName + ": "+ targetUri);
call.setResourceRef(target);
call.getResourcePaths().clear();
call.getResourceMatches().clear();
getContainer().callClient(this.connectorName,call);
break;
case MODE_CONTAINER:
logger.log(Level.INFO,"Redirecting to container: " + targetUri);
call.setResourceRef(target);
call.getResourcePaths().clear();
call.getResourceMatches().clear();
getContainer().handle(call);
break;
}
}
 catch (IOException ioe) {
logger.log(Level.WARNING,"Error during redirection",ioe);
}
}
