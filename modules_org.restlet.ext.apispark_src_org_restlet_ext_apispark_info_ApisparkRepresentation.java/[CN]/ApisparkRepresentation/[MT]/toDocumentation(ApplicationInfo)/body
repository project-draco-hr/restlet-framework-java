{
  Documentation result=null;
  if (application != null) {
    result=new Documentation();
    result.setVersion(application.getVersion());
    if (application.getResources().getBaseRef() != null) {
      result.setEndpoint(application.getResources().getBaseRef().toString());
    }
    Contract contract=new Contract();
    result.setContract(contract);
    contract.setDescription(toString(application.getDocumentations()));
    contract.setName(application.getName());
    contract.setRepresentations(new ArrayList<Representation>());
    for (    RepresentationInfo ri : application.getRepresentations()) {
      Representation rep=new Representation();
      rep.setDescription(toString(ri.getDocumentations()));
      rep.setName(ri.getIdentifier());
      Variant variant=new Variant();
      variant.setDataType(ri.getMediaType().getName());
      rep.setVariants(new ArrayList<Variant>());
      rep.getVariants().add(variant);
      rep.setProperties(new ArrayList<Property>());
      for (int i=0; i < ri.getParameters().size(); i++) {
        ParameterInfo pi=ri.getParameters().get(i);
        Property property=new Property();
        property.setName(pi.getName());
        property.setDescription(toString(pi.getDocumentations()));
        property.setType(pi.getType());
        rep.getProperties().add(property);
      }
      contract.getRepresentations().add(rep);
    }
    contract.setResources(new ArrayList<Resource>());
    addResources(application,contract,application.getResources().getResources(),result.getEndpoint());
    java.util.List<String> protocols=new ArrayList<String>();
    for (    ConnectorHelper<Server> helper : Engine.getInstance().getRegisteredServers()) {
      for (      Protocol protocol : helper.getProtocols()) {
        if (!protocols.contains(protocol.getName())) {
          protocols.add(protocol.getName());
        }
      }
    }
  }
  return result;
}
