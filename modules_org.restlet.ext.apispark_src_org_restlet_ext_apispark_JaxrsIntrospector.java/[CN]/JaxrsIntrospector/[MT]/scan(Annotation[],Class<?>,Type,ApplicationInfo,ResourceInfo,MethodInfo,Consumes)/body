{
  boolean valueComputed=false;
  for (  Annotation annotation : annotations) {
    if (annotation instanceof CookieParam) {
      valueComputed=true;
      String value=((CookieParam)annotation).value();
      ParameterInfo pi=new ParameterInfo(value,ParameterStyle.COOKIE,"Cookie parameter: " + value);
      method.getRequest().getParameters().add(pi);
    }
 else     if (annotation instanceof DefaultValue) {
    }
 else     if (annotation instanceof Encoded) {
    }
 else     if (annotation instanceof FormParam) {
      valueComputed=true;
      addRepresentation(method,(FormParam)annotation);
    }
 else     if (annotation instanceof HeaderParam) {
      valueComputed=true;
      String value=((HeaderParam)annotation).value();
      ParameterInfo pi=new ParameterInfo(value,ParameterStyle.HEADER,"header parameter: " + value);
      method.getParameters().add(pi);
    }
 else     if (annotation instanceof MatrixParam) {
      valueComputed=true;
      String value=((MatrixParam)annotation).value();
      ParameterInfo pi=new ParameterInfo(value,ParameterStyle.MATRIX,"matrix parameter: " + value);
      method.getParameters().add(pi);
    }
 else     if (annotation instanceof PathParam) {
      valueComputed=true;
      String value=((PathParam)annotation).value();
      boolean found=false;
      for (      ParameterInfo p : resource.getParameters()) {
        if (p.getName().equals(value)) {
          found=true;
          break;
        }
      }
      if (!found) {
        ParameterInfo pi=new ParameterInfo(value,ParameterStyle.TEMPLATE,"Path parameter: " + value);
        resource.getParameters().add(pi);
      }
    }
 else     if (annotation instanceof QueryParam) {
      valueComputed=true;
      String value=((QueryParam)annotation).value();
      ParameterInfo pi=new ParameterInfo(value,ParameterStyle.QUERY,"Query parameter: " + value);
      method.getParameters().add(pi);
    }
 else     if (annotation instanceof javax.ws.rs.core.Context) {
      valueComputed=true;
      javax.ws.rs.core.Context context=(javax.ws.rs.core.Context)annotation;
    }
  }
  if (!valueComputed) {
    if (parameterClass != null && !Void.class.equals(parameterClass)) {
      String[] mediaTypes=null;
      if (consumes == null || consumes.value() == null || consumes.value().length == 0) {
        mediaTypes=new String[1];
        mediaTypes[0]=MediaType.APPLICATION_ALL.getName();
      }
 else {
        mediaTypes=consumes.value();
      }
      for (      String consume : mediaTypes) {
        Variant variant=new Variant(MediaType.valueOf(consume));
        RepresentationInfo representationInfo=null;
        representationInfo=RepresentationInfo.describe(method,parameterClass,parameterType,variant);
        if (method.getRequest() == null) {
          method.setRequest(new RequestInfo());
        }
        method.getRequest().getRepresentations().add(representationInfo);
      }
    }
  }
}
