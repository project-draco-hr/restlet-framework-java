def has_header(self, sample):
    rdr = reader(StringIO(sample), self.sniff(sample))
    header = rdr.next()
    columns = len(header)
    columnTypes = {}
    for i in range(columns):
        columnTypes[i] = None
    checked = 0
    for row in rdr:
        if (checked > 20):
            break
        checked += 1
        if (len(row) != columns):
            continue
        for col in columnTypes.keys():
            for thisType in [int, long, float, complex]:
                try:
                    thisType(row[col])
                    break
                except (ValueError, OverflowError):
                    pass
            else:
                thisType = len(row[col])
            if (thisType == long):
                thisType = int
            if (thisType != columnTypes[col]):
                if (columnTypes[col] is None):
                    columnTypes[col] = thisType
                else:
                    del columnTypes[col]
    hasHeader = 0
    for (col, colType) in columnTypes.items():
        if (type(colType) == type(0)):
            if (len(header[col]) != colType):
                hasHeader += 1
            else:
                hasHeader -= 1
        else:
            try:
                colType(header[col])
            except (ValueError, TypeError):
                hasHeader += 1
            else:
                hasHeader -= 1
    return (hasHeader > 0)
