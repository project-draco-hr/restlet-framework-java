{
  WebApplicationException constructorWae=null;
  try {
    final Constructor<?> constr=this.convertTo.getConstructor(String.class);
    return constr.newInstance(paramValue);
  }
 catch (  final WebApplicationException wae) {
    constructorWae=wae;
  }
catch (  final Exception e) {
  }
  Method valueOf;
  try {
    valueOf=this.convertTo.getMethod("valueOf",String.class);
  }
 catch (  final SecurityException e) {
    throw ConvertParameterException.object(this.convertTo,paramValue,e);
  }
catch (  final NoSuchMethodException e) {
    throw ConvertParameterException.object(this.convertTo,paramValue,e);
  }
  try {
    return valueOf.invoke(null,paramValue);
  }
 catch (  final IllegalArgumentException e) {
    if (constructorWae != null) {
      throw constructorWae;
    }
    throw ConvertParameterException.object(this.convertTo,paramValue,e);
  }
catch (  final IllegalAccessException e) {
    if (constructorWae != null) {
      throw constructorWae;
    }
    throw ConvertParameterException.object(this.convertTo,paramValue,e);
  }
catch (  final InvocationTargetException ite) {
    if (constructorWae != null) {
      throw constructorWae;
    }
    final Throwable cause=ite.getCause();
    if (cause instanceof WebApplicationException) {
      throw (WebApplicationException)cause;
    }
    if (((paramValue == null) || (paramValue.length() <= 0)) && (ite.getCause() instanceof IllegalArgumentException)) {
      if (defaultValue == null) {
        return null;
      }
 else {
        final String dfv=defaultValue.value();
        return convertParamValueInner(dfv,null);
      }
    }
    throw ConvertParameterException.object(this.convertTo,paramValue,ite);
  }
}
