{
  Representation result=null;
  long contentLength=getContentLength();
  InputStream requestStream=getRequestEntityStream(contentLength);
  ReadableByteChannel requestChannel=getRequestEntityChannel(contentLength);
  if (requestStream != null) {
    result=new InputRepresentation(requestStream,null,contentLength);
  }
 else   if (requestChannel != null) {
    result=new ReadableRepresentation(requestChannel,null,contentLength);
  }
  result.setSize(contentLength);
  for (  Parameter header : getRequestHeaders()) {
    if (header.getName().equalsIgnoreCase(HeaderConstants.HEADER_CONTENT_ENCODING)) {
      new EncodingReader(header.getValue()).addValues(result.getEncodings());
    }
 else     if (header.getName().equalsIgnoreCase(HeaderConstants.HEADER_CONTENT_LANGUAGE)) {
      new LanguageReader(header.getValue()).addValues(result.getLanguages());
    }
 else     if (header.getName().equalsIgnoreCase(HeaderConstants.HEADER_CONTENT_TYPE)) {
      ContentType contentType=new ContentType(header.getValue());
      result.setMediaType(contentType.getMediaType());
      result.setCharacterSet(contentType.getCharacterSet());
    }
 else     if (header.getName().equalsIgnoreCase(HeaderConstants.HEADER_CONTENT_RANGE)) {
      RangeUtils.update(header.getValue(),result);
    }
 else     if (header.getName().equalsIgnoreCase(HeaderConstants.HEADER_CONTENT_MD5)) {
      result.setDigest(new Digest(Digest.ALGORITHM_MD5,Base64.decode(header.getValue())));
    }
  }
  return result;
}
