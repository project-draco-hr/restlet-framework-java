def dispatch(self, node, *args):
    self.node = node
    meth = self._cache.get(node.__class__, None)
    className = node.__class__.__name__
    if (meth is None):
        meth = getattr(self.visitor, ('visit' + className), 0)
        self._cache[node.__class__] = meth
    if (self.VERBOSE > 1):
        print 'dispatch', className, ((meth and meth.__name__) or '')
    if meth:
        meth(node, *args)
    elif (self.VERBOSE > 0):
        klass = node.__class__
        if (not self.examples.has_key(klass)):
            self.examples[klass] = klass
            print 
            print self.visitor
            print klass
            for attr in dir(node):
                if (attr[0] != '_'):
                    print '\t', ('%-12.12s' % attr), getattr(node, attr)
            print 
        return self.default(node, *args)
