{
  String instruction=template.subSequence(tokenStart,tokenEnd).toString();
  logger.log(Level.FINER,"processInstruction: " + instruction,buffer);
  if (instruction.startsWith("if ")) {
    String condition=template.subSequence(tokenStart + 3,tokenEnd).toString();
    if (evaluateCondition(condition,dataModel)) {
      state=STATE_INSTRUCTION_CONDITION_APPEND;
    }
 else {
      state=STATE_INSTRUCTION_CONDITION_SKIP;
    }
  }
 else   if (instruction.startsWith("else if ")) {
    if (state == STATE_INSTRUCTION_CONDITION_SKIP) {
      String condition=template.subSequence(tokenStart + 4,tokenEnd).toString();
      if (evaluateCondition(condition,dataModel)) {
        state=STATE_INSTRUCTION_CONDITION_APPEND;
      }
    }
  }
 else   if (instruction.equals("else")) {
    if (state == STATE_INSTRUCTION_CONDITION_SKIP) {
      state=STATE_INSTRUCTION_CONDITION_APPEND;
    }
 else     if (state == STATE_INSTRUCTION_CONDITION_APPEND) {
      state=STATE_INSTRUCTION_CONDITION_SKIP;
    }
  }
 else   if (instruction.equals("end")) {
    state=STATE_INSTRUCTION_APPEND;
  }
 else {
    if ((state == STATE_INSTRUCTION_APPEND) || (state == STATE_INSTRUCTION_CONDITION_APPEND)) {
      if ((dataModel != null) && dataModel.containsKey(instruction)) {
        buffer.append(dataModel.get(instruction));
      }
    }
  }
  return state;
}
