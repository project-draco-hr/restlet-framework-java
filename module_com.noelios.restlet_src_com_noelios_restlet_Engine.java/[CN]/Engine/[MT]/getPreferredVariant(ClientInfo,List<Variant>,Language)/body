{
  if (variants == null) {
    return null;
  }
 else {
    List<Language> variantLanguages=null;
    MediaType variantMediaType=null;
    boolean compatibleLanguage=false;
    boolean compatibleMediaType=false;
    Variant currentVariant=null;
    Variant bestVariant=null;
    Preference<Language> currentLanguagePref=null;
    Preference<Language> bestLanguagePref=null;
    Preference<MediaType> currentMediaTypePref=null;
    Preference<MediaType> bestMediaTypePref=null;
    float bestQuality=0;
    float bestLanguageScore=0;
    float bestMediaTypeScore=0;
    List<Preference<Language>> languagePrefs=client.getAcceptedLanguages();
    List<Preference<Language>> primaryLanguagePrefs=new ArrayList<Preference<Language>>();
    Preference<Language> defaultLanguagePref=((defaultLanguage == null) ? null : new Preference<Language>(defaultLanguage,0.001f));
    Preference<Language> allLanguagesPref=new Preference<Language>(Language.ALL,0.004f);
    if (languagePrefs.isEmpty()) {
      languagePrefs.add(new Preference<Language>(Language.ALL));
    }
 else {
      List<String> list=new ArrayList<String>();
      for (      Preference<Language> preference : languagePrefs) {
        Language language=preference.getMetadata();
        if (!language.getSubTags().isEmpty()) {
          if (!list.contains(language.getPrimaryTag())) {
            list.add(language.getPrimaryTag());
            primaryLanguagePrefs.add(new Preference<Language>(new Language(language.getPrimaryTag()),0.002f));
          }
        }
      }
    }
    languagePrefs.addAll(primaryLanguagePrefs);
    languagePrefs.add(defaultLanguagePref);
    languagePrefs.add(allLanguagesPref);
    for (Iterator<Variant> iter1=variants.iterator(); iter1.hasNext(); ) {
      currentVariant=iter1.next();
      variantLanguages=currentVariant.getLanguages();
      variantMediaType=currentVariant.getMediaType();
      for (      Language variantLanguage : variantLanguages) {
        for (Iterator<Preference<Language>> iter2=languagePrefs.iterator(); (variantLanguage != null) && iter2.hasNext(); ) {
          currentLanguagePref=iter2.next();
          float currentScore=getScore(variantLanguage,currentLanguagePref.getMetadata());
          boolean compatiblePref=(currentScore != -1.0f);
          if (compatiblePref && ((bestLanguagePref == null) || (currentScore > bestLanguageScore))) {
            bestLanguagePref=currentLanguagePref;
            bestLanguageScore=currentScore;
          }
        }
      }
      compatibleLanguage=(variantLanguages.isEmpty()) || (bestLanguagePref != null);
      List<Preference<MediaType>> mediaTypePrefs=client.getAcceptedMediaTypes();
      if (mediaTypePrefs.size() == 0)       mediaTypePrefs.add(new Preference<MediaType>(MediaType.ALL));
      for (Iterator<Preference<MediaType>> iter2=mediaTypePrefs.iterator(); compatibleLanguage && iter2.hasNext(); ) {
        currentMediaTypePref=iter2.next();
        float currentScore=getScore(variantMediaType,currentMediaTypePref.getMetadata());
        boolean compatiblePref=(currentScore != -1.0f);
        if (compatiblePref && ((bestMediaTypePref == null) || (currentScore > bestMediaTypeScore))) {
          bestMediaTypePref=currentMediaTypePref;
          bestMediaTypeScore=currentScore;
        }
      }
      compatibleMediaType=(variantMediaType == null) || (bestMediaTypePref != null);
      if (compatibleLanguage && compatibleMediaType) {
        float currentQuality=0;
        if (bestLanguagePref != null) {
          currentQuality+=(bestLanguagePref.getQuality() * 10F);
        }
 else         if (!variantLanguages.isEmpty()) {
          currentQuality+=0.1F * 10F;
        }
        if (bestMediaTypePref != null) {
          currentQuality+=bestMediaTypePref.getQuality();
        }
        if (bestVariant == null) {
          bestVariant=currentVariant;
          bestQuality=currentQuality;
        }
 else         if (currentQuality > bestQuality) {
          bestVariant=currentVariant;
          bestQuality=currentQuality;
        }
      }
      bestLanguagePref=null;
      bestLanguageScore=0;
      bestMediaTypePref=null;
      bestMediaTypeScore=0;
    }
    return bestVariant;
  }
}
