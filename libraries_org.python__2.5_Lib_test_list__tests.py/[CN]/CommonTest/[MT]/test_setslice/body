def test_setslice(self):
    l = [0, 1]
    a = self.type2test(l)
    for i in range((-3), 4):
        a[:i] = l[:i]
        self.assertEqual(a, l)
        a2 = a[:]
        a2[:i] = a[:i]
        self.assertEqual(a2, a)
        a[i:] = l[i:]
        self.assertEqual(a, l)
        a2 = a[:]
        a2[i:] = a[i:]
        self.assertEqual(a2, a)
        for j in range((-3), 4):
            a[i:j] = l[i:j]
            self.assertEqual(a, l)
            a2 = a[:]
            a2[i:j] = a[i:j]
            self.assertEqual(a2, a)
    aa2 = a2[:]
    aa2[:0] = [(-2), (-1)]
    self.assertEqual(aa2, [(-2), (-1), 0, 1])
    aa2[0:] = []
    self.assertEqual(aa2, [])
    a = self.type2test([1, 2, 3, 4, 5])
    a[:(-1)] = a
    self.assertEqual(a, self.type2test([1, 2, 3, 4, 5, 5]))
    a = self.type2test([1, 2, 3, 4, 5])
    a[1:] = a
    self.assertEqual(a, self.type2test([1, 1, 2, 3, 4, 5]))
    a = self.type2test([1, 2, 3, 4, 5])
    a[1:(-1)] = a
    self.assertEqual(a, self.type2test([1, 1, 2, 3, 4, 5, 5]))
    a = self.type2test([])
    a[:] = tuple(range(10))
    self.assertEqual(a, self.type2test(range(10)))
    self.assertRaises(TypeError, a.__setslice__, 0, 1, 5)
    self.assertRaises(TypeError, a.__setslice__)
