def test_sort(self):
    u = self.type2test([1, 0])
    u.sort()
    self.assertEqual(u, [0, 1])
    u = self.type2test([2, 1, 0, (-1), (-2)])
    u.sort()
    self.assertEqual(u, self.type2test([(-2), (-1), 0, 1, 2]))
    self.assertRaises(TypeError, u.sort, 42, 42)

    def revcmp(a, b):
        return cmp(b, a)
    u.sort(revcmp)
    self.assertEqual(u, self.type2test([2, 1, 0, (-1), (-2)]))

    def myComparison(x, y):
        return cmp((x % 3), (y % 7))
    z = self.type2test(range(12))
    z.sort(myComparison)
    self.assertRaises(TypeError, z.sort, 2)

    def selfmodifyingComparison(x, y):
        z.append(1)
        return cmp(x, y)
    self.assertRaises(ValueError, z.sort, selfmodifyingComparison)
    self.assertRaises(TypeError, z.sort, (lambda x, y: 's'))
    self.assertRaises(TypeError, z.sort, 42, 42, 42, 42)
