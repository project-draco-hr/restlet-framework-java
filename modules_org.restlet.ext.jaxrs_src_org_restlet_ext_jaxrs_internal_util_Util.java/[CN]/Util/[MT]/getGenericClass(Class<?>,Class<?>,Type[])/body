{
  for (  Type ifGenericType : clazz.getGenericInterfaces()) {
    if (!(ifGenericType instanceof ParameterizedType)) {
      continue;
    }
    final ParameterizedType pt=(ParameterizedType)ifGenericType;
    Type ptRawType=pt.getRawType();
    if (ptRawType == null)     continue;
    if (!ptRawType.equals(implInterface))     continue;
    final Type[] atps=pt.getActualTypeArguments();
    if (atps == null || atps.length == 0)     continue;
    final Type atp=atps[0];
    if (atp instanceof Class<?>) {
      return (Class<?>)atp;
    }
    if (atp instanceof ParameterizedType) {
      final Type rawType=((ParameterizedType)atp).getRawType();
      if (rawType instanceof Class<?>) {
        return (Class<?>)rawType;
      }
    }
    if (atp instanceof TypeVariable<?>) {
      TypeVariable<?> tv=(TypeVariable<?>)atp;
      String name=tv.getName();
      if (name == null)       continue;
      for (int i=0; i < atps.length; i++) {
        TypeVariable<?> tv2=(TypeVariable<?>)atps[i];
        String tv2Name=tv2.getName();
        if (tv2Name == null)         continue;
        if (tv2Name.equals(name)) {
          Type gsatpn=gsatp[i];
          if (gsatpn instanceof Class<?>) {
            return (Class<?>)gsatpn;
          }
          if (gsatpn instanceof ParameterizedType) {
            final Type rawType=((ParameterizedType)gsatpn).getRawType();
            if (rawType instanceof Class<?>)             return (Class<?>)rawType;
            throw new ImplementationException("Sorry, don't know how to return the class here");
          }
          if (gsatpn instanceof GenericArrayType) {
            Type genCompType=((GenericArrayType)gsatpn).getGenericComponentType();
            return getArrayClass(genCompType,gsatpn);
          }
        }
      }
    }
  }
  Class<?> superClass=clazz.getSuperclass();
  Type genericSuperClass=clazz.getGenericSuperclass();
  if ((genericSuperClass instanceof Class<?>)) {
    if (!implInterface.isAssignableFrom((Class<?>)genericSuperClass)) {
      return null;
    }
  }
  if ((gsatp == null) && (genericSuperClass instanceof ParameterizedType)) {
    gsatp=((ParameterizedType)genericSuperClass).getActualTypeArguments();
  }
  if (superClass != null)   return getGenericClass(superClass,implInterface,gsatp);
  return null;
}
