{
  int slashIndex;
  int colonIndex;
  String mainType;
  String subType;
  StringBuilder params=null;
  if (name == null)   return null;
  if ((colonIndex=name.indexOf(';')) != -1) {
    params=new StringBuilder(name.substring(colonIndex));
    name=name.substring(0,colonIndex);
  }
  if ((slashIndex=name.indexOf('/')) == -1) {
    mainType=normalizeToken(name);
    subType="*";
  }
 else {
    mainType=normalizeToken(name.substring(0,slashIndex));
    subType=normalizeToken(name.substring(slashIndex + 1));
  }
  if (parameters != null && !parameters.isEmpty()) {
    if (params == null) {
      params=new StringBuilder();
    }
    HeaderWriter<Parameter> hw=new HeaderWriter<Parameter>(){
      @Override public HeaderWriter<Parameter> append(      Parameter value){
        return appendExtension(value);
      }
    }
;
    for (int i=0; i < parameters.size(); i++) {
      Parameter p=parameters.get(i);
      hw.appendParameterSeparator();
      hw.appendSpace();
      hw.append(p);
    }
    params.append(hw.toString());
  }
  return (params == null) ? mainType + '/' + subType : mainType + '/' + subType+ params.toString();
}
