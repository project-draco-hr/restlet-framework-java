{
  assertNull(client.getToken());
  ClientResource cr=new ClientResource(prot + "://localhost:" + serverPort+ "/client/webclient");
  Representation r=cr.get();
  assertNotNull(r);
  r=OpenIdFormFrowarder.handleFormRedirect(r,cr);
  assertNotNull(r);
  String text=r.getText();
  assertEquals("Response text test",text,"TestSuccessful");
  assertEquals("Response content type test",r.getMediaType(),MediaType.TEXT_HTML);
  assertNotNull(client.getToken());
  cr.release();
  assertNotNull(client.getToken());
  Reference ref=new Reference(prot + "://localhost:" + serverPort+ "/server/protected");
  ref.addQueryParameter("oauth_token",client.getToken());
  cr=new ClientResource(ref);
  r=cr.get();
  assertNotNull(r);
  text=r.getText();
  assertEquals("Response text test",text,"TestSuccessful");
  assertEquals("Response content type test",r.getMediaType(),MediaType.TEXT_HTML);
  cr.release();
  Thread.sleep(20000);
  assertNotNull(client.getToken());
  ref.addQueryParameter("oauth_token",client.getToken());
  cr=new ClientResource(ref);
  try {
    r=cr.get();
  }
 catch (  ResourceException re) {
    assertEquals(Status.CLIENT_ERROR_FORBIDDEN,re.getStatus());
  }
  cr.release();
  assertNotNull(r);
}
