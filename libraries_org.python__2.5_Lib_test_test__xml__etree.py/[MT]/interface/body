def interface():
    '\n    Test element tree interface.\n\n    >>> from xml.etree import ElementTree as ET\n\n    >>> element = ET.Element("tag", key="value")\n    >>> tree = ET.ElementTree(element)\n\n    Make sure all standard element methods exist.\n\n    >>> check_method(element.append)\n    >>> check_method(element.insert)\n    >>> check_method(element.remove)\n    >>> check_method(element.getchildren)\n    >>> check_method(element.find)\n    >>> check_method(element.findall)\n    >>> check_method(element.findtext)\n    >>> check_method(element.clear)\n    >>> check_method(element.get)\n    >>> check_method(element.set)\n    >>> check_method(element.keys)\n    >>> check_method(element.items)\n    >>> check_method(element.getiterator)\n\n    Basic method sanity checks.\n\n    >>> serialize(ET, element) # 1\n    \'<tag key="value" />\'\n    >>> subelement = ET.Element("subtag")\n    >>> element.append(subelement)\n    >>> serialize(ET, element) #  2\n    \'<tag key="value"><subtag /></tag>\'\n    >>> element.insert(0, subelement)\n    >>> serialize(ET, element) # 3\n    \'<tag key="value"><subtag /><subtag /></tag>\'\n    >>> element.remove(subelement)\n    >>> serialize(ET, element) # 4\n    \'<tag key="value"><subtag /></tag>\'\n    >>> element.remove(subelement)\n    >>> serialize(ET, element) # 5\n    \'<tag key="value" />\'\n    >>> element.remove(subelement)\n    Traceback (most recent call last):\n    ValueError: list.remove(x): x not in list\n    >>> serialize(ET, element) # 6\n    \'<tag key="value" />\'\n    '
