def _EndRecData64(fpin, offset, endrec):
    '\n    Read the ZIP64 end-of-archive records and use that to update endrec\n    '
    locatorSize = struct.calcsize(structEndArchive64Locator)
    fpin.seek((offset - locatorSize), 2)
    data = fpin.read(locatorSize)
    (sig, diskno, reloff, disks) = struct.unpack(structEndArchive64Locator, data)
    if (sig != stringEndArchive64Locator):
        return endrec
    if ((diskno != 0) or (disks != 1)):
        raise BadZipfile('zipfiles that span multiple disks are not supported')
    endArchiveSize = struct.calcsize(structEndArchive64)
    fpin.seek(((offset - locatorSize) - endArchiveSize), 2)
    data = fpin.read(endArchiveSize)
    (sig, sz, create_version, read_version, disk_num, disk_dir, dircount, dircount2, dirsize, diroffset) = struct.unpack(structEndArchive64, data)
    if (sig != stringEndArchive64):
        return endrec
    endrec[1] = disk_num
    endrec[2] = disk_dir
    endrec[3] = dircount
    endrec[4] = dircount2
    endrec[5] = dirsize
    endrec[6] = diroffset
    return endrec
