'Package for parsing and compiling Python source code\n\nThere are several functions defined at the top level that are imported\nfrom modules contained in the package.\n\nparse(buf, mode="exec") -> AST\n    Converts a string containing Python source code to an abstract\n    syntax tree (AST).  The AST is defined in compiler.ast.\n\nparseFile(path) -> AST\n    The same as parse(open(path))\n\nwalk(ast, visitor, verbose=None)\n    Does a pre-order walk over the ast using the visitor instance.\n    See compiler.visitor for details.\n\ncompile(source, filename, mode, flags=None, dont_inherit=None)\n    Returns a code object.  A replacement for the builtin compile() function.\n\ncompileFile(filename)\n    Generates a .pyc file by compiling filename.\n'
from compiler.transformer import parse, parseFile
from compiler.visitor import walk
from compiler.pycodegen import compile, compileFile
