{
  final TunnelService tunnelService=getTunnelService();
  boolean extensionsModified=false;
  final Method method=request.getMethod();
  if (tunnelService.isPreferencesTunnel() && (method.equals(Method.GET) || method.equals(Method.HEAD))) {
    final Reference resourceRef=request.getResourceRef();
    if (resourceRef.hasExtensions()) {
      final ClientInfo clientInfo=request.getClientInfo();
      boolean encodingFound=false;
      boolean characterSetFound=false;
      boolean mediaTypeFound=false;
      boolean languageFound=false;
      String extensions=resourceRef.getExtensions();
      while (true) {
        final int lastIndexOfPoint=extensions.lastIndexOf('.');
        final String extension=extensions.substring(lastIndexOfPoint + 1);
        final Metadata metadata=getMetadata(extension);
        if (!mediaTypeFound && (metadata instanceof MediaType)) {
          updateMetadata(clientInfo,metadata);
          mediaTypeFound=true;
        }
 else         if (!languageFound && (metadata instanceof Language)) {
          updateMetadata(clientInfo,metadata);
          languageFound=true;
        }
 else         if (!characterSetFound && (metadata instanceof CharacterSet)) {
          updateMetadata(clientInfo,metadata);
          characterSetFound=true;
        }
 else         if (!encodingFound && (metadata instanceof Encoding)) {
          updateMetadata(clientInfo,metadata);
          encodingFound=true;
        }
 else {
          break;
        }
        if (lastIndexOfPoint > 0) {
          extensions=extensions.substring(0,lastIndexOfPoint);
        }
 else {
          extensions="";
          break;
        }
      }
      if (encodingFound || characterSetFound || mediaTypeFound|| languageFound) {
        resourceRef.setExtensions(extensions);
        extensionsModified=true;
      }
    }
  }
  return extensionsModified;
}
