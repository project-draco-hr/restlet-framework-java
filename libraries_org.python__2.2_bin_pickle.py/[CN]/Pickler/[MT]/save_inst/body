def save_inst(self, object):
    d = id(object)
    cls = object.__class__
    memo = self.memo
    write = self.write
    save = self.save
    if hasattr(object, '__getinitargs__'):
        args = object.__getinitargs__()
        len(args)
        _keep_alive(args, memo)
    else:
        args = ()
    write(MARK)
    if self.bin:
        save(cls)
    for arg in args:
        save(arg)
    memo_len = len(memo)
    if self.bin:
        write((OBJ + self.put(memo_len)))
    else:
        write((((((INST + cls.__module__) + '\n') + cls.__name__) + '\n') + self.put(memo_len)))
    memo[d] = (memo_len, object)
    try:
        getstate = object.__getstate__
    except AttributeError:
        stuff = object.__dict__
    else:
        stuff = getstate()
        _keep_alive(stuff, memo)
    save(stuff)
    write(BUILD)
