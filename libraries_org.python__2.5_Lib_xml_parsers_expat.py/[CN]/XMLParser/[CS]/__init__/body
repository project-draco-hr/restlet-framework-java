def __init__(self, encoding, namespace_separator):
    self.encoding = encoding
    self.CurrentLineNumber = 1
    self.CurrentColumnNumber = 0
    self._NextLineNumber = 1
    self._NextColumnNumber = 0
    self.ErrorLineNumber = (-1)
    self.ErrorColumnNumber = (-1)
    self.ErrorCode = None
    if (namespace_separator is None):
        self.namespace_separator = namespace_separator
    elif isinstance(namespace_separator, basestring):
        self.namespace_separator = str(namespace_separator)
        if (len(self.namespace_separator) > 1):
            error = 'namespace_separator must be at most one character, omitted, or None'
            raise ValueError(error)
    else:
        error = ('ParserCreate() argument 2 must be string or None, not %s' % type(namespace_separator).__name__)
        raise TypeError(error)
    self._reader = XMLReaderFactory.createXMLReader(_xerces_parser)
    if (self.namespace_separator is None):
        try:
            feature = 'http://xml.org/sax/features/namespaces'
            self._reader.setFeature(feature, False)
        except SAXNotRecognizedException:
            error = 'namespace support cannot be disabled; set namespace_separator to a string of length 1.'
            raise ValueError(error)
    self._base = None
    self._buffer_text = True
    self._returns_unicode = True
    self._data = StringBuilder()
    self._handler = XMLEventHandler(self)
    self._reader.setContentHandler(self._handler)
    self._reader.setErrorHandler(self._handler)
    self._reader.setDTDHandler(self._handler)
    self._reader.setEntityResolver(self._handler)
    sax_properties = ('lexical-handler', 'declaration-handler')
    for name in sax_properties:
        try:
            name = ('http://xml.org/sax/properties/' + name)
            self._reader.setProperty(name, self._handler)
        except SAXNotRecognizedException:
            error = ("can't set property %r" % name)
            raise NotImplementedError(error)
    apache_features = (('nonvalidating/load-external-dtd', False),)
    for (name, value) in apache_features:
        try:
            name = ('http://apache.org/xml/features/' + name)
            self._reader.setFeature(name, value)
        except SAXNotRecognizedException:
            error = ("can't set feature %r" % name)
            raise NotImplementedError(error)
    f = 'http://xml.org/sax/features/external-parameter-entities'
    f = 'http://xml.org/sax/features/use-entity-resolver2'
    assert self._reader.getFeature(f)
