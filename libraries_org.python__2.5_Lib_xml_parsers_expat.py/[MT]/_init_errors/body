def _init_errors():
    global errors
    errors = types.ModuleType('pyexpat.errors')
    errors.__doc__ = 'Constants used to describe error conditions.'
    error_names = '\n    XML_ERROR_NONE\n    XML_ERROR_NONE,\n    XML_ERROR_NO_MEMORY,\n    XML_ERROR_SYNTAX,\n    XML_ERROR_NO_ELEMENTS,\n    XML_ERROR_INVALID_TOKEN,\n    XML_ERROR_UNCLOSED_TOKEN,\n    XML_ERROR_PARTIAL_CHAR,\n    XML_ERROR_TAG_MISMATCH,\n    XML_ERROR_DUPLICATE_ATTRIBUTE,\n    XML_ERROR_JUNK_AFTER_DOC_ELEMENT,\n    XML_ERROR_PARAM_ENTITY_REF,\n    XML_ERROR_UNDEFINED_ENTITY,\n    XML_ERROR_RECURSIVE_ENTITY_REF,\n    XML_ERROR_ASYNC_ENTITY,\n    XML_ERROR_BAD_CHAR_REF,\n    XML_ERROR_BINARY_ENTITY_REF,\n    XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF,\n    XML_ERROR_MISPLACED_XML_PI,\n    XML_ERROR_UNKNOWN_ENCODING,\n    XML_ERROR_INCORRECT_ENCODING,\n    XML_ERROR_UNCLOSED_CDATA_SECTION,\n    XML_ERROR_EXTERNAL_ENTITY_HANDLING,\n    XML_ERROR_NOT_STANDALONE,\n    XML_ERROR_UNEXPECTED_STATE,\n    XML_ERROR_ENTITY_DECLARED_IN_PE,\n    XML_ERROR_FEATURE_REQUIRES_XML_DTD,\n    XML_ERROR_CANT_CHANGE_FEATURE_ONCE_PARSING,\n    XML_ERROR_UNBOUND_PREFIX,\n    XML_ERROR_UNDECLARING_PREFIX,\n    XML_ERROR_INCOMPLETE_PE,\n    XML_ERROR_XML_DECL,\n    XML_ERROR_TEXT_DECL,\n    XML_ERROR_PUBLICID,\n    XML_ERROR_SUSPENDED,\n    XML_ERROR_NOT_SUSPENDED,\n    XML_ERROR_ABORTED,\n    XML_ERROR_FINISHED,\n    XML_ERROR_SUSPEND_PE\n    '
    error_names = [name.strip() for name in error_names.split(',')]
    for (i, name) in enumerate(error_names[1:]):
        setattr(errors, name, ErrorString((i + 1)))
