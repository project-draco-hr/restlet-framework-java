def _init_error_strings():
    global ErrorString
    error_strings = (None, 'out of memory', 'syntax error', 'no element found', 'not well-formed (invalid token)', 'unclosed token', 'partial character', 'mismatched tag', 'duplicate attribute', 'junk after document element', 'illegal parameter entity reference', 'undefined entity', 'recursive entity reference', 'asynchronous entity', 'reference to invalid character number', 'reference to binary entity', 'reference to external entity in attribute', 'XML or text declaration not at start of entity', 'unknown encoding', 'encoding specified in XML declaration is incorrect', 'unclosed CDATA section', 'error in processing external entity reference', 'document is not standalone', 'unexpected parser state - please send a bug report', 'entity declared in parameter entity', 'requested feature requires XML_DTD support in Expat', 'cannot change setting once parsing has begun', 'unbound prefix', 'must not undeclare prefix', 'incomplete markup in parameter entity', 'XML declaration not well-formed', 'text declaration not well-formed', 'illegal character(s) in public id', 'parser suspended', 'parser not suspended', 'parsing aborted', 'parsing finished', 'cannot suspend in external parameter entity')

    def ErrorString(code):
        try:
            return error_strings[code]
        except IndexError:
            return None
