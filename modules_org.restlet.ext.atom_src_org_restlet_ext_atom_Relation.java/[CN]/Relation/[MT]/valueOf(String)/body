{
  Relation result=ALTERNATE;
  if (rel != null) {
    if (rel.equalsIgnoreCase("alternate")) {
      result=ALTERNATE;
    }
 else     if (rel.equalsIgnoreCase("current")) {
      result=CURRENT;
    }
 else     if (rel.equalsIgnoreCase("describedby")) {
      result=DESCRIBED_BY;
    }
 else     if (rel.equalsIgnoreCase("edit")) {
      result=EDIT;
    }
 else     if (rel.equalsIgnoreCase("edit-media")) {
      result=EDIT_MEDIA;
    }
 else     if (rel.equalsIgnoreCase("enclosure")) {
      result=ENCLOSURE;
    }
 else     if (rel.equalsIgnoreCase("first")) {
      result=FIRST;
    }
 else     if (rel.equalsIgnoreCase("hub")) {
      result=HUB;
    }
 else     if (rel.equalsIgnoreCase("last")) {
      result=LAST;
    }
 else     if (rel.equalsIgnoreCase("latest-version")) {
      result=LAST_VERSION;
    }
 else     if (rel.equalsIgnoreCase("license")) {
      result=LICENSE;
    }
 else     if (rel.equalsIgnoreCase("next")) {
      result=NEXT;
    }
 else     if (rel.equalsIgnoreCase("next-archive")) {
      result=NEXT_ARCHIVE;
    }
 else     if (rel.equalsIgnoreCase("payment")) {
      result=PAYMENT;
    }
 else     if (rel.equalsIgnoreCase("predecessor-version")) {
      result=PREDECESSOR_VERSION;
    }
 else     if (rel.equalsIgnoreCase("previous")) {
      result=PREVIOUS;
    }
 else     if (rel.equalsIgnoreCase("prev-archive")) {
      result=PREVIOUS_ARCHIVE;
    }
 else     if (rel.equalsIgnoreCase("related")) {
      result=RELATED;
    }
 else     if (rel.equalsIgnoreCase("replies")) {
      result=REPLIES;
    }
 else     if (rel.equalsIgnoreCase("self")) {
      result=SELF;
    }
 else     if (rel.equalsIgnoreCase("service")) {
      result=SERVICE;
    }
 else     if (rel.equalsIgnoreCase("successor-version")) {
      result=SUCCESSOR_VERSION;
    }
 else     if (rel.equalsIgnoreCase("up")) {
      result=UP;
    }
 else     if (rel.equalsIgnoreCase("version-history")) {
      result=VERSION_HISTORY;
    }
 else     if (rel.equalsIgnoreCase("via")) {
      result=VIA;
    }
 else     if (rel.equalsIgnoreCase("working-copy")) {
      result=WORKING_COPY;
    }
 else     if (rel.equalsIgnoreCase("working-copy-of")) {
      result=WORKING_COPY_OF;
    }
 else {
      result=new Relation(rel);
    }
  }
  return result;
}
