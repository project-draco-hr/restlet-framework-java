def test_types(self):
    ts.T_BYTE = CHAR_MAX
    self.assertEquals(ts.T_BYTE, CHAR_MAX)
    ts.T_BYTE = CHAR_MIN
    self.assertEquals(ts.T_BYTE, CHAR_MIN)
    ts.T_UBYTE = UCHAR_MAX
    self.assertEquals(ts.T_UBYTE, UCHAR_MAX)
    ts.T_SHORT = SHRT_MAX
    self.assertEquals(ts.T_SHORT, SHRT_MAX)
    ts.T_SHORT = SHRT_MIN
    self.assertEquals(ts.T_SHORT, SHRT_MIN)
    ts.T_USHORT = USHRT_MAX
    self.assertEquals(ts.T_USHORT, USHRT_MAX)
    ts.T_INT = INT_MAX
    self.assertEquals(ts.T_INT, INT_MAX)
    ts.T_INT = INT_MIN
    self.assertEquals(ts.T_INT, INT_MIN)
    ts.T_UINT = UINT_MAX
    self.assertEquals(ts.T_UINT, UINT_MAX)
    ts.T_LONG = LONG_MAX
    self.assertEquals(ts.T_LONG, LONG_MAX)
    ts.T_LONG = LONG_MIN
    self.assertEquals(ts.T_LONG, LONG_MIN)
    ts.T_ULONG = ULONG_MAX
    self.assertEquals(ts.T_ULONG, ULONG_MAX)
    if hasattr(ts, 'T_LONGLONG'):
        ts.T_LONGLONG = LLONG_MAX
        self.assertEquals(ts.T_LONGLONG, LLONG_MAX)
        ts.T_LONGLONG = LLONG_MIN
        self.assertEquals(ts.T_LONGLONG, LLONG_MIN)
        ts.T_ULONGLONG = ULLONG_MAX
        self.assertEquals(ts.T_ULONGLONG, ULLONG_MAX)
        ts.T_LONGLONG = 3
        self.assertEquals(ts.T_LONGLONG, 3)
        ts.T_ULONGLONG = 4
        self.assertEquals(ts.T_ULONGLONG, 4)
