def test_comparison_operators(self):
    da = Decimal('23.42')
    db = Decimal('23.42')
    dc = Decimal('45')
    self.failUnless((dc > da))
    self.failUnless((dc >= da))
    self.failUnless((da < dc))
    self.failUnless((da <= dc))
    self.failUnless((da == db))
    self.failUnless((da != dc))
    self.failUnless((da <= db))
    self.failUnless((da >= db))
    self.assertEqual(cmp(dc, da), 1)
    self.assertEqual(cmp(da, dc), (-1))
    self.assertEqual(cmp(da, db), 0)
    self.failUnless((dc > 23))
    self.failUnless((23 < dc))
    self.failUnless((dc == 45))
    self.assertEqual(cmp(dc, 23), 1)
    self.assertEqual(cmp(23, dc), (-1))
    self.assertEqual(cmp(dc, 45), 0)
    self.assertNotEqual(da, 'ugly')
    self.assertNotEqual(da, 32.7)
    self.assertNotEqual(da, object())
    self.assertNotEqual(da, object)
    a = map(Decimal, xrange(100))
    b = a[:]
    random.shuffle(a)
    a.sort()
    self.assertEqual(a, b)
    self.assertFalse((Decimal(1) < None))
    self.assertTrue((Decimal(1) > None))
