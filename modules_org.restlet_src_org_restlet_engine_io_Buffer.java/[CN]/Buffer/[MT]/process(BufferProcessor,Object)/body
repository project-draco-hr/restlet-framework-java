{
  int totalDrained=0;
  int totalFilled=0;
synchronized (getLock()) {
    if (processor.couldFill()) {
      boolean tryAgain=true;
      int drained=0;
      int filled=0;
      boolean lastDrainFailed=false;
      boolean lastFillFailed=false;
      while (tryAgain && processor.canLoop()) {
        if (isDraining()) {
          drained=0;
          if (hasRemaining()) {
            drained=processor.onDrain(this,args);
          }
          if (drained > 0) {
            totalDrained+=drained;
            lastDrainFailed=false;
            lastFillFailed=false;
          }
 else           if (!lastFillFailed && couldFill()) {
            lastDrainFailed=true;
            beforeFill();
          }
 else {
            tryAgain=false;
          }
        }
 else         if (isFilling()) {
          filled=0;
          if (hasRemaining()) {
            filled=processor.onFill(this,args);
          }
          if (filled > 0) {
            totalFilled+=filled;
            lastDrainFailed=false;
            lastFillFailed=false;
          }
 else           if (!lastDrainFailed && couldDrain()) {
            lastFillFailed=true;
            beforeDrain();
          }
 else {
            tryAgain=false;
          }
        }
 else {
          tryAgain=false;
        }
      }
      if ((totalDrained == 0) && !processor.couldFill()) {
        totalDrained=-1;
      }
    }
 else {
      totalDrained=-1;
    }
  }
  return totalDrained;
}
