{
  if (next != null) {
    if (isRequestEntityBuffering()) {
      request.bufferEntity();
    }
    next.handle(request,response);
    if (isRetryOnError() && response.getStatus().isRecoverableError() && request.getMethod().isIdempotent()&& (retryAttempt < getRetryAttempts())&& ((request.getEntity() == null) || request.getEntity().isAvailable())) {
      retry(request,response,references,retryAttempt,next);
    }
 else     if (isFollowingRedirects() && response.getStatus().isRedirection() && (response.getLocationRef() != null)) {
      boolean doRedirection=false;
      if (request.getMethod().isSafe()) {
        doRedirection=true;
      }
 else {
        if (Status.REDIRECTION_SEE_OTHER.equals(response.getStatus())) {
          request.setMethod(Method.GET);
          request.setEntity(null);
          doRedirection=true;
        }
 else         if (Status.REDIRECTION_USE_PROXY.equals(response.getStatus())) {
          doRedirection=true;
        }
      }
      if (doRedirection) {
        redirect(request,response,references,retryAttempt,next);
      }
 else {
        getLogger().fine("Unable to redirect the client call after a response" + response);
      }
    }
    if (isResponseEntityBuffering()) {
      response.bufferEntity();
    }
  }
 else {
    getLogger().log(Level.WARNING,"Request ignored as no next Restlet is available");
  }
}
