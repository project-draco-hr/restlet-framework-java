{
  getNext().handle(request,response);
  if (request.getMethod().isSafe() && response.getStatus().isRedirection() && response.getLocationRef() != null) {
    Reference newTargetRef=response.getLocationRef();
    if ((references != null) && references.contains(newTargetRef)) {
      getLogger().warning("Infinite redirection loop detected with URI: " + newTargetRef);
    }
 else     if (request.getEntity() != null && !request.isEntityAvailable()) {
      getLogger().warning("Unable to follow the redirection because the request entity isn't available anymore.");
    }
 else {
      if (references == null) {
        references=new ArrayList<Reference>();
      }
      references.add(request.getResourceRef());
      request.setResourceRef(newTargetRef);
      handle(request,response,references,0);
    }
  }
 else   if (request.getMethod().isIdempotent() && response.getStatus().isRecoverableError()) {
    if (isRetryOnError() && (retryAttempt < getRetryAttempts())) {
      if ((getRequestEntity() == null) || getRequestEntity().isAvailable()) {
        getLogger().log(Level.INFO,"A recoverable error was detected, attempting again in " + getRetryDelay() + " ms.");
        if (getRetryDelay() > 0) {
          try {
            Thread.sleep(getRetryDelay());
          }
 catch (          InterruptedException e) {
            getLogger().log(Level.FINE,"Retry delay sleep was interrupted",e);
          }
        }
        handle(request,response,references,++retryAttempt);
      }
    }
  }
}
