def test_conversion(self):


    class Foo0:

        def __unicode__(self):
            return u'foo'


    class Foo1:

        def __str__(self):
            return 'foo'


    class Foo2(object):

        def __str__(self):
            return 'foo'


    class Foo3(object):

        def __str__(self):
            return u'foo'


    class Foo4(unicode):

        def __str__(self):
            return u'foo'


    class Foo5(str):

        def __str__(self):
            return u'foo'


    class Foo6(str):

        def __str__(self):
            return 'foos'

        def __unicode__(self):
            return u'foou'


    class Foo7(unicode):

        def __str__(self):
            return 'foos'

        def __unicode__(self):
            return u'foou'


    class Foo8(str):

        def __new__(cls, content=''):
            return str.__new__(cls, (2 * content))

        def __str__(self):
            return self


    class Foo9(str):

        def __str__(self):
            return 'string'

        def __unicode__(self):
            return 'not unicode'
    self.assert_(str(Foo0()).startswith('<'))
    self.assertEqual(str(Foo1()), 'foo')
    self.assertEqual(str(Foo2()), 'foo')
    self.assertEqual(str(Foo3()), 'foo')
    self.assertEqual(str(Foo4('bar')), 'foo')
    self.assertEqual(str(Foo5('bar')), 'foo')
    self.assertEqual(str(Foo6('bar')), 'foos')
    self.assertEqual(str(Foo7('bar')), 'foos')
    self.assertEqual(str(Foo8('foo')), 'foofoo')
    self.assertEqual(str(Foo9('foo')), 'string')
    self.assertEqual(unicode(Foo9('foo')), u'not unicode')
