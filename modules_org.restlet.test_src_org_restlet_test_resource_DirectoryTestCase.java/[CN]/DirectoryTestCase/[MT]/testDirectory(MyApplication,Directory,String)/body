{
  final File testFile=File.createTempFile("test",".txt",this.testDir);
  final File testDirectory=new File(this.testDir,"try");
  testDirectory.mkdir();
  final String testFileUrl=this.webSiteURL.concat(testFile.getName());
  final String testDirectoryUrl=this.webSiteURL.concat(testDirectory.getName());
  directory.setIndexName(indexName);
  directory.setListingAllowed(false);
  Response response=handle(application,this.webSiteURL,this.webSiteURL,Method.GET,null,"1a");
  assertEquals(Status.CLIENT_ERROR_NOT_FOUND,response.getStatus());
  directory.setListingAllowed(true);
  response=handle(application,this.webSiteURL,this.webSiteURL,Method.GET,null,"1b");
  assertEquals(Status.SUCCESS_OK,response.getStatus());
  if (response.getStatus().equals(Status.SUCCESS_OK)) {
    response.getEntity().write(System.out);
  }
  response=handle(application,this.webSiteURL,testFileUrl,Method.GET,null,"2a");
  assertEquals(Status.SUCCESS_NO_CONTENT,response.getStatus());
  response=handle(application,this.webSiteURL,testFileUrl,Method.HEAD,null,"2a");
  assertEquals(Status.SUCCESS_OK,response.getStatus());
  response=handle(application,this.webSiteURL,this.webSiteURL + "123456.txt",Method.GET,null,"2b");
  assertEquals(Status.CLIENT_ERROR_NOT_FOUND,response.getStatus());
  directory.setModifiable(false);
  response=handle(application,this.webSiteURL,this.baseFileUrl,Method.PUT,new StringRepresentation("this is test 3a"),"3a");
  assertEquals(Status.CLIENT_ERROR_METHOD_NOT_ALLOWED,response.getStatus());
  directory.setModifiable(true);
  Representation rep=new StringRepresentation("this is test 3b");
  rep.getLanguages().add(Language.FRENCH);
  response=handle(application,this.webSiteURL,this.baseFileUrlFr,Method.PUT,rep,"3b");
  assertEquals(Status.SUCCESS_CREATED,response.getStatus());
  response=handle(application,this.webSiteURL,this.baseFileUrl,Method.GET,null,"4");
  assertEquals(Status.SUCCESS_OK,response.getStatus());
  if (response.getStatus().equals(Status.SUCCESS_OK)) {
    response.getEntity().write(System.out);
    System.out.println("");
  }
  response=handle(application,this.webSiteURL,this.baseFileUrlEn,Method.PUT,new StringRepresentation("this is a test - En"),"5a");
  assertEquals(Status.SUCCESS_CREATED,response.getStatus());
  response=handle(application,this.webSiteURL,this.baseFileUrl,Method.HEAD,null,"5b");
  assertEquals(Status.SUCCESS_OK,response.getStatus());
  response=handle(application,this.webSiteURL,this.baseFileUrlEn,Method.HEAD,null,"5c");
  assertEquals(Status.SUCCESS_OK,response.getStatus());
  response=handle(application,this.webSiteURL,testFileUrl,Method.DELETE,null,"6a-1");
  assertEquals(Status.SUCCESS_NO_CONTENT,response.getStatus());
  response=handle(application,this.webSiteURL,testFileUrl,Method.HEAD,null,"6a-2");
  assertEquals(Status.CLIENT_ERROR_NOT_FOUND,response.getStatus());
  response=handle(application,this.webSiteURL,testFileUrl,Method.DELETE,null,"6b");
  assertEquals(Status.CLIENT_ERROR_NOT_FOUND,response.getStatus());
  if (indexName.length() == 0) {
    response=handle(application,this.webSiteURL,testDirectoryUrl,Method.DELETE,null,"6c-1");
    assertEquals(Status.REDIRECTION_SEE_OTHER,response.getStatus());
    response=handle(application,response.getLocationRef().getIdentifier(),response.getLocationRef().getIdentifier(),Method.DELETE,null,"6c-2");
    assertEquals(Status.CLIENT_ERROR_FORBIDDEN,response.getStatus());
    response=handle(application,this.webSiteURL,this.webSiteURL,Method.DELETE,null,"6c-3");
    assertEquals(Status.CLIENT_ERROR_FORBIDDEN,response.getStatus());
  }
 else {
    response=handle(application,this.webSiteURL,testDirectoryUrl + "/",Method.DELETE,null,"6c-2");
    assertEquals(Status.CLIENT_ERROR_NOT_FOUND,response.getStatus());
    response=handle(application,this.webSiteURL,this.webSiteURL,Method.DELETE,null,"6c-3");
    assertEquals(Status.CLIENT_ERROR_NOT_FOUND,response.getStatus());
  }
  response=handle(application,this.webSiteURL,this.baseFileUrlFr,Method.PUT,new StringRepresentation("message de test"),"7a");
  assertTrue(response.getStatus().isSuccess());
  directory.setNegotiatingContent(false);
  response=handle(application,this.webSiteURL,this.baseFileUrlFrBis,Method.PUT,new StringRepresentation("message de test"),"7b-1");
  assertEquals(Status.SUCCESS_OK,response.getStatus());
  response=handle(application,this.webSiteURL,this.baseFileUrlFr,Method.HEAD,null,"7b-2");
  assertEquals(Status.SUCCESS_OK,response.getStatus());
  response=handle(application,this.webSiteURL,this.baseFileUrlFrBis,Method.HEAD,null,"7b-3");
  assertTrue(response.getStatus().equals(Status.SUCCESS_OK));
  response=handle(application,this.webSiteURL,this.baseFileUrlFr,Method.DELETE,null,"7c-1");
  assertEquals(Status.SUCCESS_NO_CONTENT,response.getStatus());
  response=handle(application,this.webSiteURL,this.baseFileUrlFr,Method.HEAD,null,"7c-2");
  assertEquals(Status.CLIENT_ERROR_NOT_FOUND,response.getStatus());
  response=handle(application,this.webSiteURL,this.baseFileUrlFrBis,Method.HEAD,null,"7c-3");
  assertEquals(Status.CLIENT_ERROR_NOT_FOUND,response.getStatus());
  response=handle(application,this.webSiteURL,this.baseFileUrlFrBis,Method.DELETE,null,"7c-4");
  assertEquals(Status.CLIENT_ERROR_NOT_FOUND,response.getStatus());
  directory.setNegotiatingContent(true);
  response=handle(application,this.webSiteURL,this.baseFileUrlFr,Method.PUT,new StringRepresentation("message de test"),"7d-1");
  assertEquals(Status.SUCCESS_CREATED,response.getStatus());
  response=handle(application,this.webSiteURL,this.baseFileUrlFrBis,Method.PUT,new StringRepresentation("message de test Bis"),"7d-2");
  assertEquals(Status.SUCCESS_OK,response.getStatus());
  response=handle(application,this.webSiteURL,this.baseFileUrlFr,Method.HEAD,null,"7d-3");
  assertEquals(Status.SUCCESS_OK,response.getStatus());
  response=handle(application,this.webSiteURL,this.baseFileUrlFrBis,Method.HEAD,null,"7d-4");
  assertEquals(Status.SUCCESS_OK,response.getStatus());
  directory.setNegotiatingContent(false);
  response=handle(application,this.webSiteURL,this.baseFileUrlFr,Method.HEAD,null,"7d-5");
  assertEquals(Status.SUCCESS_OK,response.getStatus());
  directory.setNegotiatingContent(true);
  response=handle(application,this.webSiteURL,this.baseFileUrlFr,Method.DELETE,null,"7e-1");
  assertEquals(Status.SUCCESS_NO_CONTENT,response.getStatus());
  response=handle(application,this.webSiteURL,this.baseFileUrlFr,Method.HEAD,null,"7e-2");
  if (application.getTunnelService().isExtensionsTunnel()) {
    assertEquals(Status.SUCCESS_OK,response.getStatus());
  }
 else {
    assertEquals(Status.CLIENT_ERROR_NOT_FOUND,response.getStatus());
  }
  response=handle(application,this.webSiteURL,this.baseFileUrlFrBis,Method.HEAD,null,"7e-8");
  if (application.getTunnelService().isExtensionsTunnel()) {
    assertEquals(Status.SUCCESS_OK,response.getStatus());
  }
 else {
    assertEquals(Status.CLIENT_ERROR_NOT_FOUND,response.getStatus());
  }
  response=handle(application,this.webSiteURL,this.baseFileUrlFr,Method.DELETE,null,"8a");
  response=handle(application,this.webSiteURL,this.baseFileUrlEn,Method.DELETE,null,"8b");
  assertEquals(Status.SUCCESS_NO_CONTENT,response.getStatus());
  directory.setModifiable(true);
  rep=new StringRepresentation("this is test 9a");
  rep.getLanguages().add(Language.FRENCH);
  response=handle(application,this.webSiteURL,this.percentEncodedFileUrl,Method.PUT,rep,"9a");
  assertEquals(Status.SUCCESS_CREATED,response.getStatus());
  response=handle(application,this.webSiteURL,this.percentEncodedFileUrl,Method.GET,null,"9b");
  assertEquals(Status.SUCCESS_OK,response.getStatus());
  if (response.getStatus().equals(Status.SUCCESS_OK)) {
    response.getEntity().write(System.out);
    System.out.println("");
  }
  response=handle(application,this.webSiteURL,this.percentEncodedFileUrlBis,Method.GET,null,"9c");
  assertEquals(Status.SUCCESS_OK,response.getStatus());
  if (response.getStatus().equals(Status.SUCCESS_OK)) {
    response.getEntity().write(System.out);
    System.out.println("");
  }
  response=handle(application,this.webSiteURL,this.percentEncodedFileUrl,Method.DELETE,null,"9d");
  assertEquals(Status.SUCCESS_NO_CONTENT,response.getStatus());
  response=handle(application,webSiteURL,testCreationDirectory,Method.PUT,new StringRepresentation("useless entity"),"10a");
  assertTrue(response.getStatus().equals(Status.REDIRECTION_SEE_OTHER));
  response=handle(application,webSiteURL,testCreationDirectory + "/",Method.PUT,new StringRepresentation("useless entity"),"10b");
  assertTrue(response.getStatus().equals(Status.SUCCESS_NO_CONTENT));
  response=handle(application,webSiteURL,testCreationFile,Method.PUT,new StringRepresentation("file entity"),"10c");
  assertTrue(response.getStatus().equals(Status.REDIRECTION_SEE_OTHER));
  response=handle(application,webSiteURL,testCreationTextFile,Method.PUT,new StringRepresentation("file entity"),"10d");
  assertTrue(response.getStatus().equals(Status.SUCCESS_CREATED));
  BioUtils.delete(testDirectory,true);
  System.out.println("End of tests*********************");
}
