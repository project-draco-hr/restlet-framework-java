def print_command_list(self, commands, header, max_length):
    "Print a subset of the list of all commands -- used by\n        'print_commands()'.\n        "
    print (header + ':')
    for cmd in commands:
        klass = self.cmdclass.get(cmd)
        if (not klass):
            klass = self.get_command_class(cmd)
        try:
            description = klass.description
        except AttributeError:
            description = '(no description available)'
        print ('  %-*s  %s' % (max_length, cmd, description))
