def updatecache(filename, module_globals=None):
    "Update a cache entry and return its list of lines.\n    If something's wrong, print a message, discard the cache entry,\n    and return an empty list."
    if (filename in cache):
        del cache[filename]
    if ((not filename) or ((filename[0] + filename[(-1)]) == '<>')):
        return []
    fullname = filename
    try:
        stat = os.stat(fullname)
    except os.error as msg:
        basename = os.path.split(filename)[1]
        if (module_globals and ('__loader__' in module_globals)):
            name = module_globals.get('__name__')
            loader = module_globals['__loader__']
            get_source = getattr(loader, 'get_source', None)
            if (name and get_source):
                if basename.startswith((name.split('.')[(-1)] + '.')):
                    try:
                        data = get_source(name)
                    except (ImportError, IOError):
                        pass
                    else:
                        if (data is None):
                            return []
                        cache[filename] = (len(data), None, [(line + '\n') for line in data.splitlines()], fullname)
                        return cache[filename][2]
        for dirname in sys.path:
            try:
                fullname = os.path.join(dirname, basename)
            except (TypeError, AttributeError):
                pass
            else:
                try:
                    stat = os.stat(fullname)
                    break
                except os.error:
                    pass
        else:
            return []
    try:
        fp = open(fullname, 'rU')
        lines = fp.readlines()
        fp.close()
    except IOError as msg:
        return []
    (size, mtime) = (stat.st_size, stat.st_mtime)
    cache[filename] = (size, mtime, lines, fullname)
    return lines
