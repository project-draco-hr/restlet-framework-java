{
  String text="Test content\r\nLine 2\r\nLine2";
  String text2="Test content\nLine 2";
  LocalReference fr=LocalReference.createFileReference(zipFile);
  Reference zr=new Reference("zip:" + fr.toString());
  String fzr=zr + "!/test.txt";
  String fzd=zr + "!/dir/";
  String fzr2=zr + "!/test2.txt";
  String fzr3=fzd + "test3.txt";
  ClientResource r=new ClientResource(fzr);
  r.put(new StringRepresentation(text));
  assertTrue(r.getStatus().equals(Status.SUCCESS_CREATED));
  r.get();
  assertTrue(r.getStatus().equals(Status.SUCCESS_OK));
  assertEquals(r.getResponseEntity().getText(),text);
  r.release();
  ClientResource r2=new ClientResource(fzr2);
  r2.put(new StringRepresentation(text2));
  assertTrue(r2.getStatus().equals(Status.SUCCESS_OK));
  r.get();
  assertTrue(r.getStatus().equals(Status.SUCCESS_OK));
  assertEquals(r.getResponseEntity().getText(),text);
  r.release();
  ClientResource rd=new ClientResource(fzd);
  rd.put(new EmptyRepresentation());
  assertTrue(rd.getStatus().equals(Status.SUCCESS_OK));
  rd.get();
  assertTrue(rd.getStatus().equals(Status.SUCCESS_OK));
  ClientResource r3=new ClientResource(fzr3);
  r3.put(new StringRepresentation(text));
  assertTrue(r3.getStatus().equals(Status.SUCCESS_OK));
  r2.get();
  assertTrue("Could not get " + fzr2,r2.getStatus().equals(Status.SUCCESS_OK));
  assertEquals(r2.getResponseEntity().getText(),text2);
  try {
    ClientResource rTest2=new ClientResource(zr + "!test2");
    rTest2.get();
    fail();
  }
 catch (  ResourceException e) {
  }
  try {
    ClientResource r2d=new ClientResource(fzr2 + "/");
    r2d.put(new EmptyRepresentation());
    fail();
  }
 catch (  ResourceException e) {
  }
}
