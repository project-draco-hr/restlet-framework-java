"Generic output formatting.\n\nFormatter objects transform an abstract flow of formatting events into\nspecific output events on writer objects. Formatters manage several stack\nstructures to allow various properties of a writer object to be changed and\nrestored; writers need not be able to handle relative changes nor any sort\nof ``change back'' operation. Specific writer properties which may be\ncontrolled via formatter objects are horizontal alignment, font, and left\nmargin indentations. A mechanism is provided which supports providing\narbitrary, non-exclusive style settings to a writer as well. Additional\ninterfaces facilitate formatting events which are not reversible, such as\nparagraph separation.\n\nWriter objects encapsulate device interfaces. Abstract devices, such as\nfile formats, are supported as well as physical devices. The provided\nimplementations all work with abstract devices. The interface makes\navailable mechanisms for setting the properties which formatter objects\nmanage and inserting data into the output.\n"
import sys
AS_IS = None
if (__name__ == '__main__'):
    test()
