def test_knotted(self):
    'Verify .isrecursive() and .isreadable() w/ recursion.'
    self.b[67] = self.a
    self.d = {}
    self.d[0] = self.d[1] = self.d[2] = self.d
    verify = self.assert_
    for icky in (self.a, self.b, self.d, (self.d, self.d)):
        verify(pprint.isrecursive(icky), 'expected isrecursive')
        verify((not pprint.isreadable(icky)), 'expected not isreadable')
    self.d.clear()
    del self.a[:]
    del self.b[:]
    for safe in (self.a, self.b, self.d, (self.d, self.d)):
        verify((not pprint.isrecursive(safe)), ('expected not isrecursive for ' + `safe`))
        verify(pprint.isreadable(safe), ('expected isreadable for ' + `safe`))
