from __future__ import with_statement
import tempfile
import os
import sys
import re
import errno
import warnings
import unittest
from test import test_support
warnings.filterwarnings('ignore', category=RuntimeWarning, message='mktemp', module=__name__)
if hasattr(os, 'stat'):
    import stat
    has_stat = 1
else:
    has_stat = 0
has_textmode = (tempfile._text_openflags != tempfile._bin_openflags)
has_spawnl = hasattr(os, 'spawnl')
if (sys.platform == 'mac'):
    TEST_FILES = 32
elif (sys.platform in ('openbsd3', 'openbsd4')):
    TEST_FILES = 48
else:
    TEST_FILES = 100
test_classes = []
test_classes.append(test_exports)
test_classes.append(test__RandomNameSequence)
test_classes.append(test__candidate_tempdir_list)
test_classes.append(test__get_candidate_names)
test_classes.append(test__mkstemp_inner)
test_classes.append(test_gettempprefix)
test_classes.append(test_gettempdir)
test_classes.append(test_mkstemp)
test_classes.append(test_mkdtemp)
test_classes.append(test_mktemp)
test_classes.append(test_NamedTemporaryFile)
if (tempfile.NamedTemporaryFile is not tempfile.TemporaryFile):
    test_classes.append(test_TemporaryFile)
if (__name__ == '__main__'):
    test_main()
    from java.lang import System
    System.gc()
