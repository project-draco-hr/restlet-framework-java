'\natexit.py - allow programmer to define multiple exit functions to be executed\nupon normal program termination.\n\nOne public function, register, is defined.\n'
__all__ = ['register']
import sys
_exithandlers = []
if hasattr(sys, 'exitfunc'):
    register(sys.exitfunc)
sys.exitfunc = _run_exitfuncs
if (__name__ == '__main__'):

    def x1():
        print 'running x1'

    def x2(n):
        print ('running x2(%r)' % (n,))

    def x3(n, kwd=None):
        print ('running x3(%r, kwd=%r)' % (n, kwd))
    register(x1)
    register(x2, 12)
    register(x3, 5, 'bar')
    register(x3, 'no kwd args')
