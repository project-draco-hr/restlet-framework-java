def test_main(verbose=None):
    testclasses = [WichmannHill_TestBasicOps, MersenneTwister_TestBasicOps, TestDistributions, TestModule]
    if test_support.is_jython:
        del MersenneTwister_TestBasicOps.test_genrandbits
        del MersenneTwister_TestBasicOps.test_referenceImplementation
        del MersenneTwister_TestBasicOps.test_setstate_middle_arg
        del MersenneTwister_TestBasicOps.test_strong_reference_implementation
    try:
        random.SystemRandom().random()
    except NotImplementedError:
        pass
    else:
        testclasses.append(SystemRandom_TestBasicOps)
    test_support.run_unittest(*testclasses)
    import sys
    if (verbose and hasattr(sys, 'gettotalrefcount')):
        counts = ([None] * 5)
        for i in xrange(len(counts)):
            test_support.run_unittest(*testclasses)
            counts[i] = sys.gettotalrefcount()
        print counts
