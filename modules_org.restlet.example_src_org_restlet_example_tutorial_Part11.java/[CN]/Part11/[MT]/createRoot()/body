{
  final Router router=new Router(getContext());
  final Guard guard=new Guard(getContext(),ChallengeScheme.HTTP_BASIC,"Restlet tutorial");
  guard.getSecrets().put("scott","tiger".toCharArray());
  router.attach("/docs/",guard);
  final Directory directory=new Directory(getContext(),ROOT_URI);
  guard.setNext(directory);
  final Restlet account=new Restlet(){
    @Override public void handle(    Request request,    Response response){
      final String message="Account of user \"" + request.getAttributes().get("user") + "\"";
      response.setEntity(message,MediaType.TEXT_PLAIN);
    }
  }
;
  final Restlet orders=new Restlet(getContext()){
    @Override public void handle(    Request request,    Response response){
      final String message="Orders of user \"" + request.getAttributes().get("user") + "\"";
      response.setEntity(message,MediaType.TEXT_PLAIN);
    }
  }
;
  final Restlet order=new Restlet(getContext()){
    @Override public void handle(    Request request,    Response response){
      final String message="Order \"" + request.getAttributes().get("order") + "\" for user \""+ request.getAttributes().get("user")+ "\"";
      response.setEntity(message,MediaType.TEXT_PLAIN);
    }
  }
;
  router.attach("/users/{user}",account);
  router.attach("/users/{user}/orders",orders);
  router.attach("/users/{user}/orders/{order}",order);
  return router;
}
