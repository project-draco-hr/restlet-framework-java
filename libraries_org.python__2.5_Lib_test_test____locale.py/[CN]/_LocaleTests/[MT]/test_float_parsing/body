def test_float_parsing(self):
    for loc in candidate_locales:
        try:
            setlocale(LC_NUMERIC, loc)
        except Error:
            continue
        if ((loc == 'eu_ES') and (localeconv()['decimal_point'] == "' ")):
            continue
        self.assertEquals(int((eval('3.14') * 100)), 314, ("using eval('3.14') failed for %s" % loc))
        self.assertEquals(int((float('3.14') * 100)), 314, ("using float('3.14') failed for %s" % loc))
        if (localeconv()['decimal_point'] != '.'):
            self.assertRaises(ValueError, float, localeconv()['decimal_point'].join(['1', '23']))
