{
  component=new Component();
  if (https) {
    client=new OAuthClientTestApplication(getProt(),serverPort,this.getSslClientParameters());
    Context c=component.getServers().add(Protocol.HTTPS,serverPort).getContext();
    configureSslServerParameters(c);
    component.getClients().add(Protocol.HTTPS);
    component.getDefaultHost().attach("/server",new OAuthMultipleUserProtectedTestApplication(getProt(),oauthServerPort,this.getSslClientParameters()));
  }
 else {
    client=new OAuthClientTestApplication(getProt(),serverPort,null);
    component.getServers().add(Protocol.HTTP,serverPort);
    component.getDefaultHost().attach("/server",new OAuthMultipleUserProtectedTestApplication(getProt(),oauthServerPort,null));
  }
  component.getClients().add(Protocol.HTTP);
  component.getClients().add(Protocol.RIAP);
  oauthcomp=new Component();
  if (https) {
    Context c=oauthcomp.getServers().add(Protocol.HTTPS,oauthServerPort).getContext();
    configureSslServerParameters(c);
    oauthcomp.getClients().add(Protocol.HTTPS);
  }
 else {
    oauthcomp.getServers().add(Protocol.HTTP,oauthServerPort);
  }
  oauthcomp.getClients().add(Protocol.HTTP);
  oauthcomp.getClients().add(Protocol.RIAP);
  oauthcomp.getDefaultHost().attach("/oauth",new OAuthMultipleUserTestApplication(0,getProt(),serverPort));
  component.start();
  oauthcomp.start();
}
