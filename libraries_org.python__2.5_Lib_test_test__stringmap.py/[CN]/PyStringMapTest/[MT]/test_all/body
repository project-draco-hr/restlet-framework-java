def test_all(self):
    d = PyStringMap()
    d['one'] = 1
    self.assertEqual(d['one'], 1)
    self.assertRaises(KeyError, d.__getitem__, 'two')
    del d['one']
    self.assertRaises(KeyError, d.__delitem__, 'one')
    d.update(self._reference())
    d.clear()
    self.assertEqual(d, {})
    d.update(self._reference())
    da = d.copy()
    self.assertEqual(d, da)
    r = self._reference()
    d.update(self._reference())
    for k in d.keys():
        self.failUnless((k in r.keys()))
    for i in d.items():
        self.failUnless((i in r.items()))
    for v in d.values():
        self.failUnless((v in r.values()))
    for i in r.keys():
        self.assert_(d.has_key(i))
        self.assert_((i in d))
    self.assertRaises(TypeError, hash, d)
