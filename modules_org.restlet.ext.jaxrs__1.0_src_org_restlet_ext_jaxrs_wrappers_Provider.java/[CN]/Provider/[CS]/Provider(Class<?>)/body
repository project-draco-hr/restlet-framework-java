{
  RootResourceClass.checkClassPublicConcrete(jaxRsProviderClass,"provider");
  Constructor<?> providerConstructor=RootResourceClass.findJaxRsConstructor(jaxRsProviderClass);
  Object jaxRsProvider=createInstance(providerConstructor,jaxRsProviderClass);
  if (jaxRsProvider == null)   throw new IllegalArgumentException("The JAX-RS Provider must not be null");
  boolean isProvider=false;
  if (jaxRsProvider instanceof javax.ws.rs.ext.MessageBodyWriter) {
    this.writer=(javax.ws.rs.ext.MessageBodyWriter<T>)jaxRsProvider;
    isProvider=true;
  }
  if (jaxRsProvider instanceof javax.ws.rs.ext.MessageBodyReader) {
    this.reader=(javax.ws.rs.ext.MessageBodyReader<T>)jaxRsProvider;
    isProvider=true;
  }
  if (jaxRsProvider instanceof javax.ws.rs.ext.ContextResolver) {
    this.contextResolver=(javax.ws.rs.ext.ContextResolver<T>)jaxRsProvider;
    isProvider=true;
  }
  if (!isProvider) {
    throw new IllegalArgumentException("The given JAX-RS Provider is neither a MessageBodyWriter nor a MessageBodyReader nor a ContextResolver");
  }
  injectDependencies();
}
