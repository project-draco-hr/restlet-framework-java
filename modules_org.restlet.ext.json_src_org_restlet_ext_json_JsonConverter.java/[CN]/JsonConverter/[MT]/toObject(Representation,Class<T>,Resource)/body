{
  JsonRepresentation jsonSource=null;
  if (source instanceof JsonRepresentation) {
    jsonSource=(JsonRepresentation)source;
  }
 else {
    jsonSource=new JsonRepresentation(source);
  }
  T result=null;
  if (target != null) {
    if (JSONArray.class.isAssignableFrom(target)) {
      try {
        result=target.cast(jsonSource.getJsonArray());
      }
 catch (      JSONException e) {
        IOException ioe=new IOException("Unable to convert to JSON array");
        ioe.initCause(e);
      }
    }
 else     if (JSONObject.class.isAssignableFrom(target)) {
      try {
        result=target.cast(jsonSource.getJsonObject());
      }
 catch (      JSONException e) {
        IOException ioe=new IOException("Unable to convert to JSON object");
        ioe.initCause(e);
        throw ioe;
      }
    }
 else     if (JSONTokener.class.isAssignableFrom(target)) {
      try {
        result=target.cast(jsonSource.getJsonTokener());
      }
 catch (      JSONException e) {
        IOException ioe=new IOException("Unable to convert to JSON tokener");
        ioe.initCause(e);
        throw ioe;
      }
    }
 else     if (JsonRepresentation.class.isAssignableFrom(target)) {
      result=target.cast(jsonSource);
    }
  }
  return (T)result;
}
