{
  TemplateRoute templateRoute=(TemplateRoute)router.getNext(request,response);
  if (templateRoute == null) {
    response.setStatus(Status.CLIENT_ERROR_NOT_FOUND);
    return STOP;
  }
  RestletOperationAuthorization restletOperationAuthorization=(RestletOperationAuthorization)templateRoute.getNext();
  List<Role> userRoles=request.getClientInfo().getRoles();
  boolean authorized=false;
  OperationAuthorization operationAuthorization=restletOperationAuthorization.getOperationAuthorization();
  List<String> groupsAllowed=operationAuthorization.getGroupsAllowed();
  if (groupsAllowed == null) {
    LOGGER.warning("No group is allowed for method " + operationAuthorization.getMethod() + " on this resource: "+ operationAuthorization.getPathTemplate());
  }
 else {
    for (    String groupAllowed : groupsAllowed) {
      if (hasRole(userRoles,groupAllowed) || "anyone".equals(groupAllowed)) {
        authorized=true;
        break;
      }
    }
  }
  if (authorized) {
    return CONTINUE;
  }
 else {
    response.setStatus(Status.CLIENT_ERROR_FORBIDDEN);
    return STOP;
  }
}
