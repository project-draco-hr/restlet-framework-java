def test_isfile(self):
    self.assertIs(posixpath.isfile(test_support.TESTFN), False)
    f = open(test_support.TESTFN, 'wb')
    try:
        f.write('foo')
        f.close()
        self.assertIs(posixpath.isfile(test_support.TESTFN), True)
        os.remove(test_support.TESTFN)
        os.mkdir(test_support.TESTFN)
        self.assertIs(posixpath.isfile(test_support.TESTFN), False)
        os.rmdir(test_support.TESTFN)
    finally:
        if (not f.close()):
            f.close()
        try:
            os.remove(test_support.TESTFN)
        except os.error:
            pass
        try:
            os.rmdir(test_support.TESTFN)
        except os.error:
            pass
    self.assertRaises(TypeError, posixpath.isdir)

    def test_samefile(self):
        f = open((test_support.TESTFN + '1'), 'wb')
        try:
            f.write('foo')
            f.close()
            self.assertIs(posixpath.samefile((test_support.TESTFN + '1'), (test_support.TESTFN + '1')), True)
            if hasattr(os, 'symlink'):
                os.symlink((test_support.TESTFN + '1'), (test_support.TESTFN + '2'))
                self.assertIs(posixpath.samefile((test_support.TESTFN + '1'), (test_support.TESTFN + '2')), True)
                os.remove((test_support.TESTFN + '2'))
                f = open((test_support.TESTFN + '2'), 'wb')
                f.write('bar')
                f.close()
                self.assertIs(posixpath.samefile((test_support.TESTFN + '1'), (test_support.TESTFN + '2')), False)
        finally:
            if (not f.close()):
                f.close()
            try:
                os.remove((test_support.TESTFN + '1'))
            except os.error:
                pass
            try:
                os.remove((test_support.TESTFN + '2'))
            except os.error:
                pass
        self.assertRaises(TypeError, posixpath.samefile)
