{
  String action=getQuery().getFirstValue("action");
  if (action != null) {
    String[] scopes=getQuery().getValuesArray("scope");
    handleAction(action,scopes);
    return new EmptyRepresentation();
  }
  String authPage=HttpOAuthHelper.getAuthPageTemplate(getContext());
  getLogger().fine("this is auth page: " + authPage);
  if (authPage != null && authPage.length() > 0) {
    getLogger().fine("loading authPage: " + authPage);
    boolean sameScope=HttpOAuthHelper.getAuthSkipApproved(getContext());
    if (sameScope) {
      String[] scopesArray=getQuery().getValuesArray("scope");
      List<String> scopes=Arrays.asList(scopesArray);
      List<String> previousScopes=Arrays.asList(getQuery().getValuesArray("grantedScope"));
      if (previousScopes.containsAll(scopes)) {
        getLogger().fine("All scopes already approved. - skip auth page.");
        handleAction("Accept",scopesArray);
        return new EmptyRepresentation();
      }
    }
    addCacheDirective(getResponse(),CacheDirective.noCache());
    return getPage(authPage);
  }
  getLogger().fine("accepting scopes since no authPage: " + authPage);
  handleAction(ACTION_ACCEPT,getQuery().getValuesArray("scope"));
  getLogger().fine("action handled");
  return new EmptyRepresentation();
}
