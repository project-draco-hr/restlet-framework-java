def _expand_lang(locale):
    from locale import normalize
    locale = normalize(locale)
    COMPONENT_CODESET = (1 << 0)
    COMPONENT_TERRITORY = (1 << 1)
    COMPONENT_MODIFIER = (1 << 2)
    mask = 0
    pos = locale.find('@')
    if (pos >= 0):
        modifier = locale[pos:]
        locale = locale[:pos]
        mask |= COMPONENT_MODIFIER
    else:
        modifier = ''
    pos = locale.find('.')
    if (pos >= 0):
        codeset = locale[pos:]
        locale = locale[:pos]
        mask |= COMPONENT_CODESET
    else:
        codeset = ''
    pos = locale.find('_')
    if (pos >= 0):
        territory = locale[pos:]
        locale = locale[:pos]
        mask |= COMPONENT_TERRITORY
    else:
        territory = ''
    language = locale
    ret = []
    for i in range((mask + 1)):
        if (not (i & (~ mask))):
            val = language
            if (i & COMPONENT_TERRITORY):
                val += territory
            if (i & COMPONENT_CODESET):
                val += codeset
            if (i & COMPONENT_MODIFIER):
                val += modifier
            ret.append(val)
    ret.reverse()
    return ret
