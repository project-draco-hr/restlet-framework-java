{
  for (  Link link : linkset) {
    if (link.hasReferenceSource()) {
      if (link.hasReferenceTarget()) {
        link(link.getSourceAsReference(),link.getTypeRef(),link.getTargetAsReference());
      }
 else       if (link.hasLiteralTarget()) {
        link(link.getSourceAsReference(),link.getTypeRef(),link.getTargetAsLiteral());
      }
 else       if (link.hasLinkTarget()) {
      }
 else {
        org.restlet.Context.getCurrentLogger().warning("Cannot write the representation of a statement due to the fact that the object is neither a Reference nor a literal.");
      }
    }
 else     if (link.hasGraphSource()) {
      this.writingExtraDot=false;
      if (link.hasReferenceTarget()) {
        link(link.getSourceAsGraph(),link.getTypeRef(),link.getTargetAsReference());
      }
 else       if (link.hasLiteralTarget()) {
        link(link.getSourceAsGraph(),link.getTypeRef(),link.getTargetAsLiteral());
      }
 else       if (link.hasLinkTarget()) {
      }
 else {
        org.restlet.Context.getCurrentLogger().warning("Cannot write the representation of a statement due to the fact that the object is neither a Reference nor a literal.");
      }
      this.writer.write(".\n");
    }
    this.precSource=link.getSourceAsReference();
    this.precPredicate=link.getTypeRef();
  }
  if (writingExtraDot) {
    this.writer.write(".\n");
  }
}
