def deepcopy(x, memo=None):
    "Deep copy operation on arbitrary Python objects.\n\n    See the module's __doc__ string for more info.\n    "
    if (memo is None):
        memo = {}
    d = id(x)
    if memo.has_key(d):
        return memo[d]
    try:
        copierfunction = _deepcopy_dispatch[type(x)]
    except KeyError:
        try:
            copier = x.__deepcopy__
        except AttributeError:
            raise error, ('un-deep-copyable object of type %s' % type(x))
        y = copier(memo)
    else:
        y = copierfunction(x, memo)
    memo[d] = y
    return y
