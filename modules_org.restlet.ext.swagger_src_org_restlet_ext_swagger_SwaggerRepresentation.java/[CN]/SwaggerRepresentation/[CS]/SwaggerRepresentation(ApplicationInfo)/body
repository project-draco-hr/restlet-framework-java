{
  super(MediaType.APPLICATION_JSON);
  java.util.List<String> protocols=new ArrayList<String>();
  for (  ConnectorHelper<Server> helper : Engine.getInstance().getRegisteredServers()) {
    for (    Protocol protocol : helper.getProtocols()) {
      if (!protocols.contains(protocol.getName())) {
        protocols.add(protocol.getName());
      }
    }
  }
  List<String> produces=new ArrayList<String>();
  List<String> consumes=new ArrayList<String>();
  for (  RepresentationInfo ri : application.getRepresentations()) {
    produces.add(ri.getMediaType().getName());
    consumes.add(ri.getMediaType().getName());
  }
  List<Authorization> authorizations=new ArrayList<Authorization>();
  List<ApiDescription> apis=new ArrayList<ApiDescription>();
  for (  ResourceInfo ri : application.getResources().getResources()) {
    List<Operation> ops=new ArrayList<Operation>();
    int i=0;
    for (    MethodInfo mi : ri.getMethods()) {
      List<Parameter> params=new ArrayList<Parameter>();
      if (mi.getRequest() != null && mi.getRequest().getParameters() != null) {
        for (        ParameterInfo pi : mi.getRequest().getParameters()) {
          Parameter param=new Parameter(pi.getName(),scala.Option.apply(toString(pi.getDocumentations())),scala.Option.apply(pi.getDefaultValue()),true,true,pi.getType(),new AllowableListValues(null,pi.getType()),pi.getStyle().name(),scala.Option.apply("paramAccess"));
          params.add(param);
        }
      }
      List<ResponseMessage> liste=new ArrayList<ResponseMessage>();
      Operation op=new Operation(mi.getName().getName(),toString(mi.getDocumentations()),"","",mi.getIdentifier(),i,scala.collection.JavaConversions.asScalaIterable(consumes).toList(),scala.collection.JavaConversions.asScalaIterable(consumes).toList(),scala.collection.JavaConversions.asScalaIterable(protocols).toList(),scala.collection.JavaConversions.asScalaIterable(authorizations).toList(),scala.collection.JavaConversions.asScalaIterable(params).toList(),scala.collection.JavaConversions.asScalaIterable(liste).toList(),scala.Option.apply(""));
      ops.add(op);
      i++;
    }
    apis.add(new ApiDescription(ri.getPath(),scala.Option.apply(toString(ri.getDocumentations())),scala.collection.JavaConversions.asScalaIterable(ops).toList()));
  }
  Map<String,Model> models=new java.util.HashMap<String,Model>();
  scala.collection.immutable.Map<String,Model> pouet=new scala.collection.immutable.HashMap<String,Model>();
  scala.Option<scala.collection.immutable.Map<String,Model>> truc=scala.Option.apply(pouet);
  apiListing=new ApiListing(application.getVersion(),SwaggerSpec.version(),application.getResources().getBaseRef().toString(),application.getResources().getBaseRef().toString(),scala.collection.JavaConversions.asScalaIterable(consumes).toList(),scala.collection.JavaConversions.asScalaIterable(produces).toList(),scala.collection.JavaConversions.asScalaIterable(protocols).toList(),scala.collection.JavaConversions.asScalaIterable(authorizations).toList(),scala.collection.JavaConversions.asScalaIterable(apis).toList(),truc,scala.Option.apply(toString(application.getDocumentations())),0);
  this.application=application;
}
