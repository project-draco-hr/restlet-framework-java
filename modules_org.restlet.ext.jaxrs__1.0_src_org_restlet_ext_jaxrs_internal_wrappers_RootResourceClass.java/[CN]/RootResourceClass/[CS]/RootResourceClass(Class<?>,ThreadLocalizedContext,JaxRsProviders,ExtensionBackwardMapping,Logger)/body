{
  super(jaxRsClass,jaxRsProviders,tlContext,extensionBackwardMapping,logger);
  Util.checkClassConcrete(getJaxRsClass(),"root resource class");
  checkClassForPathAnnot(jaxRsClass,"root resource class");
  this.injectHelper=new IntoRrcInjector(jaxRsClass,tlContext,isLeaveEncoded(),jaxRsProviders,extensionBackwardMapping);
  this.constructor=WrapperUtil.findJaxRsConstructor(getJaxRsClass(),"root resource class");
  final boolean constructorLeaveEncoded=isLeaveEncoded() || constructor.isAnnotationPresent(Encoded.class);
  try {
    this.constructorParameters=new ParameterList(this.constructor,tlContext,constructorLeaveEncoded,jaxRsProviders,extensionBackwardMapping,true,logger,!this.singelton);
  }
 catch (  IllegalTypeException e) {
    throw new IllegalConstrParamTypeException(e);
  }
}
