{
  Mapping mapping=null;
  Matcher matcher=null;
  boolean found=false;
  String resourcePath=call.getPath(0,false);
  for (Iterator iter=iterator(); !found && iter.hasNext(); ) {
    mapping=(Mapping)iter.next();
    matcher=mapping.getPathPattern().matcher(resourcePath);
    found=matcher.lookingAt();
  }
  if (found) {
    String restletPath=resourcePath.substring(0,matcher.end());
    resourcePath=resourcePath.substring(matcher.end());
    call.getPaths().set(0,restletPath);
    call.getPaths().add(0,resourcePath);
    Restlet restlet=null;
    try {
      if (mapping.getRestlet() != null) {
        restlet=mapping.getRestlet();
      }
 else       if (mapping.isSetContainer()) {
        restlet=(Restlet)mapping.getRestletConstructor().newInstance(new Object[]{getContainer()});
      }
 else {
        restlet=(Restlet)mapping.getRestletClass().newInstance();
      }
    }
 catch (    InstantiationException ie) {
      throw new RestletException("Restlet can't be instantiated",ie);
    }
catch (    IllegalAccessException iae) {
      throw new RestletException("Restlet can't be accessed",iae);
    }
catch (    InvocationTargetException ite) {
      throw new RestletException("Restlet can't be invoked",ite);
    }
    restlet.handle(call);
  }
 else {
    call.setStatus(StatusEnum.CLIENT_ERROR_NOT_FOUND);
  }
}
