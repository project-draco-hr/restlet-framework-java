from test_support import verbose, TestSkipped
import signal
import os
import sys
if ((sys.platform[:3] in ('win', 'os2')) or (sys.platform == 'riscos')):
    raise TestSkipped, ("Can't test signal on %s" % sys.platform)
if verbose:
    x = '-x'
else:
    x = '+x'
pid = os.getpid()
script = ('\n (\n        set %(x)s\n        sleep 2\n        kill -5 %(pid)d\n        sleep 2\n        kill -2 %(pid)d\n        sleep 2\n        kill -3 %(pid)d\n ) &\n' % vars())
HandlerBCalled = 'HandlerBCalled'
signal.alarm(20)
signal.signal(5, handlerA)
signal.signal(2, handlerB)
signal.signal(3, signal.SIG_IGN)
signal.signal(signal.SIGALRM, signal.default_int_handler)
os.system(script)
print 'starting pause() loop...'
try:
    while 1:
        if verbose:
            print 'call pause()...'
        try:
            signal.pause()
            if verbose:
                print 'pause() returned'
        except HandlerBCalled:
            if verbose:
                print 'HandlerBCalled exception caught'
            else:
                pass
except KeyboardInterrupt:
    if verbose:
        print 'KeyboardInterrupt (assume the alarm() went off)'
