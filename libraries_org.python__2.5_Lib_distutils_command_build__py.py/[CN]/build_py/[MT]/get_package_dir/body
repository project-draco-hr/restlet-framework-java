def get_package_dir(self, package):
    "Return the directory, relative to the top of the source\n           distribution, where package 'package' should be found\n           (at least according to the 'package_dir' option, if any)."
    path = string.split(package, '.')
    if (not self.package_dir):
        if path:
            return apply(os.path.join, path)
        else:
            return ''
    else:
        tail = []
        while path:
            try:
                pdir = self.package_dir[string.join(path, '.')]
            except KeyError:
                tail.insert(0, path[(-1)])
                del path[(-1)]
            else:
                tail.insert(0, pdir)
                return apply(os.path.join, tail)
        else:
            pdir = self.package_dir.get('')
            if (pdir is not None):
                tail.insert(0, pdir)
            if tail:
                return apply(os.path.join, tail)
            else:
                return ''
