def get(self, section, option, raw=False, vars=None):
    "Get an option value for a given section.\n\n        All % interpolations are expanded in the return values, based on the\n        defaults passed into the constructor, unless the optional argument\n        `raw' is true.  Additional substitutions may be provided using the\n        `vars' argument, which must be a dictionary whose contents overrides\n        any pre-existing defaults.\n\n        The section DEFAULT is special.\n        "
    d = self._defaults.copy()
    try:
        d.update(self._sections[section])
    except KeyError:
        if (section != DEFAULTSECT):
            raise NoSectionError(section)
    if vars:
        for (key, value) in vars.items():
            d[self.optionxform(key)] = value
    option = self.optionxform(option)
    try:
        value = d[option]
    except KeyError:
        raise NoOptionError(option, section)
    if raw:
        return value
    else:
        return self._interpolate(section, option, value, d)
