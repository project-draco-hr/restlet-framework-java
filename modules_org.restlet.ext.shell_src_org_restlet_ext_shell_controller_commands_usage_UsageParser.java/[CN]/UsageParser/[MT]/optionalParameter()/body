{
  optionalParameter_return retval=new optionalParameter_return();
  retval.start=input.LT(1);
  Object root_0=null;
  Token char_literal11=null;
  Token char_literal13=null;
  parameter_return parameter12=null;
  Object char_literal11_tree=null;
  Object char_literal13_tree=null;
  RewriteRuleTokenStream stream_10=new RewriteRuleTokenStream(adaptor,"token 10");
  RewriteRuleTokenStream stream_11=new RewriteRuleTokenStream(adaptor,"token 11");
  RewriteRuleSubtreeStream stream_parameter=new RewriteRuleSubtreeStream(adaptor,"rule parameter");
  try {
{
      char_literal11=(Token)input.LT(1);
      match(input,10,FOLLOW_10_in_optionalParameter179);
      stream_10.add(char_literal11);
      pushFollow(FOLLOW_parameter_in_optionalParameter181);
      parameter12=parameter();
      _fsp--;
      stream_parameter.add(parameter12.getTree());
      char_literal13=(Token)input.LT(1);
      match(input,11,FOLLOW_11_in_optionalParameter183);
      stream_11.add(char_literal13);
      retval.tree=root_0;
      RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"token retval",retval != null ? retval.tree : null);
      root_0=(Object)adaptor.nil();
{
{
          Object root_1=(Object)adaptor.nil();
          root_1=(Object)adaptor.becomeRoot(adaptor.create(OPT,"OPT"),root_1);
          adaptor.addChild(root_1,stream_parameter.next());
          adaptor.addChild(root_0,root_1);
        }
      }
    }
    retval.stop=input.LT(-1);
    retval.tree=(Object)adaptor.rulePostProcessing(root_0);
    adaptor.setTokenBoundaries(retval.tree,retval.start,retval.stop);
  }
 catch (  RecognitionException re) {
    reportError(re);
    recover(input,re);
  }
 finally {
  }
  return retval;
}
