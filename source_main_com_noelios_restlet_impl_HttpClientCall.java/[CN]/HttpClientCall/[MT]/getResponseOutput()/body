{
  Representation result=null;
  if (getResponseStream() != null) {
    result=new InputRepresentation(getResponseStream(),null);
  }
 else   if (getResponseChannel() != null) {
    result=new ReadableRepresentation(getResponseChannel(),null);
  }
  if (result != null) {
    RepresentationMetadata metadata=result.getMetadata();
    for (    Parameter header : getResponseHeaders()) {
      if (header.getName().equalsIgnoreCase(ConnectorCall.HEADER_CONTENT_TYPE)) {
        ContentType contentType=new ContentType(header.getValue());
        if (contentType != null) {
          metadata.setMediaType(contentType.getMediaType());
          metadata.setCharacterSet(contentType.getCharacterSet());
        }
      }
 else       if (header.getName().equalsIgnoreCase(ConnectorCall.HEADER_CONTENT_LENGTH)) {
        result.setSize(Long.parseLong(header.getValue()));
      }
 else       if (header.getName().equalsIgnoreCase(ConnectorCall.HEADER_EXPIRES)) {
        metadata.setExpirationDate(parseDate(header.getValue(),false));
      }
 else       if (header.getName().equalsIgnoreCase(ConnectorCall.HEADER_CONTENT_ENCODING)) {
        metadata.setEncoding(new DefaultEncoding(header.getValue()));
      }
 else       if (header.getName().equalsIgnoreCase(ConnectorCall.HEADER_CONTENT_LANGUAGE)) {
        metadata.setLanguage(new DefaultLanguage(header.getValue()));
      }
 else       if (header.getName().equalsIgnoreCase(ConnectorCall.HEADER_LAST_MODIFIED)) {
        metadata.setModificationDate(parseDate(header.getValue(),false));
      }
 else       if (header.getName().equalsIgnoreCase(ConnectorCall.HEADER_ETAG)) {
        metadata.setTag(new Tag(header.getValue()));
      }
    }
  }
  return result;
}
