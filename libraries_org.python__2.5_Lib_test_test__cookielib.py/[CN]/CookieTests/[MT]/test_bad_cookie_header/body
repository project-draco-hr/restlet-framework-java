def test_bad_cookie_header(self):

    def cookiejar_from_cookie_headers(headers):
        from cookielib import CookieJar
        from urllib2 import Request
        c = CookieJar()
        req = Request('http://www.example.com/')
        r = FakeResponse(headers, 'http://www.example.com/')
        c.extract_cookies(r, req)
        return c
    for headers in [['Set-Cookie: '], ['Set-Cookie2: '], ['Set-Cookie2: a=foo; path=/; Version=1; domain'], ['Set-Cookie: b=foo; max-age=oops']]:
        c = cookiejar_from_cookie_headers(headers)
        self.assertEquals(len(c), 0)
    headers = ['Set-Cookie: c=foo; expires=Foo Bar 12 33:22:11 2000']
    c = cookiejar_from_cookie_headers(headers)
    cookie = c._cookies['www.example.com']['/']['c']
    self.assert_((cookie.expires is None))
