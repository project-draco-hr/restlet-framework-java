def test_domain_block(self):
    from cookielib import CookieJar, DefaultCookiePolicy
    from urllib2 import Request
    pol = DefaultCookiePolicy(rfc2965=True, blocked_domains=['.acme.com'])
    c = CookieJar(policy=pol)
    headers = ['Set-Cookie: CUSTOMER=WILE_E_COYOTE; path=/']
    req = Request('http://www.acme.com/')
    res = FakeResponse(headers, 'http://www.acme.com/')
    c.extract_cookies(res, req)
    self.assertEquals(len(c), 0)
    p = pol.set_blocked_domains(['acme.com'])
    c.extract_cookies(res, req)
    self.assertEquals(len(c), 1)
    c.clear()
    req = Request('http://www.roadrunner.net/')
    res = FakeResponse(headers, 'http://www.roadrunner.net/')
    c.extract_cookies(res, req)
    self.assertEquals(len(c), 1)
    req = Request('http://www.roadrunner.net/')
    c.add_cookie_header(req)
    self.assert_((req.has_header('Cookie') and req.has_header('Cookie2')))
    c.clear()
    pol.set_blocked_domains(['.acme.com'])
    c.extract_cookies(res, req)
    self.assertEquals(len(c), 1)
    req = Request('http://www.acme.com/')
    res = FakeResponse(headers, 'http://www.acme.com/')
    cookies = c.make_cookies(res, req)
    c.set_cookie(cookies[0])
    self.assertEquals(len(c), 2)
    c.add_cookie_header(req)
    self.assert_((not req.has_header('Cookie')))
