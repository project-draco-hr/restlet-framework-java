def test_ns_parser(self):
    from cookielib import CookieJar, DEFAULT_HTTP_PORT
    c = CookieJar()
    interact_netscape(c, 'http://www.acme.com/', 'spam=eggs; DoMain=.acme.com; port; blArgh="feep"')
    interact_netscape(c, 'http://www.acme.com/', 'ni=ni; port=80,8080')
    interact_netscape(c, 'http://www.acme.com:80/', 'nini=ni')
    interact_netscape(c, 'http://www.acme.com:80/', 'foo=bar; expires=')
    interact_netscape(c, 'http://www.acme.com:80/', 'spam=eggs; expires="Foo Bar 25 33:22:11 3022"')
    cookie = c._cookies['.acme.com']['/']['spam']
    self.assertEquals(cookie.domain, '.acme.com')
    self.assert_(cookie.domain_specified)
    self.assertEquals(cookie.port, DEFAULT_HTTP_PORT)
    self.assert_((not cookie.port_specified))
    self.assert_((cookie.has_nonstandard_attr('blArgh') and (not cookie.has_nonstandard_attr('blargh'))))
    cookie = c._cookies['www.acme.com']['/']['ni']
    self.assertEquals(cookie.domain, 'www.acme.com')
    self.assert_((not cookie.domain_specified))
    self.assertEquals(cookie.port, '80,8080')
    self.assert_(cookie.port_specified)
    cookie = c._cookies['www.acme.com']['/']['nini']
    self.assert_((cookie.port is None))
    self.assert_((not cookie.port_specified))
    foo = c._cookies['www.acme.com']['/']['foo']
    spam = c._cookies['www.acme.com']['/']['foo']
    self.assert_((foo.expires is None))
    self.assert_((spam.expires is None))
