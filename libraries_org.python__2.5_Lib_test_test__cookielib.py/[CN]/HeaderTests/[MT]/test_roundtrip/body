def test_roundtrip(self):
    from cookielib import split_header_words, join_header_words
    tests = [('foo', 'foo'), ('foo=bar', 'foo=bar'), ('   foo   ', 'foo'), ('foo=', 'foo=""'), ('foo=bar bar=baz', 'foo=bar; bar=baz'), ('foo=bar;bar=baz', 'foo=bar; bar=baz'), ('foo bar baz', 'foo; bar; baz'), ('foo="\\"" bar="\\\\"', 'foo="\\""; bar="\\\\"'), ('foo,,,bar', 'foo, bar'), ('foo=bar,bar=baz', 'foo=bar, bar=baz'), ('text/html; charset=iso-8859-1', 'text/html; charset="iso-8859-1"'), ('foo="bar"; port="80,81"; discard, bar=baz', 'foo=bar; port="80,81"; discard, bar=baz'), ('Basic realm="\\"foo\\\\\\\\bar\\""', 'Basic; realm="\\"foo\\\\\\\\bar\\""')]
    for (arg, expect) in tests:
        input = split_header_words([arg])
        res = join_header_words(input)
        self.assertEquals(res, expect, ("\nWhen parsing: '%s'\nExpected:     '%s'\nGot:          '%s'\nInput was:    '%s'\n" % (arg, expect, res, input)))
