def test_split_header_words(self):
    from cookielib import split_header_words
    tests = [('foo', [[('foo', None)]]), ('foo=bar', [[('foo', 'bar')]]), ('   foo   ', [[('foo', None)]]), ('   foo=   ', [[('foo', '')]]), ('   foo=', [[('foo', '')]]), ('   foo=   ; ', [[('foo', '')]]), ('   foo=   ; bar= baz ', [[('foo', ''), ('bar', 'baz')]]), ('foo=bar bar=baz', [[('foo', 'bar'), ('bar', 'baz')]]), ('foo= bar=baz', [[('foo', 'bar=baz')]]), ('foo=bar;bar=baz', [[('foo', 'bar'), ('bar', 'baz')]]), ('foo bar baz', [[('foo', None), ('bar', None), ('baz', None)]]), ('a, b, c', [[('a', None)], [('b', None)], [('c', None)]]), ('foo; bar=baz, spam=, foo="\\,\\;\\"", bar= ', [[('foo', None), ('bar', 'baz')], [('spam', '')], [('foo', ',;"')], [('bar', '')]])]
    for (arg, expect) in tests:
        try:
            result = split_header_words([arg])
        except:
            import traceback, StringIO
            f = StringIO.StringIO()
            traceback.print_exc(None, f)
            result = ('(error -- traceback follows)\n\n%s' % f.getvalue())
        self.assertEquals(result, expect, ("\nWhen parsing: '%s'\nExpected:     '%s'\nGot:          '%s'\n" % (arg, expect, result)))
