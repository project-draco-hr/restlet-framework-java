def search_function(encoding):
    entry = _cache.get(encoding, _unknown)
    if (entry is not _unknown):
        return entry
    modname = encoding.replace('-', '_')
    modname = aliases.aliases.get(modname, modname)
    try:
        mod = __import__(modname, globals(), locals(), '*')
    except ImportError as why:
        _cache[encoding] = None
        return None
    try:
        getregentry = mod.getregentry
    except AttributeError:
        _cache[encoding] = None
        return None
    try:
        entry = tuple(getregentry())
    except AttributeError:
        entry = ()
    if (len(entry) != 4):
        raise CodecRegistryError, ('module "%s" (%s) failed to register' % (mod.__name__, mod.__file__))
    for obj in entry:
        if (not callable(obj)):
            raise CodecRegistryError, ('incompatible codecs in module "%s" (%s)' % (mod.__name__, mod.__file__))
    _cache[encoding] = entry
    try:
        codecaliases = mod.getaliases()
    except AttributeError:
        pass
    else:
        for alias in codecaliases:
            if (not aliases.aliases.has_key(alias)):
                aliases.aliases[alias] = modname
    return entry
