{
  AbstractConnector result=null;
switch (getType()) {
case 1:
    SslSelectChannelConnector nioResult=new SslSelectChannelConnector();
  nioResult.setKeyPassword(getKeyPassword());
nioResult.setKeystore(getKeystorePath());
nioResult.setKeystoreType(getKeystoreType());
nioResult.setNeedClientAuth(isNeedClientAuthentication());
nioResult.setPassword(getKeystorePassword());
nioResult.setProtocol(getSslProtocol());
nioResult.setProvider(getSecurityProvider());
nioResult.setSecureRandomAlgorithm(getSecureRandomAlgorithm());
nioResult.setSslKeyManagerFactoryAlgorithm(getCertAlgorithm());
nioResult.setSslTrustManagerFactoryAlgorithm(getCertAlgorithm());
nioResult.setTrustPassword(getKeystorePassword());
result=nioResult;
break;
case 2:
SslSocketConnector bioResult=new SslSocketConnector();
bioResult.setKeyPassword(getKeyPassword());
bioResult.setKeystore(getKeystorePath());
bioResult.setKeystoreType(getKeystoreType());
bioResult.setNeedClientAuth(isNeedClientAuthentication());
bioResult.setPassword(getKeystorePassword());
bioResult.setProtocol(getSslProtocol());
bioResult.setProvider(getSecurityProvider());
bioResult.setSecureRandomAlgorithm(getSecureRandomAlgorithm());
bioResult.setSslKeyManagerFactoryAlgorithm(getCertAlgorithm());
bioResult.setSslTrustManagerFactoryAlgorithm(getCertAlgorithm());
bioResult.setTrustPassword(getKeystorePassword());
bioResult.setWantClientAuth(isWantClientAuthentication());
result=bioResult;
break;
}
return result;
}
