{
  StringBuilder result=new StringBuilder();
  StringBuilder varBuffer=null;
  char next;
  boolean inVariable=false;
  int patternLength=getPattern().length();
  for (int i=0; i < patternLength; i++) {
    next=getPattern().charAt(i);
    if (inVariable) {
      if (Reference.isUnreserved(next)) {
        varBuffer.append(next);
      }
 else       if (next == '}') {
        if (varBuffer.length() == 0) {
          getLogger().warning("Empty pattern variables are not allowed : " + this.regexPattern);
        }
 else {
          String varName=varBuffer.toString();
          result.append(resolver.resolve(varName));
          varBuffer=new StringBuilder();
        }
        inVariable=false;
      }
 else {
        getLogger().warning("An invalid character was detected inside a pattern variable : " + this.regexPattern);
      }
    }
 else {
      if (next == '{') {
        inVariable=true;
        varBuffer=new StringBuilder();
      }
 else       if (next == '}') {
        getLogger().warning("An invalid character was detected inside a pattern variable : " + this.regexPattern);
      }
 else {
        result.append(next);
      }
    }
  }
  return result.toString();
}
