def resolveDict(self):
    theList = []
    if isinstance(self.objects[(-1)], DictToken):
        self.objects[(-1)] = {}
        return
    try:
        value = self.objects.pop()
    except IndexError:
        raise SyntaxError
    try:
        colon = self.objects.pop()
        if (not isinstance(colon, ColonToken)):
            raise SyntaxError
    except IndexError:
        raise SyntaxError
    try:
        key = self.objects.pop()
        if (not isinstance(key, basestring)):
            raise SyntaxError
    except IndexError:
        raise SyntaxError
    comma = value
    while (not isinstance(comma, DictToken)):
        theList.append((key, value))
        try:
            comma = self.objects.pop()
        except IndexError:
            raise SyntaxError
        if isinstance(comma, CommaToken):
            try:
                value = self.objects.pop()
            except IndexError:
                raise SyntaxError
            try:
                colon = self.objects.pop()
                if (not isinstance(colon, ColonToken)):
                    raise SyntaxError
            except IndexError:
                raise SyntaxError
            try:
                key = self.objects.pop()
                if (not isinstance(key, basestring)):
                    raise SyntaxError
            except IndexError:
                raise SyntaxError
    theDict = {}
    for k in theList:
        theDict[k[0]] = k[1]
    self.objects.append(theDict)
