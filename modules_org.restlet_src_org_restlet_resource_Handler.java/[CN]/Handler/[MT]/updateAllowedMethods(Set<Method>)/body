{
  for (  final java.lang.reflect.Method orig_classMethod : getClass().getMethods()) {
    java.lang.reflect.Method classMethod;
    try {
      classMethod=getAncestorMethod(orig_classMethod);
      if (classMethod.getName().startsWith("allow") && (classMethod.getParameterTypes().length == 0)) {
        if ((Boolean)invoke(classMethod)) {
          final Method allowedMethod=Method.valueOf(classMethod.getName().substring(5));
          allowedMethods.add(allowedMethod);
        }
      }
    }
 catch (    NoSuchMethodException e) {
      getLogger().log(Level.FINE,"Unable to find a public version of this method.",e);
    }
  }
}
