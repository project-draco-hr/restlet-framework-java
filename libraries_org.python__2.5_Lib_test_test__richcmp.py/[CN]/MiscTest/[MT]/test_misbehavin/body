def test_misbehavin(self):


    class Misb:

        def __lt__(self, other):
            return 0

        def __gt__(self, other):
            return 0

        def __eq__(self, other):
            return 0

        def __le__(self, other):
            raise TestFailed, "This shouldn't happen"

        def __ge__(self, other):
            raise TestFailed, "This shouldn't happen"

        def __ne__(self, other):
            raise TestFailed, "This shouldn't happen"

        def __cmp__(self, other):
            raise RuntimeError, 'expected'
    a = Misb()
    b = Misb()
    self.assertEqual((a < b), 0)
    self.assertEqual((a == b), 0)
    self.assertEqual((a > b), 0)
    self.assertRaises(RuntimeError, cmp, a, b)
