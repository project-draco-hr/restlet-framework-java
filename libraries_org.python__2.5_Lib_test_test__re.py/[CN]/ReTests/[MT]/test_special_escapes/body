def test_special_escapes(self):
    self.assertEqual(re.search('\\b(b.)\\b', 'abcd abc bcd bx').group(1), 'bx')
    self.assertEqual(re.search('\\B(b.)\\B', 'abc bcd bc abxd').group(1), 'bx')
    self.assertEqual(re.search('\\b(b.)\\b', 'abcd abc bcd bx', re.LOCALE).group(1), 'bx')
    self.assertEqual(re.search('\\B(b.)\\B', 'abc bcd bc abxd', re.LOCALE).group(1), 'bx')
    self.assertEqual(re.search('\\b(b.)\\b', 'abcd abc bcd bx', re.UNICODE).group(1), 'bx')
    self.assertEqual(re.search('\\B(b.)\\B', 'abc bcd bc abxd', re.UNICODE).group(1), 'bx')
    self.assertEqual(re.search('^abc$', '\nabc\n', re.M).group(0), 'abc')
    self.assertEqual(re.search('^\\Aabc\\Z$', 'abc', re.M).group(0), 'abc')
    self.assertEqual(re.search('^\\Aabc\\Z$', '\nabc\n', re.M), None)
    self.assertEqual(re.search('\\b(b.)\\b', u'abcd abc bcd bx').group(1), 'bx')
    self.assertEqual(re.search('\\B(b.)\\B', u'abc bcd bc abxd').group(1), 'bx')
    self.assertEqual(re.search('^abc$', u'\nabc\n', re.M).group(0), 'abc')
    self.assertEqual(re.search('^\\Aabc\\Z$', u'abc', re.M).group(0), 'abc')
    self.assertEqual(re.search('^\\Aabc\\Z$', u'\nabc\n', re.M), None)
    self.assertEqual(re.search('\\d\\D\\w\\W\\s\\S', '1aa! a').group(0), '1aa! a')
    self.assertEqual(re.search('\\d\\D\\w\\W\\s\\S', '1aa! a', re.LOCALE).group(0), '1aa! a')
    self.assertEqual(re.search('\\d\\D\\w\\W\\s\\S', '1aa! a', re.UNICODE).group(0), '1aa! a')
