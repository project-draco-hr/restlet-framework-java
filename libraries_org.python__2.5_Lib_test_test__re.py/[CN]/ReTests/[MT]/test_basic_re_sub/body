def test_basic_re_sub(self):
    self.assertEqual(re.sub('(?i)b+', 'x', 'bbbb BBBB'), 'x x')
    self.assertEqual(re.sub('\\d+', self.bump_num, '08.2 -2 23x99y'), '9.3 -3 24x100y')
    self.assertEqual(re.sub('\\d+', self.bump_num, '08.2 -2 23x99y', 3), '9.3 -3 23x99y')
    self.assertEqual(re.sub('.', (lambda m: '\\n'), 'x'), '\\n')
    self.assertEqual(re.sub('.', '\\n', 'x'), '\n')
    s = '\\1\\1'
    self.assertEqual(re.sub('(.)', s, 'x'), 'xx')
    self.assertEqual(re.sub('(.)', re.escape(s), 'x'), s)
    self.assertEqual(re.sub('(.)', (lambda m: s), 'x'), s)
    self.assertEqual(re.sub('(?P<a>x)', '\\g<a>\\g<a>', 'xx'), 'xxxx')
    self.assertEqual(re.sub('(?P<a>x)', '\\g<a>\\g<1>', 'xx'), 'xxxx')
    self.assertEqual(re.sub('(?P<unk>x)', '\\g<unk>\\g<unk>', 'xx'), 'xxxx')
    self.assertEqual(re.sub('(?P<unk>x)', '\\g<1>\\g<1>', 'xx'), 'xxxx')
    self.assertEqual(re.sub('a', '\\t\\n\\v\\r\\f\\a\\b\\B\\Z\\a\\A\\w\\W\\s\\S\\d\\D', 'a'), '\t\n\x0b\r\x0c\x07\x08\\B\\Z\x07\\A\\w\\W\\s\\S\\d\\D')
    self.assertEqual(re.sub('a', '\t\n\x0b\r\x0c\x07', 'a'), '\t\n\x0b\r\x0c\x07')
    self.assertEqual(re.sub('a', '\t\n\x0b\r\x0c\x07', 'a'), (((((chr(9) + chr(10)) + chr(11)) + chr(13)) + chr(12)) + chr(7)))
    self.assertEqual(re.sub('^\\s*', 'X', 'test'), 'Xtest')
