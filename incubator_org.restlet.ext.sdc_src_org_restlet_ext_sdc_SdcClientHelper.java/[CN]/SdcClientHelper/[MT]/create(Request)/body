{
  ClientCall result=null;
  try {
    Reference targetRef=request.getResourceRef().getBaseRef() == null ? request.getResourceRef() : request.getResourceRef().getTargetRef();
    if (request.getChallengeResponse() != null) {
      if (request.getChallengeResponse().getScheme().equals(ChallengeScheme.valueOf("SDC"))) {
        String key=request.getChallengeResponse().getIdentifier() + ":" + String.valueOf(request.getChallengeResponse().getSecret());
        int retryAttempts=3;
        int retryDelay=3000;
        SdcServerConnection ssc=null;
        for (int i=0; (ssc == null) && (i < retryAttempts); i++) {
          ssc=getConnections().get(key);
          if (ssc == null) {
            try {
              Thread.sleep(retryDelay);
            }
 catch (            InterruptedException e) {
              e.printStackTrace();
            }
          }
        }
        if (ssc == null) {
          getLogger().log(Level.WARNING,"Unable to find an established SDC tunnel for this request: ",request.getResourceRef());
        }
 else {
          result=new SdcClientCall(this,ssc,request.getMethod().toString(),targetRef.toString());
        }
      }
    }
  }
 catch (  IOException ioe) {
    getLogger().log(Level.WARNING,"Unable to create the HTTP client call",ioe);
  }
  return result;
}
