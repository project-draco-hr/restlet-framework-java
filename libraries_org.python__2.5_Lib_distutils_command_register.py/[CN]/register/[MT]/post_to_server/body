def post_to_server(self, data, auth=None):
    ' Post a query to the server, and return a string response.\n        '
    boundary = '--------------GHSKFJDLGDS7543FJKLFHRE75642756743254'
    sep_boundary = ('\n--' + boundary)
    end_boundary = (sep_boundary + '--')
    body = StringIO.StringIO()
    for (key, value) in data.items():
        if (type(value) not in (type([]), type(()))):
            value = [value]
        for value in value:
            value = unicode(value).encode('utf-8')
            body.write(sep_boundary)
            body.write(('\nContent-Disposition: form-data; name="%s"' % key))
            body.write('\n\n')
            body.write(value)
            if (value and (value[(-1)] == '\r')):
                body.write('\n')
    body.write(end_boundary)
    body.write('\n')
    body = body.getvalue()
    headers = {'Content-type': ('multipart/form-data; boundary=%s; charset=utf-8' % boundary), 'Content-length': str(len(body)), }
    req = urllib2.Request(self.repository, body, headers)
    opener = urllib2.build_opener(urllib2.HTTPBasicAuthHandler(password_mgr=auth))
    data = ''
    try:
        result = opener.open(req)
    except urllib2.HTTPError as e:
        if self.show_response:
            data = e.fp.read()
        result = (e.code, e.msg)
    except urllib2.URLError as e:
        result = (500, str(e))
    else:
        if self.show_response:
            data = result.read()
        result = (200, 'OK')
    if self.show_response:
        print ('-' * 75), data, ('-' * 75)
    return result
