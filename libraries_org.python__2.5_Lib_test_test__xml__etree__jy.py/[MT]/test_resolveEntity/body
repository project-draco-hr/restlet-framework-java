@jython
def test_resolveEntity():
    '\n    # TODO: test that \'skipEntity\' works.\n\n    >>> # Jython\n    >>> from org.python.core.util import StringUtil\n    >>> from jarray import array\n\n    >>> # Java Standard Edition\n    >>> from org.xml.sax import *\n    >>> from org.xml.sax.ext import *\n    >>> from org.xml.sax.helpers import *\n    >>> from java.io import ByteArrayInputStream\n\n    >>> xml = \'\'\'<!DOCTYPE doc\n    ... [<!ENTITY entity SYSTEM "entity-file">\n    ... ]>\n    ... <doc>&entity;</doc>\n    ... \'\'\'\n\n    >>> def empty_source():\n    ...     _source = InputSource()\n    ...     byte_stream = ByteArrayInputStream(array([], "b"))\n    ...     _source.setByteStream(byte_stream)\n    ...     return _source\n\n    >>> class Handler(EntityResolver2):\n    ...     def getExternalSubset(self, name, baseURI):\n    ...         return None\n    ...     def resolveEntity(self, name, publicId, baseURI, systemId):\n    ...         print "Entity name:", name\n    ...         return empty_source()\n\n    >>> def main():\n    ...     sax_parser = "org.apache.xerces.parsers.SAXParser"\n    ...     reader = XMLReaderFactory.createXMLReader(sax_parser)\n    ...     entity_resolver2 = "http://xml.org/sax/features/use-entity-resolver2"\n    ...     enabled = reader.getFeature(entity_resolver2)\n    ...     print "Entity-Resolver2 enabled:", enabled\n    ...     handler = Handler()\n    ...     reader.setEntityResolver(handler)\n    ...     bytes = StringUtil.toBytes(xml)\n    ...     byte_stream = ByteArrayInputStream(bytes)\n    ...     source = InputSource(byte_stream)\n    ...     reader.parse(source)\n\n    >>> main()\n    Entity-Resolver2 enabled: True\n    Entity name: entity\n    '
