def test_DTD():
    '\n    >>> xml = \'\'\'<!DOCTYPE doc [\n    ...          <!ELEMENT doc (any|empty|text|mixed|opt|many|plus)>\n    ...          <!ELEMENT any ANY>\n    ...          <!ELEMENT empty EMPTY>\n    ...          <!ELEMENT text (#PCDATA)>\n    ...          <!ELEMENT sequence (_sequence)>\n    ...          <!ELEMENT _sequence (any,any)>\n    ...          <!ELEMENT mixed (#PCDATA|any)*>\n    ...          <!ELEMENT opt (empty)?>\n    ...          <!ELEMENT many (empty)*>\n    ...          <!ELEMENT plus (empty)+>\n    ...          ]>\n    ...          <doc><text>content</text></doc>\n    ...       \'\'\'\n    >>> parser = expat.ParserCreate()\n    >>> def handler(header, *args):\n    ...     def _handler(*args):\n    ...         print header + ":", args\n    ...     return _handler\n    >>> parser.ElementDeclHandler = handler("ELEMENT")\n    >>> parser.AttlistDeclHandler = handler("ATTRIBUTE")\n    >>> parser.EntityDeclHandler = handler("ENTITY")\n    >>> parser.NotationDeclHandler = handler("NOTATION")\n    >>> parser.UnparsedEntityDeclHandler = handler("UNPARSED")\n    >>> parser.Parse(xml, True)\n    ELEMENT: (u\'doc\', (5, 0, None, ((4, 0, u\'any\', ()), (4, 0, u\'empty\', ()), (4, 0, u\'text\', ()), (4, 0, u\'mixed\', ()), (4, 0, u\'opt\', ()), (4, 0, u\'many\', ()), (4, 0, u\'plus\', ()))))\n    ELEMENT: (u\'any\', (2, 0, None, ()))\n    ELEMENT: (u\'empty\', (1, 0, None, ()))\n    ELEMENT: (u\'text\', (3, 0, None, ()))\n    ELEMENT: (u\'sequence\', (6, 0, None, ((4, 0, u\'_sequence\', ()),)))\n    ELEMENT: (u\'_sequence\', (6, 0, None, ((4, 0, u\'any\', ()), (4, 0, u\'any\', ()))))\n    ELEMENT: (u\'mixed\', (3, 2, None, ((4, 0, u\'any\', ()),)))\n    ELEMENT: (u\'opt\', (6, 1, None, ((4, 0, u\'empty\', ()),)))\n    ELEMENT: (u\'many\', (6, 2, None, ((4, 0, u\'empty\', ()),)))\n    ELEMENT: (u\'plus\', (6, 3, None, ((4, 0, u\'empty\', ()),)))\n    1\n    '
