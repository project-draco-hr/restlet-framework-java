def test_entity():
    '\n\n    TODO: need a fallback for entity-resolver so that empty source is returned.\n\n    >>> xml = \'\'\' <!DOCTYPE doc SYSTEM "external.dtd" [\n    ...           <!ENTITY ext-entity SYSTEM "external-entity">\n    ...           ]>\n    ...           <doc>&ext-entity;&in-ext-dtd-entity;</doc>\'\'\'\n    >>> parser = expat.ParserCreate()\n    >>> parser.Parse(xml, True)\n    1\n\n    EXPAT OH MY ! When applicable (internal entities), the CharacterDataHandler\n    callback will override DefaultHandlerExpand, but it WON\'T override\n    DefaultHandler. On the other hand, the DefaultHandlerExpand callback WILL\n    override DefaultHandler ... More tests todo here ...\n\n    >>> xml = \'\'\'<!DOCTYPE doc SYSTEM "external.dtd" [\n    ...          <!ENTITY ext-entity SYSTEM "external-entity">\n    ...          <!ENTITY int-entity "internal">\n    ...          ]>\n    ...           <doc>&int-entity;&ext-entity;&in-ext-dtd-entity;</doc>\'\'\'\n    >>> parser = expat.ParserCreate()\n    >>> def handler(header):\n    ...     def _handler(*args):\n    ...         print header + ":", args\n    ...         return 1\n    ...     return _handler\n    >>> parser.CharacterDataHandler = handler("text")\n    >>> parser.DefaultHandler = handler("default")\n    >>> parser.Parse(xml, True) #doctest: +ELLIPSIS\n    default: ...\n    default: (u\'&int-entity;\',)\n    default: (u\'&ext-entity;\',)\n    default: (u\'&in-ext-dtd-entity;\',)\n    ...\n    1\n\n    EXPAT OH MY ! When applicable (internal entities), the CharacterDataHandler\n    callback will override DefaultHandlerExpand, but it WON\'T override\n    DefaultHandler. On the other hand, the DefaultHandlerExpand callback WILL\n    override DefaultHandler ... More tests todo here ...\n    '
