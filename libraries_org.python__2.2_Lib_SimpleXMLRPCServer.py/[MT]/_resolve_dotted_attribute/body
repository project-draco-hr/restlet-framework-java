def _resolve_dotted_attribute(obj, attr, allow_dotted_names=True):
    "Resolves a dotted attribute name to an object.  Raises\n    an AttributeError if any attribute in the chain starts with a '_'.\n\n    If the optional allow_dotted_names argument is false, dots are not\n    supported and this function operates similar to getattr(obj, attr).\n    "
    if allow_dotted_names:
        attrs = attr.split('.')
    else:
        attrs = [attr]
    for i in attrs:
        if i.startswith('_'):
            raise AttributeError(('attempt to access private attribute "%s"' % i))
        else:
            obj = getattr(obj, i)
    return obj
