def _test_fetching(self, dynamic=0):
    c = self.cursor(dynamic)
    try:
        c.execute('select * from zxtesting where 1<0')
        self.assertEquals(None, c.fetchone())
        c.execute('select * from zxtesting where 1<0')
        self.assertEquals([], c.fetchmany())
        c.execute('select * from zxtesting where 1<0')
        self.assertEquals([], c.fetchall())
        c.execute('select * from zxtesting')
        f = c.fetchmany()
        assert (len(f) == c.arraysize), ('expecting [%d] rows, got [%d]' % (c.arraysize, len(f)))
        c.execute('select * from zxtesting')
        c.arraysize = 4
        f = c.fetchmany()
        assert (len(f) == 4), ('expecting [4] rows, got [%d]' % len(f))
        c.execute('select * from zxtesting')
        c.arraysize = (-1)
        f = c.fetchmany()
        assert (len(f) == 7), ('expecting [7] rows, got [%d]' % len(f))
    finally:
        c.close()
