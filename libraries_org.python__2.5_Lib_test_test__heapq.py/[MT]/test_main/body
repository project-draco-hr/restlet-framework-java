def test_main(verbose=None):
    from types import BuiltinFunctionType
    test_classes = [TestHeap]
    if isinstance(heapify, BuiltinFunctionType):
        test_classes.append(TestErrorHandling)
    test_support.run_unittest(*test_classes)
    if (verbose and hasattr(sys, 'gettotalrefcount')):
        import gc
        counts = ([None] * 5)
        for i in xrange(len(counts)):
            test_support.run_unittest(*test_classes)
            gc.collect()
            counts[i] = sys.gettotalrefcount()
        print counts
