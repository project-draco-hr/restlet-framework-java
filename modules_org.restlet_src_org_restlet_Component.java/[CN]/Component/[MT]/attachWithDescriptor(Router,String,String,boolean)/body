{
  Route route=null;
  String targetClassName=null;
  try {
    targetClassName="org.restlet.ext.wadl.WadlApplication";
    final Class<?> targetClass=Engine.classForName(targetClassName);
    final Response response=getContext().getClientDispatcher().get(targetDescriptor);
    if (response.getStatus().isSuccess() && response.isEntityAvailable()) {
      final Representation representation=response.getEntity();
      final Application target=(Application)targetClass.getConstructor(Context.class,Representation.class).newInstance(getContext(),representation);
      if (target != null) {
        if ((uriPattern != null) && !defaultRoute) {
          route=router.attach(uriPattern,target);
        }
 else {
          route=router.attachDefault(target);
        }
      }
    }
 else {
      getLogger().log(Level.WARNING,"The target descriptor has not been found or is not available, or no client supporting the URI's protocol has been defined on this component. " + targetDescriptor);
    }
  }
 catch (  final ClassNotFoundException e) {
    getLogger().log(Level.WARNING,"Couldn't find the target class. Please check that your classpath includes " + targetClassName,e);
  }
catch (  final InstantiationException e) {
    getLogger().log(Level.WARNING,"Couldn't instantiate the target class. Please check this class has an empty constructor " + targetClassName,e);
  }
catch (  final IllegalAccessException e) {
    getLogger().log(Level.WARNING,"Couldn't instantiate the target class. Please check that you have to proper access rights to " + targetClassName,e);
  }
catch (  final NoSuchMethodException e) {
    getLogger().log(Level.WARNING,"Couldn't invoke the constructor of the target class. Please check this class has a constructor with a single parameter of Context " + targetClassName,e);
  }
catch (  final InvocationTargetException e) {
    getLogger().log(Level.WARNING,"Couldn't instantiate the target class. An exception was thrown while creating " + targetClassName,e);
  }
  return route;
}
