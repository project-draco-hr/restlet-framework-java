{
  Route route=null;
  if (targetClassName != null) {
    try {
      final Class<?> targetClass=Engine.classForName(targetClassName);
      if (Resource.class.isAssignableFrom(targetClass)) {
        final Class<? extends Resource> resourceClass=(Class<? extends Resource>)targetClass;
        if ((uriPattern != null) && !defaultRoute) {
          route=router.attach(uriPattern,resourceClass);
        }
 else {
          route=router.attachDefault(resourceClass);
        }
      }
 else {
        Restlet target=null;
        try {
          target=(Restlet)targetClass.getConstructor(Context.class).newInstance(getContext());
        }
 catch (        final NoSuchMethodException e) {
          getLogger().log(Level.FINE,"Couldn't invoke the constructor of the target class. Please check this class has a constructor with a single parameter of type Context. The empty constructor and the context setter will be used instead.",e);
          target=(Restlet)targetClass.getConstructor().newInstance();
        }
        if (target != null) {
          if ((uriPattern != null) && !defaultRoute) {
            route=router.attach(uriPattern,target);
          }
 else {
            route=router.attachDefault(target);
          }
        }
      }
    }
 catch (    final ClassNotFoundException e) {
      getLogger().log(Level.WARNING,"Couldn't find the target class. Please check that your classpath includes " + targetClassName,e);
    }
catch (    final InstantiationException e) {
      getLogger().log(Level.WARNING,"Couldn't instantiate the target class. Please check this class has an empty constructor " + targetClassName,e);
    }
catch (    final IllegalAccessException e) {
      getLogger().log(Level.WARNING,"Couldn't instantiate the target class. Please check that you have to proper access rights to " + targetClassName,e);
    }
catch (    final NoSuchMethodException e) {
      getLogger().log(Level.WARNING,"Couldn't invoke the constructor of the target class. Please check this class has a constructor with a single parameter of Context " + targetClassName,e);
    }
catch (    final InvocationTargetException e) {
      getLogger().log(Level.WARNING,"Couldn't instantiate the target class. An exception was thrown while creating " + targetClassName,e);
    }
  }
  return route;
}
