import warnings
warnings.filterwarnings('ignore', 'the rgbimg module is deprecated', DeprecationWarning, '.*test_rgbimg$')
import rgbimg
import os, uu
from test.test_support import verbose, unlink, findfile
print 'RGBimg test suite:'
table = [((('testrgb' + os.extsep) + 'uue'), (('test' + os.extsep) + 'rgb')), ((('testimg' + os.extsep) + 'uue'), (('test' + os.extsep) + 'rawimg')), ((('testimgr' + os.extsep) + 'uue'), (((('test' + os.extsep) + 'rawimg') + os.extsep) + 'rev'))]
for (source, target) in table:
    source = findfile(source)
    target = findfile(target)
    if verbose:
        print 'uudecoding', source, '->', target, '...'
    uu.decode(source, target)
if verbose:
    print 'testing...'
ttob = rgbimg.ttob(0)
if (ttob != 0):
    raise error, 'ttob should start out as zero'
testimg((('test' + os.extsep) + 'rgb'), (('test' + os.extsep) + 'rawimg'))
ttob = rgbimg.ttob(1)
if (ttob != 0):
    raise error, 'ttob should be zero'
testimg((('test' + os.extsep) + 'rgb'), (((('test' + os.extsep) + 'rawimg') + os.extsep) + 'rev'))
ttob = rgbimg.ttob(0)
if (ttob != 1):
    raise error, 'ttob should be one'
ttob = rgbimg.ttob(0)
if (ttob != 0):
    raise error, 'ttob should be zero'
for (source, target) in table:
    unlink(findfile(target))
