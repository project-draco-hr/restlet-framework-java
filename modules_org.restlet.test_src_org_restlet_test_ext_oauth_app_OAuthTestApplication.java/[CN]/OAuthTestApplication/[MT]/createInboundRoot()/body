{
  Context ctx=getContext();
  ConcurrentMap<String,Object> attribs=ctx.getAttributes();
  attribs.put(OAuthServerResource.TOKEN_SERVER_TIME_SEC,timeout);
  attribs.put(OAuthServerResource.TOKEN_SERVER_MAX_TIME_SEC,timeout);
  Object[] params={new ScheduledThreadPoolExecutor(5)};
  ClientStoreFactory.setClientStoreImpl(MemClientStore.class,params);
  ClientStore<?> clientStore=ClientStoreFactory.getInstance();
  Client client=clientStore.createClient("1234567890","1234567890",protocol + "://localhost:" + port+ "/");
  AuthenticatedUser user=client.createUser(TEST_USER);
  user.setPassword(TEST_PASS);
  Router router=new Router(ctx);
  ChallengeAuthenticator au=new ChallengeAuthenticator(getContext(),ChallengeScheme.HTTP_BASIC,"OAuth Test Server");
  au.setVerifier(new SingleVerifier());
  au.setNext(AuthorizationServerResource.class);
  router.attach("/authorize",au);
  router.attach("/access_token",AccessTokenServerResource.class);
  router.attach("/validate",ValidationServerResource.class);
  router.attach("/auth_page",AuthPageServerResource.class);
  return router;
}
