{
  super(MediaType.APPLICATION_XML);
  Document dom=getDocument();
  Element email=dom.createElement("email");
  dom.appendChild(email);
  Element head=dom.createElement("head");
  email.appendChild(head);
  if (message.getSubject() != null) {
    Element subject=dom.createElement("subject");
    subject.setTextContent(message.getSubject());
    head.appendChild(subject);
  }
  Address[] froms=message.getFrom();
  if (froms != null) {
    for (    Address fromAddress : froms) {
      Element from=dom.createElement("from");
      from.setTextContent(fromAddress.toString());
      head.appendChild(from);
    }
  }
  Address[] tos=message.getRecipients(Message.RecipientType.TO);
  if (tos != null) {
    for (    Address toAddress : tos) {
      Element to=dom.createElement("to");
      to.setTextContent(toAddress.toString());
      head.appendChild(to);
    }
  }
  Address[] ccs=message.getRecipients(Message.RecipientType.CC);
  if (ccs != null) {
    for (    Address ccAddress : ccs) {
      Element cc=dom.createElement("cc");
      cc.setTextContent(ccAddress.toString());
      head.appendChild(cc);
    }
  }
  Address[] bccs=message.getRecipients(Message.RecipientType.BCC);
  if (bccs != null) {
    for (    Address bccAddress : bccs) {
      Element bcc=dom.createElement("bcc");
      bcc.setTextContent(bccAddress.toString());
      head.appendChild(bcc);
    }
  }
  if (message.getReceivedDate() != null) {
    Element received=dom.createElement("received");
    received.setTextContent(DateUtils.format(message.getReceivedDate(),DateUtils.FORMAT_RFC_1123.get(0)));
    head.appendChild(received);
  }
  if (message.getSentDate() != null) {
    Element sent=dom.createElement("sent");
    sent.setTextContent(DateUtils.format(message.getSentDate(),DateUtils.FORMAT_RFC_1123.get(0)));
    head.appendChild(sent);
  }
  email.appendChild(head);
  Representation content=null;
  if (message.getContent() instanceof Multipart) {
    Multipart multipart=(Multipart)message.getContent();
    for (int i=0, n=multipart.getCount(); i < n; i++) {
      Part part=multipart.getBodyPart(i);
      String disposition=part.getDisposition();
      if (disposition != null) {
        if (disposition.equals(Part.ATTACHMENT) || disposition.equals(Part.INLINE)) {
        }
      }
 else {
        MimeBodyPart mimeBodyPart=(MimeBodyPart)part;
        String[] tab=mimeBodyPart.getContentType().split(";");
        String mediaType=tab[0];
        MediaType contentType=MediaType.valueOf(mediaType);
        if (MediaType.TEXT_PLAIN.equals(contentType,true)) {
          content=new InputRepresentation(mimeBodyPart.getInputStream(),MediaType.TEXT_PLAIN);
          break;
        }
 else {
        }
      }
    }
  }
 else {
    if (message.getContentType() != null) {
      String[] tab=message.getContentType().split(";");
      String mediaType=tab[0];
      MediaType contentType=MediaType.valueOf(mediaType);
      if (MediaType.TEXT_PLAIN.equals(contentType,true)) {
        content=new InputRepresentation(message.getInputStream(),MediaType.TEXT_PLAIN);
      }
    }
  }
  if (content != null) {
    Element body=dom.createElement("body");
    CDATASection bodyContent=dom.createCDATASection(content.getText());
    body.appendChild(bodyContent);
    email.appendChild(body);
  }
}
