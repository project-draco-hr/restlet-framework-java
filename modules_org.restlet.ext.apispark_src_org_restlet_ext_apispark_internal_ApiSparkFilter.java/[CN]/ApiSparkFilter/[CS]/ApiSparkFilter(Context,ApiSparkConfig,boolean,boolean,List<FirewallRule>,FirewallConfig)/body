{
  super(context);
  boolean authenticationEnabled=false;
  RestletChain restletChain=new RestletChain();
  validateRedirection(apiSparkConfig);
  if (agentEnabled) {
    validateAgentConfiguration(apiSparkConfig);
    ModulesSettings modulesSettings=getAgentSettings(apiSparkConfig);
    if (modulesSettings.isAuthenticationModuleEnabled()) {
      LOGGER.info("Add authentication module");
      authenticationEnabled=true;
      restletChain.add(new AuthenticationModule(apiSparkConfig,modulesSettings,context));
    }
    if (modulesSettings.isAuthorizationModuleEnabled()) {
      if (!modulesSettings.isAuthenticationModuleEnabled()) {
        throw new AgentConfigurationException("The authorization module requires the authentication module which is not enabled");
      }
      LOGGER.info("Add authorization module");
      restletChain.add(new AuthorizationModule(apiSparkConfig,modulesSettings,context));
    }
    if (modulesSettings.isFirewallModuleEnabled()) {
      LOGGER.info("Add firewall module");
      firewallEnabled=true;
      FirewallModule firewallModule=new FirewallModule(apiSparkConfig,modulesSettings);
      firewallModule.updateFirewallConfig(firewallConfig);
    }
  }
  if (firewallEnabled) {
    LOGGER.info("Add firewall module");
    restletChain.add(new FirewallFilter(context,firewallRules));
  }
  if (apiSparkConfig.isReverserProxyEnabled()) {
    LOGGER.info("Add redirection module");
    String redirectorUrl=apiSparkConfig.getReverseProxyTargetUrl() + "{rr}";
    Redirector redirector=new ReverseProxyModule(context,redirectorUrl,authenticationEnabled);
    restletChain.add(redirector);
  }
  if (restletChain.getFirst() == null) {
    LOGGER.warning("No modules are enabled.");
  }
  agentFirstRestlet=restletChain.getFirst();
  agentLastRestlet=restletChain.getLast();
}
