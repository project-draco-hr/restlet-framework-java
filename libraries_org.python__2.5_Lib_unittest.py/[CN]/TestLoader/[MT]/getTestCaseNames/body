def getTestCaseNames(self, testCaseClass):
    'Return a sorted sequence of method names found within testCaseClass\n        '

    def isTestMethod(attrname, testCaseClass=testCaseClass, prefix=self.testMethodPrefix):
        return (attrname.startswith(prefix) and callable(getattr(testCaseClass, attrname)))
    testFnNames = filter(isTestMethod, dir(testCaseClass))
    for baseclass in testCaseClass.__bases__:
        for testFnName in self.getTestCaseNames(baseclass):
            if (testFnName not in testFnNames):
                testFnNames.append(testFnName)
    if self.sortTestMethodsUsing:
        testFnNames.sort(self.sortTestMethodsUsing)
    return testFnNames
