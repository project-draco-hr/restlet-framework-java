'A readline()-style interface to the parts of a multipart message.\n\nThe MultiFile class makes each part of a multipart message "feel" like\nan ordinary file, as long as you use fp.readline().  Allows recursive\nuse, for nested multipart messages.  Probably best used together\nwith module mimetools.\n\nSuggested use:\n\nreal_fp = open(...)\nfp = MultiFile(real_fp)\n\n"read some lines from fp"\nfp.push(separator)\nwhile 1:\n        "read lines from fp until it returns an empty string" (A)\n        if not fp.next(): break\nfp.pop()\n"read remaining lines from fp until it returns an empty string"\n\nThe latter sequence may be used recursively at (A).\nIt is also allowed to use multiple push()...pop() sequences.\n\nIf seekable is given as 0, the class code will not do the bookkeeping\nit normally attempts in order to make seeks relative to the beginning of the\ncurrent file part.  This may be useful when using MultiFile with a non-\nseekable stream object.\n'
__all__ = ['MultiFile', 'Error']
