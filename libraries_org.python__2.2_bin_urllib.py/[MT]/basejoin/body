def basejoin(base, url):
    'Utility to combine a URL with a base URL to form a new URL.'
    (type, path) = splittype(url)
    if type:
        return url
    (host, path) = splithost(path)
    (type, basepath) = splittype(base)
    if host:
        if type:
            return (((type + '://') + host) + path)
        else:
            return url
    (host, basepath) = splithost(basepath)
    (basepath, basetag) = splittag(basepath)
    (basepath, basequery) = splitquery(basepath)
    if (path[:1] != '/'):
        if (path[:1] in ('#', '?')):
            i = len(basepath)
        else:
            i = basepath.rfind('/')
        if (i < 0):
            if host:
                basepath = '/'
            else:
                basepath = ''
        else:
            basepath = basepath[:(i + 1)]
        while (basepath and (path[:3] == '../')):
            path = path[3:]
            i = basepath[:(-1)].rfind('/')
            if (i > 0):
                basepath = basepath[:(i + 1)]
            elif (i == 0):
                basepath = '/'
                break
            else:
                basepath = ''
        path = (basepath + path)
    if (host and path and (path[0] != '/')):
        path = ('/' + path)
    if (type and host):
        return (((type + '://') + host) + path)
    elif type:
        return ((type + ':') + path)
    elif host:
        return (('//' + host) + path)
    else:
        return path
