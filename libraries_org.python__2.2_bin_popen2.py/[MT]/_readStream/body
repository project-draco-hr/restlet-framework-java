def _readStream(instream, outfunc, bufsize, postFunc=None):
    'Read instream, calling outfunc( buf, 0, count ) with each block.\n    Copy streams by passing destStream.write as the outfunc.\n    postFunc is called when the end of instream is reached.\n    '
    bufsize = (((bufsize < 1) and 4096) or bufsize)
    buf = jarray.zeros(bufsize, 'b')
    total = 0
    while 1:
        count = instream.read(buf)
        if ((-1) == count):
            instream.close()
            if postFunc:
                postFunc()
            break
        else:
            total += count
            outfunc(buf, 0, count)
    return total
