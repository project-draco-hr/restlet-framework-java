{
  try {
    if ((response.getRequest().getMethod() != null) && response.getRequest().getMethod().equals(Method.HEAD)) {
      addEntityHeaders(response);
      response.setEntity(null);
    }
 else     if ((response.getRequest().getMethod() != null) && response.getRequest().getMethod().equals(Method.GET) && response.getStatus().equals(Status.SUCCESS_OK)&& (response.getEntity() == null)) {
      addEntityHeaders(response);
      getLogger().warning("A response with a 200 (Ok) status should have an entity. Make sure that resource \"" + response.getRequest().getResourceRef() + "\" returns one or sets the status to 204 (No content).");
    }
 else     if (response.getStatus().equals(Status.SUCCESS_NO_CONTENT)) {
      addEntityHeaders(response);
      if (response.getEntity() != null) {
        getLogger().fine("Responses with a 204 (No content) status generally don't have an entity. Only adding entity headers for resource \"" + response.getRequest().getResourceRef() + "\".");
        response.setEntity(null);
      }
    }
 else     if (response.getStatus().equals(Status.SUCCESS_RESET_CONTENT)) {
      if (response.getEntity() != null) {
        getLogger().warning("Responses with a 205 (Reset content) status can't have an entity. Ignoring the entity for resource \"" + response.getRequest().getResourceRef() + "\".");
        response.setEntity(null);
      }
    }
 else     if (response.getStatus().equals(Status.REDIRECTION_NOT_MODIFIED)) {
      addEntityHeaders(response);
      if (response.getEntity() != null) {
        getLogger().warning("Responses with a 304 (Not modified) status can't have an entity. Only adding entity headers for resource \"" + response.getRequest().getResourceRef() + "\".");
        response.setEntity(null);
      }
    }
 else     if (response.getStatus().isInformational()) {
      if (response.getEntity() != null) {
        getLogger().warning("Responses with an informational (1xx) status can't have an entity. Ignoring the entity for resource \"" + response.getRequest().getResourceRef() + "\".");
        response.setEntity(null);
      }
    }
 else {
      addEntityHeaders(response);
      if ((response.getEntity() != null) && !response.getEntity().isAvailable()) {
        getLogger().warning("A response with an unavailable entity was returned. Ignoring the entity for resource \"" + response.getRequest().getResourceRef() + "\".");
        response.setEntity(null);
      }
    }
    addResponseHeaders(response);
    response.getHttpCall().sendResponse(response);
  }
 catch (  Exception e) {
    if (response.getHttpCall().isConnectionBroken(e)) {
      getLogger().log(Level.INFO,"The connection was broken. It was probably closed by the client.",e);
    }
 else {
      getLogger().log(Level.SEVERE,"An exception occured writing the response entity",e);
      response.getHttpCall().setStatusCode(Status.SERVER_ERROR_INTERNAL.getCode());
      response.getHttpCall().setReasonPhrase("An exception occured writing the response entity");
      response.setEntity(null);
      try {
        response.getHttpCall().sendResponse(response);
      }
 catch (      IOException ioe) {
        getLogger().log(Level.WARNING,"Unable to send error response",ioe);
      }
    }
  }
 finally {
    response.getHttpCall().complete();
  }
}
