def normalize(self):
    L = []
    for child in self.childNodes:
        if (child.nodeType == Node.TEXT_NODE):
            data = child.data
            if (data and L and (L[(-1)].nodeType == child.nodeType)):
                node = L[(-1)]
                node.data = (node.data + child.data)
                node.nextSibling = child.nextSibling
                child.unlink()
            elif data:
                if L:
                    L[(-1)].nextSibling = child
                    child.previousSibling = L[(-1)]
                else:
                    child.previousSibling = None
                L.append(child)
            else:
                child.unlink()
        else:
            if L:
                L[(-1)].nextSibling = child
                child.previousSibling = L[(-1)]
            else:
                child.previousSibling = None
            L.append(child)
            if (child.nodeType == Node.ELEMENT_NODE):
                child.normalize()
    if self.childNodes:
        self.childNodes[:] = L
    return
