{
  if (type instanceof Class<?>) {
    Class<?> c=(Class<?>)type;
    if (c.isArray()) {
      return c.getComponentType();
    }
 else     if (Collection.class.isAssignableFrom(c)) {
      return getComponentClass(c.getGenericSuperclass());
    }
 else {
      return c;
    }
  }
 else   if (type instanceof GenericArrayType) {
    GenericArrayType gat=(GenericArrayType)type;
    return getComponentClass(gat.getGenericComponentType());
  }
 else   if (type instanceof ParameterizedType) {
    ParameterizedType t=(ParameterizedType)type;
    if (t.getActualTypeArguments().length != 1) {
      throw new UnsupportedTypeException("Type " + type + " is a generic type with zero or several arguments. This is not supported.");
    }
    if (t.getActualTypeArguments()[0] instanceof TypeVariable) {
      throw new UnsupportedTypeException("Type " + type + " is a generic type with unkwnown type. This is not supported.");
    }
    return getComponentClass(t.getActualTypeArguments()[0]);
  }
  return (type != null) ? type.getClass() : null;
}
