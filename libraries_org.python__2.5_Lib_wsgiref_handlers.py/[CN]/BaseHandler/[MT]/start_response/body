def start_response(self, status, headers, exc_info=None):
    "'start_response()' callable as specified by PEP 333"
    if exc_info:
        try:
            if self.headers_sent:
                raise exc_info[0], exc_info[1], exc_info[2]
        finally:
            exc_info = None
    elif (self.headers is not None):
        raise AssertionError('Headers already set!')
    assert (type(status) is StringType), 'Status must be a string'
    assert (len(status) >= 4), 'Status must be at least 4 characters'
    assert int(status[:3]), 'Status message must begin w/3-digit code'
    assert (status[3] == ' '), 'Status message must have a space after code'
    if __debug__:
        for (name, val) in headers:
            assert (type(name) is StringType), 'Header names must be strings'
            assert (type(val) is StringType), 'Header values must be strings'
            assert (not is_hop_by_hop(name)), 'Hop-by-hop headers not allowed'
    self.status = status
    self.headers = self.headers_class(headers)
    return self.write
