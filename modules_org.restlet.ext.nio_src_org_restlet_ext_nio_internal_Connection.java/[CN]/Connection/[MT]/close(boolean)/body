{
  if (graceful) {
    if (getLogger().isLoggable(Level.FINER)) {
      getLogger().log(Level.FINER,"Closing connection to " + getSocketAddress() + " gracefully");
    }
    setState(ConnectionState.CLOSING);
  }
 else {
    if (getLogger().isLoggable(Level.FINER)) {
      getLogger().log(Level.FINER,"Closing connection to " + getSocketAddress() + " immediately");
    }
    try {
      Socket socket=getSocket();
      if ((socket != null) && !socket.isClosed()) {
        shutdown(socket);
      }
    }
 catch (    IOException ex) {
      getLogger().log(Level.FINEST,"Unable to properly shutdown socket",ex);
    }
    try {
      Socket socket=getSocket();
      if ((socket != null) && !socket.isClosed()) {
        socket.close();
      }
    }
 catch (    IOException ex) {
      getLogger().log(Level.FINEST,"Unable to properly close socket",ex);
    }
 finally {
      getInboundWay().onClosed();
      getOutboundWay().onClosed();
      setState(ConnectionState.CLOSED);
      if (getLogger().isLoggable(Level.FINE)) {
        getLogger().log(Level.FINE,"Connection to " + getSocketAddress() + " is now closed");
      }
    }
  }
}
