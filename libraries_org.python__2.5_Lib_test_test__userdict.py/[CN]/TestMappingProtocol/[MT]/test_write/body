def test_write(self):
    p = self._empty_mapping()
    for (key, value) in self.reference.items():
        p[key] = value
        self.assertEqual(p[key], value)
    for key in self.reference.keys():
        del p[key]
        self.failUnlessRaises(KeyError, (lambda : p[key]))
    p = self._empty_mapping()
    p.update(self.reference)
    self.assertEqual(dict(p), self.reference)
    d = self._full_mapping(self.reference)
    (key, value) = d.iteritems().next()
    (knownkey, knownvalue) = self.other.iteritems().next()
    self.assertEqual(d.setdefault(key, knownvalue), value)
    self.assertEqual(d[key], value)
    self.assertEqual(d.setdefault(knownkey, knownvalue), knownvalue)
    self.assertEqual(d[knownkey], knownvalue)
    self.assertEqual(d.pop(knownkey), knownvalue)
    self.failIf((knownkey in d))
    self.assertRaises(KeyError, d.pop, knownkey)
    default = 909
    d[knownkey] = knownvalue
    self.assertEqual(d.pop(knownkey, default), knownvalue)
    self.failIf((knownkey in d))
    self.assertEqual(d.pop(knownkey, default), default)
    (key, value) = d.popitem()
    self.failIf((key in d))
    self.assertEqual(value, self.reference[key])
    p = self._empty_mapping()
    self.assertRaises(KeyError, p.popitem)
