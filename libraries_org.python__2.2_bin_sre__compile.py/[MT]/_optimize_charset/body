def _optimize_charset(charset, fixup):
    out = []
    charmap = ([0] * 256)
    try:
        for (op, av) in charset:
            if (op is NEGATE):
                out.append((op, av))
            elif (op is LITERAL):
                charmap[fixup(av)] = 1
            elif (op is RANGE):
                for i in range(fixup(av[0]), (fixup(av[1]) + 1)):
                    charmap[i] = 1
            elif (op is CATEGORY):
                return charset
    except IndexError:
        if (sys.maxunicode != 65535):
            return charset
        return _optimize_unicode(charset, fixup)
    i = p = n = 0
    runs = []
    for c in charmap:
        if c:
            if (n == 0):
                p = i
            n = (n + 1)
        elif n:
            runs.append((p, n))
            n = 0
        i = (i + 1)
    if n:
        runs.append((p, n))
    if (len(runs) <= 2):
        for (p, n) in runs:
            if (n == 1):
                out.append((LITERAL, p))
            else:
                out.append((RANGE, (p, ((p + n) - 1))))
        if (len(out) < len(charset)):
            return out
    else:
        data = _mk_bitmap(charmap)
        out.append((CHARSET, data))
        return out
    return charset
