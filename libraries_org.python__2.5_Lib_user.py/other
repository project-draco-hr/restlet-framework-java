"Hook to allow user-specified customization code to run.\n\nAs a policy, Python doesn't run user-specified code on startup of\nPython programs (interactive sessions execute the script specified in\nthe PYTHONSTARTUP environment variable if it exists).\n\nHowever, some programs or sites may find it convenient to allow users\nto have a standard customization file, which gets run when a program\nrequests it.  This module implements such a mechanism.  A program\nthat wishes to use the mechanism must execute the statement\n\n    import user\n\nThe user module looks for a file .pythonrc.py in the user's home\ndirectory and if it can be opened, execfile()s it in its own global\nnamespace.  Errors during this phase are not caught; that's up to the\nprogram that imports the user module, if it wishes.\n\nThe user's .pythonrc.py could conceivably test for sys.version if it\nwishes to do different things depending on the Python version.\n\n"
import os
home = os.curdir
if ('HOME' in os.environ):
    home = os.environ['HOME']
elif (os.name == 'posix'):
    home = os.path.expanduser('~/')
elif (os.name == 'nt'):
    if ('HOMEPATH' in os.environ):
        if ('HOMEDRIVE' in os.environ):
            home = (os.environ['HOMEDRIVE'] + os.environ['HOMEPATH'])
        else:
            home = os.environ['HOMEPATH']
pythonrc = os.path.join(home, '.pythonrc.py')
try:
    f = open(pythonrc)
except IOError:
    pass
else:
    f.close()
    execfile(pythonrc)
