{
  if (args.length < 2) {
    usage();
  }
  final String header=" * <p> By default the check will check the following " + args[1] + ":\n";
  final String footer=".\n * </p>\n";
  final String prefix=" *  {@link TokenTypes#";
  try {
    final Class clazz=Class.forName(args[0]);
    final Check check=(Check)clazz.newInstance();
    final int[] defaultTokens=check.getDefaultTokens();
    if (defaultTokens.length > 0) {
      final StringBuffer buf=new StringBuffer();
      buf.append(header);
      final ArrayList tokenNames=new ArrayList();
      for (int i=0; i < defaultTokens.length; i++) {
        tokenNames.add(TokenTypes.getTokenName(defaultTokens[i]));
      }
      Collections.sort(tokenNames);
      final Iterator it=tokenNames.iterator();
      String token=(String)it.next();
      buf.append(prefix + token + " "+ token+ "}");
      while (it.hasNext()) {
        token=(String)it.next();
        buf.append(",\n" + prefix + token+ " "+ token+ "}");
      }
      buf.append(footer);
      System.out.println(buf);
    }
  }
 catch (  Exception ex) {
    ex.printStackTrace();
    System.exit(0);
  }
}
