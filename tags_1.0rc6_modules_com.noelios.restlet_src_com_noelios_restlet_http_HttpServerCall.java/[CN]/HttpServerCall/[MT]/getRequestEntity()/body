{
  Representation result=null;
  InputStream requestStream=getRequestStream();
  ReadableByteChannel requestChannel=getRequestChannel();
  if (((requestStream != null) || (requestChannel != null))) {
    MediaType contentMediaType=null;
    long contentLength=Representation.UNKNOWN_SIZE;
    if (requestStream != null) {
      result=new InputRepresentation(requestStream,contentMediaType,contentLength);
    }
 else {
      result=new ReadableRepresentation(requestChannel,contentMediaType,contentLength);
    }
    for (    Parameter header : getRequestHeaders()) {
      if (header.getName().equalsIgnoreCase(HttpConstants.HEADER_CONTENT_ENCODING)) {
        HeaderReader hr=new HeaderReader(header.getValue());
        String value=hr.readValue();
        while (value != null) {
          Encoding encoding=Encoding.valueOf(value);
          if (!encoding.equals(Encoding.IDENTITY)) {
            result.getEncodings().add(encoding);
          }
          value=hr.readValue();
        }
      }
 else       if (header.getName().equalsIgnoreCase(HttpConstants.HEADER_CONTENT_LANGUAGE)) {
        HeaderReader hr=new HeaderReader(header.getValue());
        String value=hr.readValue();
        while (value != null) {
          result.getLanguages().add(Language.valueOf(value));
          value=hr.readValue();
        }
      }
 else       if (header.getName().equalsIgnoreCase(HttpConstants.HEADER_CONTENT_TYPE)) {
        ContentType contentType=new ContentType(header.getValue());
        result.setMediaType(contentType.getMediaType());
        result.setCharacterSet(contentType.getCharacterSet());
      }
 else       if (header.getName().equalsIgnoreCase(HttpConstants.HEADER_CONTENT_LENGTH)) {
        try {
          contentLength=Long.parseLong(header.getValue());
        }
 catch (        NumberFormatException e) {
          contentLength=Representation.UNKNOWN_SIZE;
        }
        result.setSize(contentLength);
      }
    }
  }
  return result;
}
