def select(self, mailbox='INBOX', readonly=None):
    "Select a mailbox.\n\n        Flush all untagged responses.\n\n        (typ, [data]) = <instance>.select(mailbox='INBOX', readonly=None)\n\n        'data' is count of messages in mailbox ('EXISTS' response).\n        "
    self.untagged_responses = {}
    self.is_readonly = readonly
    if readonly:
        name = 'EXAMINE'
    else:
        name = 'SELECT'
    (typ, dat) = self._simple_command(name, mailbox)
    if (typ != 'OK'):
        self.state = 'AUTH'
        return (typ, dat)
    self.state = 'SELECTED'
    if (self.untagged_responses.has_key('READ-ONLY') and (not readonly)):
        if __debug__:
            if (self.debug >= 1):
                _dump_ur(self.untagged_responses)
        raise self.readonly(('%s is not writable' % mailbox))
    return (typ, self.untagged_responses.get('EXISTS', [None]))
