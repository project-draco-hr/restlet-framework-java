{
  Definition definition=new Definition();
  definition.setVersion("version");
  org.restlet.ext.apispark.internal.model.Contact contact=new org.restlet.ext.apispark.internal.model.Contact();
  contact.setName("contact");
  definition.setContact(contact);
  License license=new License();
  license.setName("license");
  definition.setLicense(license);
  Endpoint endpoint=new Endpoint();
  definition.getEndpoints().add(endpoint);
  endpoint.setProtocol("protocol");
  endpoint.setDomain("domain");
  endpoint.setPort(999);
  endpoint.setBasePath("/basePath");
  Contract contract=new Contract();
  definition.setContract(contract);
  contract.setName("contract.name");
  contract.setDescription("contract.description");
  Resource resource1=new Resource();
  contract.getResources().add(resource1);
  resource1.setResourcePath("resourcePath1");
  Operation operation1=new Operation();
  resource1.getOperations().add(operation1);
  operation1.setMethod("get");
  operation1.setName("nameoperation1");
  operation1.setDescription("description");
  List<String> op1Produces=new ArrayList<>();
  operation1.setProduces(op1Produces);
  op1Produces.add("produce 1");
  op1Produces.add("produce 2");
  List<String> op1Consumes=new ArrayList<>();
  operation1.setConsumes(op1Consumes);
  op1Consumes.add("consume 1");
  op1Consumes.add("consume 2");
  PathVariable pathVariable1=new PathVariable();
  resource1.getPathVariables().add(pathVariable1);
  pathVariable1.setName("namePathVariable1");
  pathVariable1.setType("string");
  pathVariable1.setDescription("description");
  PathVariable pathVariable2=new PathVariable();
  resource1.getPathVariables().add(pathVariable2);
  pathVariable2.setName("namePathVariable2");
  pathVariable2.setType("string");
  pathVariable2.setDescription("description");
  PayLoad inRepr=new PayLoad();
  operation1.setInputPayLoad(inRepr);
  inRepr.setType("integer");
  QueryParameter queryParameter1=new QueryParameter();
  operation1.getQueryParameters().add(queryParameter1);
  queryParameter1.setName("nameQueryParameter1");
  queryParameter1.setType("integer");
  queryParameter1.setDescription("description");
  QueryParameter queryParameter2=new QueryParameter();
  operation1.getQueryParameters().add(queryParameter2);
  queryParameter2.setName("nameQueryParameter2");
  queryParameter2.setType("string");
  queryParameter2.setDescription("description");
  Response response1=new Response();
  operation1.getResponses().add(response1);
  response1.setCode(200);
  response1.setDescription("description");
  PayLoad response1Entity=new PayLoad();
  response1.setOutputPayLoad(response1Entity);
  response1Entity.setArray(true);
  response1Entity.setType("integer");
  Response response2=new Response();
  operation1.getResponses().add(response2);
  response2.setCode(300);
  response2.setDescription("description");
  PayLoad response2Entity=new PayLoad();
  response2.setOutputPayLoad(response2Entity);
  response2Entity.setArray(false);
  response2Entity.setType("Entity2");
  Response response3=new Response();
  operation1.getResponses().add(response3);
  response3.setCode(400);
  response3.setDescription("description");
  PayLoad response3Entity=new PayLoad();
  response3.setOutputPayLoad(response3Entity);
  response3Entity.setArray(false);
  response3Entity.setType("integer");
  Resource resource2=new Resource();
  contract.getResources().add(resource2);
  resource2.setResourcePath("resourcePath2");
  Representation representation1=new Representation();
  definition.getContract().getRepresentations().add(representation1);
  representation1.setName("nameRepresentation1");
  Property representation1Property1=new Property();
  representation1.getProperties().add(representation1Property1);
  representation1Property1.setName("nameRepresentation1Property1");
  representation1Property1.setType("integer");
  representation1Property1.setMin("1.0");
  representation1Property1.setMax("2.0");
  representation1Property1.setDescription("description");
  Property representation1Property2=new Property();
  representation1.getProperties().add(representation1Property2);
  representation1Property2.setName("nameRepresentation1Property2");
  representation1Property2.setMaxOccurs(-1);
  representation1Property2.setType("string");
  representation1Property2.setDescription("description");
  Property representation1Property3=new Property();
  representation1.getProperties().add(representation1Property3);
  representation1Property3.setName("nameRepresentation1Property3");
  representation1Property3.setType("Entity");
  representation1Property3.setDescription("description");
  Representation representation2=new Representation();
  definition.getContract().getRepresentations().add(representation2);
  representation2.setName("nameRepresentation2");
  return definition;
}
