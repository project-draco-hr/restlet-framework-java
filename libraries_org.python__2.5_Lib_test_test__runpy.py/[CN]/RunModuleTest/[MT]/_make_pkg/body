def _make_pkg(self, source, depth):
    pkg_name = '__runpy_pkg__'
    init_fname = (('__init__' + os.extsep) + 'py')
    test_fname = (('runpy_test' + os.extsep) + 'py')
    pkg_dir = sub_dir = tempfile.mkdtemp()
    if verbose:
        print '  Package tree in:', sub_dir
    sys.path.insert(0, pkg_dir)
    if verbose:
        print '  Updated sys.path:', sys.path[0]
    for i in range(depth):
        sub_dir = os.path.join(sub_dir, pkg_name)
        os.mkdir(sub_dir)
        if verbose:
            print '  Next level in:', sub_dir
        pkg_fname = os.path.join(sub_dir, init_fname)
        pkg_file = open(pkg_fname, 'w')
        pkg_file.close()
        if verbose:
            print '  Created:', pkg_fname
    mod_fname = os.path.join(sub_dir, test_fname)
    mod_file = open(mod_fname, 'w')
    mod_file.write(source)
    mod_file.close()
    if verbose:
        print '  Created:', mod_fname
    mod_name = (((pkg_name + '.') * depth) + 'runpy_test')
    return (pkg_dir, mod_fname, mod_name)
