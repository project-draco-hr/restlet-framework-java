def test_split(self):
    self.checkequal(['this', 'is', 'the', 'split', 'function'], 'this is the split function', 'split')
    self.checkequal(['a', 'b', 'c', 'd'], 'a b c d ', 'split')
    self.checkequal(['a', 'b c d'], 'a b c d', 'split', None, 1)
    self.checkequal(['a', 'b', 'c d'], 'a b c d', 'split', None, 2)
    self.checkequal(['a', 'b', 'c', 'd'], 'a b c d', 'split', None, 3)
    self.checkequal(['a', 'b', 'c', 'd'], 'a b c d', 'split', None, 4)
    self.checkequal(['a', 'b', 'c', 'd'], 'a b c d', 'split', None, (sys.maxint - 1))
    self.checkequal(['a b c d'], 'a b c d', 'split', None, 0)
    self.checkequal(['a b c d'], '  a b c d', 'split', None, 0)
    self.checkequal(['a', 'b', 'c  d'], 'a  b  c  d', 'split', None, 2)
    self.checkequal([], '         ', 'split')
    self.checkequal(['a'], '  a    ', 'split')
    self.checkequal(['a', 'b'], '  a    b   ', 'split')
    self.checkequal(['a', 'b   '], '  a    b   ', 'split', None, 1)
    self.checkequal(['a', 'b   c   '], '  a    b   c   ', 'split', None, 1)
    self.checkequal(['a', 'b', 'c   '], '  a    b   c   ', 'split', None, 2)
    self.checkequal(['a', 'b'], '\n\ta \t\r b \x0b ', 'split')
    aaa = (' a ' * 20)
    self.checkequal((['a'] * 20), aaa, 'split')
    self.checkequal((['a'] + [aaa[4:]]), aaa, 'split', None, 1)
    self.checkequal(((['a'] * 19) + ['a ']), aaa, 'split', None, 19)
    self.checkequal(['a', 'b', 'c', 'd'], 'a|b|c|d', 'split', '|')
    self.checkequal(['a|b|c|d'], 'a|b|c|d', 'split', '|', 0)
    self.checkequal(['a', 'b|c|d'], 'a|b|c|d', 'split', '|', 1)
    self.checkequal(['a', 'b', 'c|d'], 'a|b|c|d', 'split', '|', 2)
    self.checkequal(['a', 'b', 'c', 'd'], 'a|b|c|d', 'split', '|', 3)
    self.checkequal(['a', 'b', 'c', 'd'], 'a|b|c|d', 'split', '|', 4)
    self.checkequal(['a', 'b', 'c', 'd'], 'a|b|c|d', 'split', '|', (sys.maxint - 2))
    self.checkequal(['a|b|c|d'], 'a|b|c|d', 'split', '|', 0)
    self.checkequal(['a', '', 'b||c||d'], 'a||b||c||d', 'split', '|', 2)
    self.checkequal(['endcase ', ''], 'endcase |', 'split', '|')
    self.checkequal(['', ' startcase'], '| startcase', 'split', '|')
    self.checkequal(['', 'bothcase', ''], '|bothcase|', 'split', '|')
    self.checkequal(['a', '', 'b\x00c\x00d'], 'a\x00\x00b\x00c\x00d', 'split', '\x00', 2)
    self.checkequal((['a'] * 20), ('a|' * 20)[:(-1)], 'split', '|')
    self.checkequal(((['a'] * 15) + ['a|a|a|a|a']), ('a|' * 20)[:(-1)], 'split', '|', 15)
    self.checkequal(['a', 'b', 'c', 'd'], 'a//b//c//d', 'split', '//')
    self.checkequal(['a', 'b//c//d'], 'a//b//c//d', 'split', '//', 1)
    self.checkequal(['a', 'b', 'c//d'], 'a//b//c//d', 'split', '//', 2)
    self.checkequal(['a', 'b', 'c', 'd'], 'a//b//c//d', 'split', '//', 3)
    self.checkequal(['a', 'b', 'c', 'd'], 'a//b//c//d', 'split', '//', 4)
    self.checkequal(['a', 'b', 'c', 'd'], 'a//b//c//d', 'split', '//', (sys.maxint - 10))
    self.checkequal(['a//b//c//d'], 'a//b//c//d', 'split', '//', 0)
    self.checkequal(['a', '', 'b////c////d'], 'a////b////c////d', 'split', '//', 2)
    self.checkequal(['endcase ', ''], 'endcase test', 'split', 'test')
    self.checkequal(['', ' begincase'], 'test begincase', 'split', 'test')
    self.checkequal(['', ' bothcase ', ''], 'test bothcase test', 'split', 'test')
    self.checkequal(['a', 'bc'], 'abbbc', 'split', 'bb')
    self.checkequal(['', ''], 'aaa', 'split', 'aaa')
    self.checkequal(['aaa'], 'aaa', 'split', 'aaa', 0)
    self.checkequal(['ab', 'ab'], 'abbaab', 'split', 'ba')
    self.checkequal(['aaaa'], 'aaaa', 'split', 'aab')
    self.checkequal([''], '', 'split', 'aaa')
    self.checkequal(['aa'], 'aa', 'split', 'aaa')
    self.checkequal(['A', 'bobb'], 'Abbobbbobb', 'split', 'bbobb')
    self.checkequal(['A', 'B', ''], 'AbbobbBbbobb', 'split', 'bbobb')
    self.checkequal((['a'] * 20), ('aBLAH' * 20)[:(-4)], 'split', 'BLAH')
    self.checkequal((['a'] * 20), ('aBLAH' * 20)[:(-4)], 'split', 'BLAH', 19)
    self.checkequal(((['a'] * 18) + ['aBLAHa']), ('aBLAH' * 20)[:(-4)], 'split', 'BLAH', 18)
    self.checkequal([u'a', u'b', u'c d'], 'a b c d', 'split', u' ', 2)
    self.checkraises(TypeError, 'hello', 'split', 42, 42, 42)
    self.checkraises(ValueError, 'hello', 'split', '')
    self.checkraises(ValueError, 'hello', 'split', '', 0)
