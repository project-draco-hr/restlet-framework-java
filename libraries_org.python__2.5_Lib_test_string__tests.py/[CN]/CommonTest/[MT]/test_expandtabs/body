def test_expandtabs(self):
    self.checkequal('abc\rab      def\ng       hi', 'abc\rab\tdef\ng\thi', 'expandtabs')
    self.checkequal('abc\rab      def\ng       hi', 'abc\rab\tdef\ng\thi', 'expandtabs', 8)
    self.checkequal('abc\rab  def\ng   hi', 'abc\rab\tdef\ng\thi', 'expandtabs', 4)
    self.checkequal('abc\r\nab  def\ng   hi', 'abc\r\nab\tdef\ng\thi', 'expandtabs', 4)
    self.checkequal('abc\rab      def\ng       hi', 'abc\rab\tdef\ng\thi', 'expandtabs')
    self.checkequal('abc\rab      def\ng       hi', 'abc\rab\tdef\ng\thi', 'expandtabs', 8)
    self.checkequal('abc\r\nab\r\ndef\ng\r\nhi', 'abc\r\nab\r\ndef\ng\r\nhi', 'expandtabs', 4)
    self.checkequal('  a\n b', ' \ta\n\tb', 'expandtabs', 1)
    self.checkraises(TypeError, 'hello', 'expandtabs', 42, 42)
    if ((sys.maxint < (1 << 32)) and (not test_support.is_jython) and (struct.calcsize('P') == 4)):
        self.checkraises(OverflowError, '\ta\n\tb', 'expandtabs', sys.maxint)
