def ReadTestData(root_key):
    val = QueryValue(root_key, test_key_name)
    verify((val == 'Default value'), "Registry didn't give back the correct value")
    key = OpenKey(root_key, test_key_name)
    sub_key = OpenKey(key, 'sub_key')
    index = 0
    while 1:
        try:
            data = EnumValue(sub_key, index)
        except EnvironmentError:
            break
        verify((data in test_data), "Didn't read back the correct test data")
        index = (index + 1)
    verify((index == len(test_data)), "Didn't read the correct number of items")
    for (value_name, value_data, value_type) in test_data:
        (read_val, read_typ) = QueryValueEx(sub_key, value_name)
        verify(((read_val == value_data) and (read_typ == value_type)), 'Could not directly read the value')
    sub_key.Close()
    read_val = EnumKey(key, 0)
    verify((read_val == 'sub_key'), 'Read subkey value wrong')
    try:
        EnumKey(key, 1)
        verify(0, 'Was able to get a second key when I only have one!')
    except EnvironmentError:
        pass
    key.Close()
