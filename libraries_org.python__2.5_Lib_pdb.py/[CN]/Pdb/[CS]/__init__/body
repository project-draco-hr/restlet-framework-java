def __init__(self, completekey='tab', stdin=None, stdout=None):
    bdb.Bdb.__init__(self)
    cmd.Cmd.__init__(self, completekey, stdin, stdout)
    if stdout:
        self.use_rawinput = 0
    self.prompt = '(Pdb) '
    self.aliases = {}
    self.mainpyfile = ''
    self._wait_for_mainpyfile = 0
    try:
        import readline
    except ImportError:
        pass
    self.rcLines = []
    if ('HOME' in os.environ):
        envHome = os.environ['HOME']
        try:
            rcFile = open(os.path.join(envHome, '.pdbrc'))
        except IOError:
            pass
        else:
            for line in rcFile.readlines():
                self.rcLines.append(line)
            rcFile.close()
    try:
        rcFile = open('.pdbrc')
    except IOError:
        pass
    else:
        for line in rcFile.readlines():
            self.rcLines.append(line)
        rcFile.close()
    self.commands = {}
    self.commands_doprompt = {}
    self.commands_silent = {}
    self.commands_defining = False
    self.commands_bnum = None
