def _test_do_not_rehash_dict_keys(self):
    n = 10
    d = dict.fromkeys(map(HashCountingInt, xrange(n)))
    self.assertEqual(sum((elem.hash_count for elem in d)), n)
    s = self.thetype(d)
    self.assertEqual(sum((elem.hash_count for elem in d)), n)
    s.difference(d)
    self.assertEqual(sum((elem.hash_count for elem in d)), n)
    if hasattr(s, 'symmetric_difference_update'):
        s.symmetric_difference_update(d)
    self.assertEqual(sum((elem.hash_count for elem in d)), n)
    d2 = dict.fromkeys(set(d))
    self.assertEqual(sum((elem.hash_count for elem in d)), n)
    d3 = dict.fromkeys(frozenset(d))
    self.assertEqual(sum((elem.hash_count for elem in d)), n)
    d3 = dict.fromkeys(frozenset(d), 123)
    self.assertEqual(sum((elem.hash_count for elem in d)), n)
    self.assertEqual(d3, dict.fromkeys(d, 123))
