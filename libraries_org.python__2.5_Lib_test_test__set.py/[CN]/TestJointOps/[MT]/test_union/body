def test_union(self):
    u = self.s.union(self.otherword)
    for c in self.letters:
        self.assertEqual((c in u), ((c in self.d) or (c in self.otherword)))
    self.assertEqual(self.s, self.thetype(self.word))
    self.assertEqual(type(u), self.thetype)
    self.assertRaises(PassThru, self.s.union, check_pass_thru())
    self.assertRaises(TypeError, self.s.union, [[]])
    for C in (set, frozenset, dict.fromkeys, str, unicode, list, tuple):
        self.assertEqual(self.thetype('abcba').union(C('cdc')), set('abcd'))
        self.assertEqual(self.thetype('abcba').union(C('efgfe')), set('abcefg'))
        self.assertEqual(self.thetype('abcba').union(C('ccb')), set('abc'))
        self.assertEqual(self.thetype('abcba').union(C('ef')), set('abcef'))
