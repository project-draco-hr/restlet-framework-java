def test_intersection(self):
    i = self.s.intersection(self.otherword)
    for c in self.letters:
        self.assertEqual((c in i), ((c in self.d) and (c in self.otherword)))
    self.assertEqual(self.s, self.thetype(self.word))
    self.assertEqual(type(i), self.thetype)
    self.assertRaises(PassThru, self.s.intersection, check_pass_thru())
    for C in (set, frozenset, dict.fromkeys, str, unicode, list, tuple):
        self.assertEqual(self.thetype('abcba').intersection(C('cdc')), set('cc'))
        self.assertEqual(self.thetype('abcba').intersection(C('efgfe')), set(''))
        self.assertEqual(self.thetype('abcba').intersection(C('ccb')), set('bc'))
        self.assertEqual(self.thetype('abcba').intersection(C('ef')), set(''))
