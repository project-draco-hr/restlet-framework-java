def get_app_object_old_style(self, req, environ):
    (source_uri, callable_name) = self.map_uri(req, environ)
    source_filename = source_uri
    if (not self.params['cache_callables']):
        self.log.debug('Caching of callables disabled')
        return self.load_object(source_filename, callable_name)
    if (not self.cache.has_key((source_filename, callable_name))):
        self.log.debug(('Callable object not in cache: %s#%s' % (source_filename, callable_name)))
        return self.load_object(source_filename, callable_name)
    (app_callable, last_mod) = self.cache.get((source_filename, callable_name))
    self.log.debug(('Callable object was in cache: %s#%s' % (source_filename, callable_name)))
    if self.params['reload_on_mod']:
        f = File(source_filename)
        if (f.lastModified() > last_mod):
            self.log.info(("Source file '%s' has been modified: reloading" % source_filename))
            return self.load_object(source_filename, callable_name)
    return app_callable
