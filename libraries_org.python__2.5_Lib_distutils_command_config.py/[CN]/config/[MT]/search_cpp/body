def search_cpp(self, pattern, body=None, headers=None, include_dirs=None, lang='c'):
    "Construct a source file (just like 'try_cpp()'), run it through\n        the preprocessor, and return true if any line of the output matches\n        'pattern'.  'pattern' should either be a compiled regex object or a\n        string containing a regex.  If both 'body' and 'headers' are None,\n        preprocesses an empty file -- which can be useful to determine the\n        symbols the preprocessor and compiler set by default.\n        "
    self._check_compiler()
    (src, out) = self._preprocess(body, headers, include_dirs, lang)
    if (type(pattern) is StringType):
        pattern = re.compile(pattern)
    file = open(out)
    match = 0
    while 1:
        line = file.readline()
        if (line == ''):
            break
        if pattern.search(line):
            match = 1
            break
    file.close()
    self._clean()
    return match
