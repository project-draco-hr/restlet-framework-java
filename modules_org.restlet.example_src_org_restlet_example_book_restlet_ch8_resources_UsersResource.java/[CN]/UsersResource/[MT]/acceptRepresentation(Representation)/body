{
  Form form=new Form(entity);
  User user=new User();
  user.setFirstName(form.getFirstValue("firstName"));
  user.setLastName(form.getFirstValue("lastName"));
  user.setLogin(form.getFirstValue("login"));
  user.setPassword(form.getFirstValue("password"));
  user.setAdministrator((form.getFirstValue("administrator") == null ? false : true));
  try {
    user=getObjectsFacade().createUser(user);
    getResponse().redirectSeeOther(getChildReference(getRequest().getResourceRef(),user.getId()));
  }
 catch (  ObjectsException e) {
    Map<String,Object> dataModel=new TreeMap<String,Object>();
    dataModel.put("currentUser",getCurrentUser());
    dataModel.put("users",users);
    dataModel.put("resourceRef",getRequest().getResourceRef());
    dataModel.put("rootRef",getRequest().getRootRef());
    dataModel.put("firstName",form.getFirstValue("firstName"));
    dataModel.put("lastName",form.getFirstValue("lastName"));
    dataModel.put("login",form.getFirstValue("login"));
    dataModel.put("password",form.getFirstValue("password"));
    dataModel.put("errorMessage",e.getMessage());
    getResponse().setEntity(getHTMLTemplateRepresentation("users.html",dataModel));
  }
}
