def _test_remove_or_delitem(self, method):
    key0 = self._box.add((self._template % 0))
    key1 = self._box.add((self._template % 1))
    self.assert_((len(self._box) == 2))
    method(key0)
    l = len(self._box)
    self.assert_((l == 1), ('actual l: %s' % l))
    self.assertRaises(KeyError, (lambda : self._box[key0]))
    self.assertRaises(KeyError, (lambda : method(key0)))
    self.assert_((self._box.get_string(key1) == (self._template % 1)))
    key2 = self._box.add((self._template % 2))
    self.assert_((len(self._box) == 2))
    method(key2)
    l = len(self._box)
    self.assert_((l == 1), ('actual l: %s' % l))
    self.assertRaises(KeyError, (lambda : self._box[key2]))
    self.assertRaises(KeyError, (lambda : method(key2)))
    self.assert_((self._box.get_string(key1) == (self._template % 1)))
    method(key1)
    self.assert_((len(self._box) == 0))
    self.assertRaises(KeyError, (lambda : self._box[key1]))
    self.assertRaises(KeyError, (lambda : method(key1)))
