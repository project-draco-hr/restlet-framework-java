def test_notimplemented(self):
    box = mailbox.Mailbox('path')
    self.assertRaises(NotImplementedError, (lambda : box.add('')))
    self.assertRaises(NotImplementedError, (lambda : box.remove('')))
    self.assertRaises(NotImplementedError, (lambda : box.__delitem__('')))
    self.assertRaises(NotImplementedError, (lambda : box.discard('')))
    self.assertRaises(NotImplementedError, (lambda : box.__setitem__('', '')))
    self.assertRaises(NotImplementedError, (lambda : box.iterkeys()))
    self.assertRaises(NotImplementedError, (lambda : box.keys()))
    self.assertRaises(NotImplementedError, (lambda : box.itervalues().next()))
    self.assertRaises(NotImplementedError, (lambda : box.__iter__().next()))
    self.assertRaises(NotImplementedError, (lambda : box.values()))
    self.assertRaises(NotImplementedError, (lambda : box.iteritems().next()))
    self.assertRaises(NotImplementedError, (lambda : box.items()))
    self.assertRaises(NotImplementedError, (lambda : box.get('')))
    self.assertRaises(NotImplementedError, (lambda : box.__getitem__('')))
    self.assertRaises(NotImplementedError, (lambda : box.get_message('')))
    self.assertRaises(NotImplementedError, (lambda : box.get_string('')))
    self.assertRaises(NotImplementedError, (lambda : box.get_file('')))
    self.assertRaises(NotImplementedError, (lambda : box.has_key('')))
    self.assertRaises(NotImplementedError, (lambda : box.__contains__('')))
    self.assertRaises(NotImplementedError, (lambda : box.__len__()))
    self.assertRaises(NotImplementedError, (lambda : box.clear()))
    self.assertRaises(NotImplementedError, (lambda : box.pop('')))
    self.assertRaises(NotImplementedError, (lambda : box.popitem()))
    self.assertRaises(NotImplementedError, (lambda : box.update((('', ''),))))
    self.assertRaises(NotImplementedError, (lambda : box.flush()))
    self.assertRaises(NotImplementedError, (lambda : box.lock()))
    self.assertRaises(NotImplementedError, (lambda : box.unlock()))
    self.assertRaises(NotImplementedError, (lambda : box.close()))
