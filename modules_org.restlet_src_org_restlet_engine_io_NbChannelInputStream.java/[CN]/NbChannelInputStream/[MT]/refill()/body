{
  int bytesRead=0;
  while (bytesRead == 0) {
    bytesRead=readChannel();
    if (bytesRead == 0) {
      if (selectionChannel != null) {
        try {
          if (this.selectionRegistration == null) {
            this.selectionRegistration=this.selectionChannel.getRegistration();
            this.selectionRegistration.setInterestOperations(SelectionKey.OP_READ);
            this.selectionRegistration.setListener(new SelectionListener(){
              public void onSelected(){
                if (Context.getCurrentLogger().isLoggable(Level.FINE)) {
                  Context.getCurrentLogger().log(Level.FINE,"NbChannelInputStream selected");
                }
                selectionRegistration.suspend();
                selectionRegistration.unblock();
                selectionRegistration.setListener(null);
              }
            }
);
          }
 else {
            this.selectionRegistration.resume();
          }
          this.selectionRegistration.block();
        }
 catch (        Exception e) {
          Context.getCurrentLogger().log(Level.FINE,"Exception while registering or waiting for new content",e);
        }
        bytesRead=readChannel();
      }
 else       if (selectableChannel != null) {
        Selector selector=null;
        SelectionKey selectionKey=null;
        try {
          selector=SelectorFactory.getSelector();
          if (selector != null) {
            selectionKey=this.selectableChannel.register(selector,SelectionKey.OP_READ);
            selector.select(IoUtils.TIMEOUT_MS);
          }
        }
  finally {
          NioUtils.release(selector,selectionKey);
        }
        bytesRead=readChannel();
      }
    }
  }
  if (bytesRead == -1) {
    this.endReached=true;
    if (this.selectionRegistration != null) {
      this.selectionRegistration.setCanceling(true);
    }
  }
}
