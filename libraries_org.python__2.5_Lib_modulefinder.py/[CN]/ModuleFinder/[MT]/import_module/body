def import_module(self, partname, fqname, parent):
    self.msgin(3, 'import_module', partname, fqname, parent)
    try:
        m = self.modules[fqname]
    except KeyError:
        pass
    else:
        self.msgout(3, 'import_module ->', m)
        return m
    if self.badmodules.has_key(fqname):
        self.msgout(3, 'import_module -> None')
        return None
    if (parent and (parent.__path__ is None)):
        self.msgout(3, 'import_module -> None')
        return None
    try:
        (fp, pathname, stuff) = self.find_module(partname, (parent and parent.__path__), parent)
    except ImportError:
        self.msgout(3, 'import_module ->', None)
        return None
    try:
        m = self.load_module(fqname, fp, pathname, stuff)
    finally:
        if fp:
            fp.close()
    if parent:
        setattr(parent, partname, m)
    self.msgout(3, 'import_module ->', m)
    return m
