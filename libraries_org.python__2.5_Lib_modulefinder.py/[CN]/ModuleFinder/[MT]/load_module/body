def load_module(self, fqname, fp, pathname, (suffix, mode, type)):
    self.msgin(2, 'load_module', fqname, (fp and 'fp'), pathname)
    if (type == imp.PKG_DIRECTORY):
        m = self.load_package(fqname, pathname)
        self.msgout(2, 'load_module ->', m)
        return m
    if (type == imp.PY_SOURCE):
        co = compile((fp.read() + '\n'), pathname, 'exec')
    elif (type == imp.PY_COMPILED):
        if (fp.read(4) != imp.get_magic()):
            self.msgout(2, 'raise ImportError: Bad magic number', pathname)
            raise ImportError, ('Bad magic number in %s' % pathname)
        fp.read(4)
        co = marshal.load(fp)
    else:
        co = None
    m = self.add_module(fqname)
    m.__file__ = pathname
    if co:
        if self.replace_paths:
            co = self.replace_paths_in_code(co)
        m.__code__ = co
        self.scan_code(co, m)
    self.msgout(2, 'load_module ->', m)
    return m
