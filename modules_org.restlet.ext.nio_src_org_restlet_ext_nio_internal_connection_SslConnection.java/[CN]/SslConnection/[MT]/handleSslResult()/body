{
  if (getLogger().isLoggable(Level.FINER)) {
    getLogger().log(Level.FINER,"Handling SSL result: " + getSslEngineStatus());
  }
switch (getSslEngineStatus()) {
case BUFFER_OVERFLOW:
    if (getLogger().isLoggable(Level.FINER)) {
      getLogger().log(Level.FINER,"SSL buffer overflow state detected. Application buffer needs to be consumed or compacted before retrying.");
    }
  break;
case BUFFER_UNDERFLOW:
if (getLogger().isLoggable(Level.FINER)) {
  getLogger().log(Level.FINER,"SSL buffer underflow state detected. Network buffer needs to be consumed or compacted before retrying.");
}
if ((getSslHandshakeStatus() == HandshakeStatus.NEED_UNWRAP) && ((getInboundWay().getIoState() == IoState.IDLE) || (getInboundWay().getIoState() == IoState.READY))) {
getInboundWay().setIoState(IoState.INTEREST);
}
break;
case CLOSED:
close(true);
break;
case OK:
handleSslHandshake();
break;
}
setSslEngineResult(null);
}
