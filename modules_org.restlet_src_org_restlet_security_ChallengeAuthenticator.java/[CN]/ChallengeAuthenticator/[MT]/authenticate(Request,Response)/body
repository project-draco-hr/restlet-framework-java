{
  boolean result=false;
  final boolean loggable=getLogger().isLoggable(Level.FINE);
switch (authenticate(request.getChallengeResponse())) {
case AUTHENTICATION_VALID:
    ChallengeResponse challengeResponse=request.getChallengeResponse();
  result=true;
if (loggable) {
  if (challengeResponse != null) {
    getLogger().fine("Authentication succeeded. Valid credentials provided for identifier: " + request.getChallengeResponse().getIdentifier() + ".");
  }
 else {
    getLogger().fine("Authentication succeeded. Valid credentials provided.");
  }
}
break;
case AUTHENTICATION_MISSING:
if (loggable) {
getLogger().fine("Authentication failed. No credentials provided.");
}
challenge(response,false);
break;
case AUTHENTICATION_INVALID:
if (loggable) {
getLogger().fine("Authentication failed. Invalid credentials provided.");
}
if (isRechallengeEnabled()) {
challenge(response,false);
}
 else {
forbid(response);
}
break;
case AUTHENTICATION_STALE:
if (loggable) {
getLogger().fine("Authentication failed. Stale credentials provided.");
}
challenge(response,true);
break;
}
return result;
}
