{
  boolean result=false;
  final boolean loggable=getLogger().isLoggable(Level.FINE);
  if (getVerifier() != null) {
switch (getVerifier().verify(request,response)) {
case Verifier.RESULT_VALID:
      result=true;
    if (loggable) {
      ChallengeResponse challengeResponse=request.getChallengeResponse();
      if (challengeResponse != null) {
        getLogger().fine("Authentication succeeded. Valid credentials provided for identifier: " + request.getChallengeResponse().getIdentifier() + ".");
      }
 else {
        getLogger().fine("Authentication succeeded. Valid credentials provided.");
      }
    }
  break;
case Verifier.RESULT_MISSING:
if (loggable) {
  getLogger().fine("Authentication failed. No credentials provided.");
}
challenge(response,false);
break;
case Verifier.RESULT_INVALID:
if (loggable) {
getLogger().fine("Authentication failed. Invalid credentials provided.");
}
if (isRechallenging()) {
challenge(response,false);
}
 else {
forbid(response);
}
break;
case Verifier.RESULT_STALE:
if (loggable) {
getLogger().fine("Authentication failed. Stale credentials provided.");
}
challenge(response,true);
break;
case Verifier.RESULT_UNKNOWN:
if (loggable) {
getLogger().fine("Authentication failed. Identifier is unknown.");
}
if (isRechallenging()) {
challenge(response,false);
}
 else {
forbid(response);
}
break;
}
}
 else {
getLogger().warning("Authentication failed. No verifier provided.");
}
return result;
}
