def test_dunder_module(self):
    self.assertEqual(str.__module__, '__builtin__')


    class Foo:
        pass
    Fu = types.ClassType('Fu', (), {})
    for cls in (Foo, Fu):
        self.assert_(('__module__' in cls.__dict__))
        self.assertEqual(cls.__module__, __name__)
        self.assertEqual(str(cls), ('%s.%s' % (__name__, cls.__name__)))
        self.assert_(repr(cls).startswith(('<class %s.%s at' % (__name__, cls.__name__))))
        obj = cls()
        self.assert_(str(obj).startswith(('<%s.%s instance at' % (__name__, cls.__name__))))


    class Bar(object):
        pass


    class Baz(Object):
        pass
    Bang = type('Bang', (), {})
    for cls in (Bar, Baz, Bang):
        self.assert_(('__module__' in cls.__dict__))
        self.assertEqual(cls.__module__, __name__)
        self.assertEqual(str(cls), ("<class '%s.%s'>" % (__name__, cls.__name__)))
        self.assertEqual(repr(cls), ("<class '%s.%s'>" % (__name__, cls.__name__)))
    self.assert_(str(Bar()).startswith(('<%s.Bar object at' % __name__)))
    self.assert_(str(Baz()).startswith(('org.python.proxies.%s$Baz' % __name__)))
