'A generic class to build line-oriented command interpreters.\n\nInterpreters constructed with this class obey the following conventions:\n\n1. End of file on input is processed as the command \'EOF\'.\n2. A command is parsed out of each line by collecting the prefix composed\n   of characters in the identchars member.\n3. A command `foo\' is dispatched to a method \'do_foo()\'; the do_ method\n   is passed a single argument consisting of the remainder of the line.\n4. Typing an empty line repeats the last command.  (Actually, it calls the\n   method `emptyline\', which may be overridden in a subclass.)\n5. There is a predefined `help\' method.  Given an argument `topic\', it\n   calls the command `help_topic\'.  With no arguments, it lists all topics\n   with defined help_ functions, broken into up to three topics; documented\n   commands, miscellaneous help topics, and undocumented commands.\n6. The command \'?\' is a synonym for `help\'.  The command \'!\' is a synonym\n   for `shell\', if a do_shell method exists.\n7. If completion is enabled, completing commands will be done automatically,\n   and completing of commands args is done by calling complete_foo() with\n   arguments text, line, begidx, endidx.  text is string we are matching\n   against, all returned matches must begin with it.  line is the current\n   input line (lstripped), begidx and endidx are the beginning and end\n   indexes of the text being matched, which could be used to provide\n   different completion depending upon which position the argument is in.\n\nThe `default\' method may be overridden to intercept commands for which there\nis no do_ method.\n\nThe `completedefault\' method may be overridden to intercept completions for\ncommands that have no complete_ method.\n\nThe data member `self.ruler\' sets the character used to draw separator lines\nin the help messages.  If empty, no ruler line is drawn.  It defaults to "=".\n\nIf the value of `self.intro\' is nonempty when the cmdloop method is called,\nit is printed out on interpreter startup.  This value may be overridden\nvia an optional argument to the cmdloop() method.\n\nThe data members `self.doc_header\', `self.misc_header\', and\n`self.undoc_header\' set the headers used for the help function\'s\nlistings of documented functions, miscellaneous topics, and undocumented\nfunctions respectively.\n\nThese interpreters use raw_input; thus, if the readline module is loaded,\nthey automatically support Emacs-like command history and editing features.\n'
import string
__all__ = ['Cmd']
PROMPT = '(Cmd) '
IDENTCHARS = ((string.ascii_letters + string.digits) + '_')
