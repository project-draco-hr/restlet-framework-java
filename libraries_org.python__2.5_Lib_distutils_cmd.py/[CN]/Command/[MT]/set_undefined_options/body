def set_undefined_options(self, src_cmd, *option_pairs):
    'Set the values of any "undefined" options from corresponding\n        option values in some other command object.  "Undefined" here means\n        "is None", which is the convention used to indicate that an option\n        has not been changed between \'initialize_options()\' and\n        \'finalize_options()\'.  Usually called from \'finalize_options()\' for\n        options that depend on some other command rather than another\n        option of the same command.  \'src_cmd\' is the other command from\n        which option values will be taken (a command object will be created\n        for it if necessary); the remaining arguments are\n        \'(src_option,dst_option)\' tuples which mean "take the value of\n        \'src_option\' in the \'src_cmd\' command object, and copy it to\n        \'dst_option\' in the current command object".\n        '
    src_cmd_obj = self.distribution.get_command_obj(src_cmd)
    src_cmd_obj.ensure_finalized()
    for (src_option, dst_option) in option_pairs:
        if (getattr(self, dst_option) is None):
            setattr(self, dst_option, getattr(src_cmd_obj, src_option))
