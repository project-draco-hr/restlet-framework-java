{
  this.contentBuffer.delete(0,this.contentBuffer.length() + 1);
  if (this.contentDepth >= 0) {
    if (this.currentContentWriter != null) {
      this.currentContentWriter.startElement(uri,localName,qName,attrs);
    }
    this.contentDepth++;
  }
 else   if (uri.equalsIgnoreCase(Feed.ATOM_NAMESPACE)) {
    if (localName.equals("feed")) {
      String attr=attrs.getValue("xml:base");
      if (attr != null) {
        this.currentFeed.setBaseReference(new Reference(attr));
      }
      this.state=State.FEED;
      startFeed(this.currentFeed);
    }
 else     if (localName.equals("title")) {
      startTextElement(attrs);
      if (this.state == State.FEED) {
        this.state=State.FEED_TITLE;
      }
 else       if (this.state == State.FEED_ENTRY) {
        this.state=State.FEED_ENTRY_TITLE;
      }
 else       if (this.state == State.FEED_ENTRY_SOURCE) {
        this.state=State.FEED_ENTRY_SOURCE_TITLE;
      }
    }
 else     if (localName.equals("summary")) {
      startTextElement(attrs);
      if (this.state == State.FEED_ENTRY) {
        this.state=State.FEED_ENTRY_SUMMARY;
      }
    }
 else     if (localName.equals("updated")) {
      this.currentDate=new Date();
      if (this.state == State.FEED) {
        this.state=State.FEED_UPDATED;
      }
 else       if (this.state == State.FEED_ENTRY) {
        this.state=State.FEED_ENTRY_UPDATED;
      }
 else       if (this.state == State.FEED_ENTRY_SOURCE) {
        this.state=State.FEED_ENTRY_SOURCE_UPDATED;
      }
    }
 else     if (localName.equals("published")) {
      this.currentDate=new Date();
      if (this.state == State.FEED_ENTRY) {
        this.state=State.FEED_ENTRY_PUBLISHED;
      }
    }
 else     if (localName.equals("author")) {
      this.currentPerson=new Person();
      if (this.state == State.FEED) {
        this.state=State.FEED_AUTHOR;
      }
 else       if (this.state == State.FEED_ENTRY) {
        this.state=State.FEED_ENTRY_AUTHOR;
      }
 else       if (this.state == State.FEED_ENTRY_SOURCE) {
        this.state=State.FEED_ENTRY_SOURCE_AUTHOR;
      }
    }
 else     if (localName.equals("name")) {
      if (this.state == State.FEED_AUTHOR) {
        this.state=State.FEED_AUTHOR_NAME;
      }
 else       if (this.state == State.FEED_ENTRY_AUTHOR) {
        this.state=State.FEED_ENTRY_AUTHOR_NAME;
      }
 else       if (this.state == State.FEED_ENTRY_SOURCE_AUTHOR) {
        this.state=State.FEED_ENTRY_SOURCE_AUTHOR_NAME;
      }
    }
 else     if (localName.equals("id")) {
      if (this.state == State.FEED) {
        this.state=State.FEED_ID;
      }
 else       if (this.state == State.FEED_ENTRY) {
        this.state=State.FEED_ENTRY_ID;
      }
 else       if (this.state == State.FEED_ENTRY_SOURCE) {
        this.state=State.FEED_ENTRY_SOURCE_ID;
      }
    }
 else     if (localName.equals("link")) {
      this.currentLink=new Link();
      this.currentLink.setHref(new Reference(attrs.getValue("","href")));
      this.currentLink.setRel(Relation.valueOf(attrs.getValue("","rel")));
      String type=attrs.getValue("","type");
      if (type != null && type.length() > 0) {
        this.currentLink.setType(new MediaType(type));
      }
      this.currentLink.setHrefLang(new Language(attrs.getValue("","hreflang")));
      this.currentLink.setTitle(attrs.getValue("","title"));
      final String attr=attrs.getValue("","length");
      this.currentLink.setLength((attr == null) ? -1L : Long.parseLong(attr));
      if (this.state == State.FEED) {
        this.state=State.FEED_LINK;
      }
 else       if (this.state == State.FEED_ENTRY) {
        this.state=State.FEED_ENTRY_LINK;
      }
 else       if (this.state == State.FEED_ENTRY_SOURCE) {
        this.state=State.FEED_ENTRY_SOURCE_LINK;
      }
      this.currentContent=new Content();
      initiateInlineMixedContent();
      this.currentLink.setContent(currentContent);
      startLink(this.currentLink);
    }
 else     if (localName.equalsIgnoreCase("entry")) {
      if (this.state == State.FEED) {
        this.currentEntry=new Entry();
        this.state=State.FEED_ENTRY;
      }
      startEntry(this.currentEntry);
    }
 else     if (localName.equals("category")) {
      this.currentCategory=new Category();
      this.currentCategory.setTerm(attrs.getValue("","term"));
      this.currentCategory.setScheme(new Reference(attrs.getValue("","scheme")));
      this.currentCategory.setLabel(attrs.getValue("","label"));
      if (this.state == State.FEED) {
        this.state=State.FEED_CATEGORY;
      }
 else       if (this.state == State.FEED_ENTRY) {
        this.state=State.FEED_ENTRY_CATEGORY;
      }
 else       if (this.state == State.FEED_ENTRY_SOURCE) {
        this.state=State.FEED_ENTRY_SOURCE_CATEGORY;
      }
    }
 else     if (localName.equalsIgnoreCase("content")) {
      if (this.state == State.FEED_ENTRY) {
        contentType=getMediaType(attrs.getValue("","type"));
        String srcAttr=attrs.getValue("","src");
        this.currentContent=new Content();
        if (srcAttr == null) {
          initiateInlineMixedContent();
        }
 else {
          this.currentContent.setExternalRef(new Reference(srcAttr));
          this.currentContent.setExternalType(contentType);
        }
        this.currentEntry.setContent(currentContent);
        this.state=State.FEED_ENTRY_CONTENT;
      }
      startContent(this.currentContent);
    }
  }
  super.startElement(uri,localName,qName,attrs);
}
