{
  if (response.getStatus().equals(Status.CLIENT_ERROR_METHOD_NOT_ALLOWED) || Method.OPTIONS.equals(response.getRequest().getMethod())) {
    final StringBuilder sb=new StringBuilder();
    boolean first=true;
    for (    final Method method : response.getAllowedMethods()) {
      if (first) {
        first=false;
      }
 else {
        sb.append(", ");
      }
      sb.append(method.getName());
    }
    responseHeaders.add(HttpConstants.HEADER_ALLOW,sb.toString());
  }
  responseHeaders.add(HttpConstants.HEADER_DATE,DateUtils.format(new Date()));
  final List<CookieSetting> cookies=response.getCookieSettings();
  for (int i=0; i < cookies.size(); i++) {
    responseHeaders.add(HttpConstants.HEADER_SET_COOKIE,CookieUtils.format(cookies.get(i)));
  }
  if (response.getLocationRef() != null) {
    responseHeaders.add(HttpConstants.HEADER_LOCATION,response.getLocationRef().toString());
  }
  if (response.getChallengeRequests() != null) {
    for (    final ChallengeRequest challengeRequest : response.getChallengeRequests()) {
      responseHeaders.add(HttpConstants.HEADER_WWW_AUTHENTICATE,AuthenticationUtils.format(challengeRequest));
    }
  }
  if (!((response.getRequest().getClientInfo().getAgent() != null) && response.getRequest().getClientInfo().getAgent().contains("MSIE"))) {
    final Set<Dimension> dimensions=response.getDimensions();
    final String vary=HttpUtils.createVaryHeader(dimensions);
    if (vary != null) {
      responseHeaders.add(HttpConstants.HEADER_VARY,vary);
    }
  }
  if (response.getServerInfo().isAcceptRanges()) {
    responseHeaders.add(HttpConstants.HEADER_ACCEPT_RANGES,"bytes");
  }
}
