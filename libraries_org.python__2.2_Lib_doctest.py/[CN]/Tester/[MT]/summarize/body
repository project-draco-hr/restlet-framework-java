def summarize(self, verbose=None):
    "\n        verbose=None -> summarize results, return (#failures, #tests).\n\n        Print summary of test results to stdout.\n        Optional arg 'verbose' controls how wordy this is.  By\n        default, use the verbose setting established by the\n        constructor.\n        "
    if (verbose is None):
        verbose = self.verbose
    notests = []
    passed = []
    failed = []
    totalt = totalf = 0
    for x in self.name2ft.items():
        (name, (f, t)) = x
        assert (f <= t)
        totalt = (totalt + t)
        totalf = (totalf + f)
        if (t == 0):
            notests.append(name)
        elif (f == 0):
            passed.append((name, t))
        else:
            failed.append(x)
    if verbose:
        if notests:
            print len(notests), 'items had no tests:'
            notests.sort()
            for thing in notests:
                print '   ', thing
        if passed:
            print len(passed), 'items passed all tests:'
            passed.sort()
            for (thing, count) in passed:
                print (' %3d tests in %s' % (count, thing))
    if failed:
        print ('*' * 65)
        print len(failed), 'items had failures:'
        failed.sort()
        for (thing, (f, t)) in failed:
            print (' %3d of %3d in %s' % (f, t, thing))
    if verbose:
        print totalt, 'tests in', len(self.name2ft), 'items.'
        print (totalt - totalf), 'passed and', totalf, 'failed.'
    if totalf:
        print '***Test Failed***', totalf, 'failures.'
    elif verbose:
        print 'Test passed.'
    return (totalf, totalt)
