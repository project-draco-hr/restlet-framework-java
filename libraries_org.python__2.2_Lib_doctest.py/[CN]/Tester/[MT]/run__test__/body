def run__test__(self, d, name):
    'd, name -> Treat dict d like module.__test__.\n\n        Return (#failures, #tries).\n        See testmod.__doc__ for details.\n        '
    failures = tries = 0
    prefix = (name + '.')
    savepvt = self.isprivate
    try:
        self.isprivate = (lambda *args: 0)
        keys = d.keys()
        keys.sort()
        for k in keys:
            v = d[k]
            thisname = (prefix + k)
            if (type(v) in _StringTypes):
                (f, t) = self.runstring(v, thisname)
            elif (_isfunction(v) or _isclass(v)):
                (f, t) = self.rundoc(v, thisname)
            else:
                raise TypeError(('Tester.run__test__: values in dict must be strings, functions or classes; ' + `v`))
            failures = (failures + f)
            tries = (tries + t)
    finally:
        self.isprivate = savepvt
    return (failures, tries)
