{
  if (entity == null || !entity.isAvailable()) {
    addHeader(HeaderConstants.HEADER_CONTENT_LENGTH,"0",headers);
  }
 else   if (entity.getAvailableSize() != Representation.UNKNOWN_SIZE) {
    addHeader(HeaderConstants.HEADER_CONTENT_LENGTH,Long.toString(entity.getAvailableSize()),headers);
  }
  if (entity != null) {
    addHeader(HeaderConstants.HEADER_CONTENT_ENCODING,EncodingWriter.write(entity.getEncodings()),headers);
    addHeader(HeaderConstants.HEADER_CONTENT_LANGUAGE,LanguageWriter.write(entity.getLanguages()),headers);
    if (entity.getLocationRef() != null) {
      addHeader(HeaderConstants.HEADER_CONTENT_LOCATION,entity.getLocationRef().getTargetRef().toString(),headers);
    }
    if (entity.getDigest() != null && Digest.ALGORITHM_MD5.equals(entity.getDigest().getAlgorithm())) {
      addHeader(HeaderConstants.HEADER_CONTENT_MD5,new String(org.restlet.engine.util.Base64.encode(entity.getDigest().getValue(),false)),headers);
    }
    if (entity.getRange() != null) {
      addHeader(HeaderConstants.HEADER_CONTENT_RANGE,RangeWriter.write(entity.getRange(),entity.getSize()),headers);
    }
    if (entity.getMediaType() != null) {
      String contentType=entity.getMediaType().toString();
      if ((entity.getMediaType().getParameters().getFirstValue("charset") == null) && (entity.getCharacterSet() != null)) {
        contentType=contentType + "; charset=" + entity.getCharacterSet().getName();
      }
      addHeader(HeaderConstants.HEADER_CONTENT_TYPE,contentType,headers);
    }
    if (entity.getExpirationDate() != null) {
      addHeader(HeaderConstants.HEADER_EXPIRES,DateWriter.write(entity.getExpirationDate()),headers);
    }
    if (entity.getModificationDate() != null) {
      addHeader(HeaderConstants.HEADER_LAST_MODIFIED,DateWriter.write(entity.getModificationDate()),headers);
    }
    if (entity.getTag() != null) {
      addHeader(HeaderConstants.HEADER_ETAG,TagWriter.write(entity.getTag()),headers);
    }
    if (entity.getDisposition() != null && !Disposition.TYPE_NONE.equals(entity.getDisposition().getType())) {
      addHeader(HeaderConstants.HEADER_CONTENT_DISPOSITION,DispositionWriter.write(entity.getDisposition()),headers);
    }
  }
}
