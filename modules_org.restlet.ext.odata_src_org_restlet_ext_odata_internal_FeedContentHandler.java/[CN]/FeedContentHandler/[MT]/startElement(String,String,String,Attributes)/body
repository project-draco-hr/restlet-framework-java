{
  if (parseAssociation) {
    if (extraFeedHandler != null) {
      extraFeedHandler.startElement(uri,localName,qName,attrs);
    }
 else {
      extraEntryHandler.startElement(uri,localName,qName,attrs);
    }
    if (localName.equals("entry")) {
      Entry entry=new Entry();
      if (extraFeedHandler != null) {
        extraFeedHandler.startEntry(entry);
      }
 else {
        extraEntryHandler.startEntry(entry);
      }
    }
 else     if (localName.equals("link")) {
      Link link=new Link();
      link.setHref(new Reference(attrs.getValue("","href")));
      link.setRel(Relation.valueOf(attrs.getValue("","rel")));
      String type=attrs.getValue("","type");
      if (type != null && type.length() > 0) {
        link.setType(new MediaType(type));
      }
      link.setHrefLang(new Language(attrs.getValue("","hreflang")));
      link.setTitle(attrs.getValue("","title"));
      final String attr=attrs.getValue("","length");
      link.setLength((attr == null) ? -1L : Long.parseLong(attr));
      if (extraFeedHandler != null) {
        extraFeedHandler.startLink(link);
      }
 else {
        extraEntryHandler.startLink(link);
      }
    }
 else     if (localName.equals("content")) {
      Content content=new Content();
      if (extraFeedHandler != null) {
        extraFeedHandler.startContent(content);
      }
 else {
        extraEntryHandler.startContent(content);
      }
    }
  }
 else   if (parseProperties) {
    if (Service.WCF_DATASERVICES_NAMESPACE.equals(uri)) {
      sb=new StringBuilder();
      parseProperty=true;
      parsePropertyNull=Boolean.parseBoolean(attrs.getValue(Service.WCF_DATASERVICES_METADATA_NAMESPACE,"null"));
    }
  }
 else   if (parseContent) {
    if (Service.WCF_DATASERVICES_METADATA_NAMESPACE.equals(uri) && "properties".equals(localName)) {
      parseProperties=true;
    }
 else {
      if (entityType.isBlob() && entityType.getBlobValueRefProperty() != null) {
        String str=attrs.getValue("src");
        if (str != null) {
          try {
            ReflectUtils.invokeSetter(entity,entityType.getBlobValueRefProperty().getName(),new Reference(str));
          }
 catch (          Exception e) {
            getLogger().warning("Cannot set " + entityType.getBlobValueRefProperty().getName() + " property on "+ entity+ " with value "+ str);
          }
        }
      }
    }
  }
 else   if (Service.WCF_DATASERVICES_METADATA_NAMESPACE.equals(uri) && "count".equals(localName)) {
    sb=new StringBuilder();
    parseCount=true;
  }
 else   if (parseEntry) {
    if (Service.WCF_DATASERVICES_METADATA_NAMESPACE.equals(uri) && "properties".equals(localName) && entityType.isBlob()) {
      parseProperties=true;
    }
 else {
      eltPath.add(localName);
      StringBuilder sb=new StringBuilder();
      for (int i=0; i < eltPath.size(); i++) {
        if (i > 0) {
          sb.append("/");
        }
        sb.append(eltPath.get(i));
      }
      String str=sb.toString();
      for (      Mapping m : metadata.getMappings()) {
        if (entityType != null && entityType.equals(m.getType()) && m.getNsUri() != null && m.getNsUri().equals(uri) && str.equals(m.getValueNodePath())) {
          if (m.isAttributeValue()) {
            String value=attrs.getValue(uri,m.getValueAttributeName());
            if (value != null) {
              try {
                ReflectUtils.invokeSetter(entity,m.getPropertyPath(),value);
              }
 catch (              Exception e) {
                getLogger().warning("Cannot set " + m.getPropertyPath() + " property on "+ entity+ " with value "+ value);
              }
            }
          }
 else {
            this.sb=new StringBuilder();
            mapping=m;
          }
          break;
        }
      }
    }
  }
}
