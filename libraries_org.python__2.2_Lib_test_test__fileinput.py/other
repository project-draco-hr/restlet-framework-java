'\nTests for fileinput module.\nNick Mathewson\n'
from test_support import verify, verbose, TESTFN
import sys, os, re
from StringIO import StringIO
from fileinput import FileInput
pat = re.compile('LINE (\\d+) OF FILE (\\d+)')
for (round, bs) in ((0, 0), (1, 30)):
    try:
        writeFiles()
        runTests(t1, t2, t3, t4, bs, round)
    finally:
        remove_tempfiles(t1, t2, t3, t4)
if verbose:
    print '13. 0-byte files'
try:
    t1 = writeTmp(1, [''])
    t2 = writeTmp(2, [''])
    t3 = writeTmp(3, ['The only line there is.\n'])
    t4 = writeTmp(4, [''])
    fi = FileInput(files=(t1, t2, t3, t4))
    line = fi.readline()
    verify((line == 'The only line there is.\n'))
    verify((fi.lineno() == 1))
    verify((fi.filelineno() == 1))
    verify((fi.filename() == t3))
    line = fi.readline()
    verify((not line))
    verify((fi.lineno() == 1))
    verify((fi.filelineno() == 0))
    verify((fi.filename() == t4))
    fi.close()
finally:
    remove_tempfiles(t1, t2, t3, t4)
if verbose:
    print "14. Files that don't end with newline"
try:
    t1 = writeTmp(1, ['A\nB\nC'])
    t2 = writeTmp(2, ['D\nE\nF'])
    fi = FileInput(files=(t1, t2))
    lines = list(fi)
    verify((lines == ['A\n', 'B\n', 'C', 'D\n', 'E\n', 'F']))
    verify((fi.filelineno() == 3))
    verify((fi.lineno() == 6))
finally:
    remove_tempfiles(t1, t2)
