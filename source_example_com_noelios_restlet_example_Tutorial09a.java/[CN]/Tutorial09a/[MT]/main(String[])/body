{
  try {
    RestletContainer myContainer=new RestletContainer("My container");
    Server server=new GenericServer(Protocols.HTTP,"My server",myContainer,8182);
    myContainer.addServer(server);
    LogChainlet log=new LogChainlet(myContainer,"com.noelios.restlet.example");
    myContainer.attach(log);
    StatusChainlet status=new StatusChainlet(myContainer,true,"webmaster@mysite.org","http://www.mysite.org");
    log.attach(status);
    GuardChainlet guard=new GuardChainlet(myContainer,"com.noelios.restlet.example",true,ChallengeSchemes.HTTP_BASIC,"Restlet tutorial",true){
      protected boolean authorize(      Call call){
        return "scott".equals(call.getSecurity().getLogin()) && "tiger".equals(call.getSecurity().getPassword());
      }
    }
;
    status.attach(guard);
    HostMaplet host=new HostMaplet(myContainer,8182);
    guard.attach(host);
    DirectoryRestlet dirRestlet=new DirectoryRestlet(myContainer,"D:/Restlet/www/docs/api/",true,"index");
    dirRestlet.addExtension("html",MediaTypes.TEXT_HTML);
    dirRestlet.addExtension("css",MediaTypes.TEXT_CSS);
    dirRestlet.addExtension("gif",MediaTypes.IMAGE_GIF);
    host.attach("/",dirRestlet);
    myContainer.start();
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}
