{
  for (  Field field : this.injectFieldsContextResolvers) {
    ContextResolver<?> contextResolver;
    contextResolver=getContextResolver(field,allResolvers);
    Util.inject(jaxRsResObj,field,contextResolver);
  }
  for (  Field mbwField : this.injectFieldsMbWorkers) {
    Util.inject(jaxRsResObj,mbwField,messageBodyWorkers);
  }
  for (  Field contextField : this.injectFieldsCallContext) {
    if (callContext == null)     throw new NotYetImplementedException("Sorry, @CallContext on providers is only allowed for ContextResolvers and MessageBodyWorkers");
    Util.inject(jaxRsResObj,contextField,callContext);
  }
  for (  Field clientInfoField : this.injectFieldsClientInfo) {
    if (callContext == null)     throw new NotYetImplementedException("Sorry, @CallContext on providers is only allowed for ContextResolvers and MessageBodyWorkers");
    ClientInfo clientInfo=callContext.getRequest().getClientInfo();
    Util.inject(jaxRsResObj,clientInfoField,clientInfo);
  }
  for (  Field conditionsField : this.injectFieldsConditions) {
    if (callContext == null)     throw new NotYetImplementedException("Sorry, @CallContext on providers is only allowed for ContextResolvers and MessageBodyWorkers");
    Conditions conditions=callContext.getRequest().getConditions();
    Util.inject(jaxRsResObj,conditionsField,conditions);
  }
}
